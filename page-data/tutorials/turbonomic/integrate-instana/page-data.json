{"componentChunkName":"component---src-pages-tutorials-turbonomic-integrate-instana-index-mdx","path":"/tutorials/turbonomic/integrate-instana/","result":{"pageContext":{"frontmatter":{"title":"3 - App Data Target","description":"Get application performance data for business critical applications"},"relativePagePath":"/tutorials/turbonomic/integrate-instana/index.mdx","titleType":"page","MdxNode":{"id":"13674655-8d0f-5da4-9464-0f66ea149a6a","children":[],"parent":"fcca9c3d-8aea-5894-803b-e646737d391a","internal":{"content":"---\r\ntitle: 3 - App Data Target\r\ndescription: Get application performance data for business critical applications\r\n---\r\n\r\n<AnchorLinks>\r\n  <AnchorLink>3-1: Introduction</AnchorLink>\r\n  <AnchorLink>3-2: Ingest application performance data from Instana</AnchorLink>\r\n  <AnchorLink>3-3: Summary</AnchorLink>\r\n</AnchorLinks>\r\n\r\n## 3-1: Introduction\r\n\r\nTurbonomic Application Resource Management (ARM) is all about ensuring your\r\ncritical business applications are getting the resources they need, when they\r\nneed them, to proactively mitigate against SLO breaches and SLA violations.\r\n\r\nTo do this, Trubonomic ARM ingests data from your existing tools to begin the\r\nprocess of making recommendations and taking actions across your full stack,\r\nusing it's **patented analytics engine**.\r\n\r\n> **Keyword Alert:** A **target** is the term used for your existing solutions\r\n> and accounts from which Turbonomic ARM will either pull data from, or\r\n> integrate with to perform actions.\r\n\r\nData ingestion is typically agentless and conducted via REST APIs (with the\r\nexception of Kubernetes - more on this in a later lab).\r\n\r\nFor business critical applications, application performance monitoring (APM)\r\ndata is pulled from your existing APM solution(s).\r\n\r\nIn this section, we are going to integrate Instana to get application\r\nperformance data for the Robot Shop application.\r\n\r\n> **Prerequisite:** If you have not already done so, please complete the\r\n> [Instana](https://ibm.github.io/waiops-tech-jam/tutorials/instana/introduction)\r\n> labs first.\r\n\r\n![](images/arch-1.png)\r\n\r\n---\r\n\r\n## 3-2: Ingest application performance data from Instana\r\n\r\n1. In the Instana console:\r\n\r\n   - navigate to `Settings -> Team Settings page -> API Tokens`.\r\n   - Click on `Add API Token` to create an API key from Instana.\r\n\r\n   ![](images/addApiToken.png)\r\n\r\n1. In the create API token page, enter a name for your token, e.g.\r\n   `Turbonomic API Token`:\r\n\r\n   > **Important:** Copy the API token generated use in later steps:\r\n   >\r\n   > 1. Click the _eye_ icon as in screen shot below. This will show the token.\r\n   > 2. Click the _copy_ icon next to the token to actually copy the token:\r\n   >    - Clicking the _eye_ icon alone does not copy the generated token,\r\n   >      it just makes it visible.\r\n\r\n   ![](images/apiToken1.png)\r\n\r\n1. Then scroll down to the `Permissions` section to enable the following\r\n   permissions:\r\n\r\n   - Access to audit log\r\n   - Access to token and session timeout settings\r\n   - Access to license usage\r\n   - Access to on prem license usage\r\n   - Access to account and billing information\r\n   - Service & endpoint mapping\r\n\r\n   ![](images/apiToken2.png)\r\n\r\n1. Click on the `Save` button. The API token is created.\r\n\r\n   ![](images/apiToken3.png)\r\n\r\n1. In the Turbonomic console, go to `Settings -> Target Configuration`:\r\n\r\n   ![](images/targetConfiguration.png)\r\n\r\n1. Click on the `NEW TARGET` button (top-right) and then select\r\n   `Applications and Databases`:\r\n\r\n   ![](images/applicationAndDatabases.png)\r\n\r\n1. Click on `Instana`:\r\n\r\n   ![](images/instanaTarget.png)\r\n\r\n1. Add the Instana hostname, API key (which you have created in Step 2 earlier),\r\n   and proxy username set as `administrator`:\r\n\r\n   > **Note:** For _Instana hostname_ use the Instana server's IP address if\r\n   > using a provisioned lab environment during a scheduled Tech Jam event.\r\n   >\r\n   > Normally, if your Instana server has a DNS resolvable name, you can use\r\n   > that.\r\n\r\n   ![](images/addInstanaTarget.png)\r\n\r\n   > **Note:** It can take some time for Turbonomic to discover and validate the\r\n   > target. Once it is validated, you should see:\r\n   > ![target added](images/instana-target-added.png)\r\n\r\nAfter it is validated successfully, it will be displayed as a validated target\r\nin the **_Target Configurations_** list in the Turbonomic console settings.\r\n\r\n![](images/instanaValidatedTarget.png)\r\n\r\n---\r\n\r\n# 3-3: Summary\r\n\r\nIn this portion of the lab, you have learned how to integrate your existing\r\nAPM tools to give Turbonomic ARM a view of your critical buiness applications.\r\n\r\nNavigate to the next section to start understanding the Turbonomic ARM user\r\ninterface.\r\n\r\n---\r\n","type":"Mdx","contentDigest":"2f4b5be845fe0f0eb51d15b14f6486af","owner":"gatsby-plugin-mdx","counter":1060},"frontmatter":{"title":"3 - App Data Target","description":"Get application performance data for business critical applications"},"exports":{},"rawBody":"---\r\ntitle: 3 - App Data Target\r\ndescription: Get application performance data for business critical applications\r\n---\r\n\r\n<AnchorLinks>\r\n  <AnchorLink>3-1: Introduction</AnchorLink>\r\n  <AnchorLink>3-2: Ingest application performance data from Instana</AnchorLink>\r\n  <AnchorLink>3-3: Summary</AnchorLink>\r\n</AnchorLinks>\r\n\r\n## 3-1: Introduction\r\n\r\nTurbonomic Application Resource Management (ARM) is all about ensuring your\r\ncritical business applications are getting the resources they need, when they\r\nneed them, to proactively mitigate against SLO breaches and SLA violations.\r\n\r\nTo do this, Trubonomic ARM ingests data from your existing tools to begin the\r\nprocess of making recommendations and taking actions across your full stack,\r\nusing it's **patented analytics engine**.\r\n\r\n> **Keyword Alert:** A **target** is the term used for your existing solutions\r\n> and accounts from which Turbonomic ARM will either pull data from, or\r\n> integrate with to perform actions.\r\n\r\nData ingestion is typically agentless and conducted via REST APIs (with the\r\nexception of Kubernetes - more on this in a later lab).\r\n\r\nFor business critical applications, application performance monitoring (APM)\r\ndata is pulled from your existing APM solution(s).\r\n\r\nIn this section, we are going to integrate Instana to get application\r\nperformance data for the Robot Shop application.\r\n\r\n> **Prerequisite:** If you have not already done so, please complete the\r\n> [Instana](https://ibm.github.io/waiops-tech-jam/tutorials/instana/introduction)\r\n> labs first.\r\n\r\n![](images/arch-1.png)\r\n\r\n---\r\n\r\n## 3-2: Ingest application performance data from Instana\r\n\r\n1. In the Instana console:\r\n\r\n   - navigate to `Settings -> Team Settings page -> API Tokens`.\r\n   - Click on `Add API Token` to create an API key from Instana.\r\n\r\n   ![](images/addApiToken.png)\r\n\r\n1. In the create API token page, enter a name for your token, e.g.\r\n   `Turbonomic API Token`:\r\n\r\n   > **Important:** Copy the API token generated use in later steps:\r\n   >\r\n   > 1. Click the _eye_ icon as in screen shot below. This will show the token.\r\n   > 2. Click the _copy_ icon next to the token to actually copy the token:\r\n   >    - Clicking the _eye_ icon alone does not copy the generated token,\r\n   >      it just makes it visible.\r\n\r\n   ![](images/apiToken1.png)\r\n\r\n1. Then scroll down to the `Permissions` section to enable the following\r\n   permissions:\r\n\r\n   - Access to audit log\r\n   - Access to token and session timeout settings\r\n   - Access to license usage\r\n   - Access to on prem license usage\r\n   - Access to account and billing information\r\n   - Service & endpoint mapping\r\n\r\n   ![](images/apiToken2.png)\r\n\r\n1. Click on the `Save` button. The API token is created.\r\n\r\n   ![](images/apiToken3.png)\r\n\r\n1. In the Turbonomic console, go to `Settings -> Target Configuration`:\r\n\r\n   ![](images/targetConfiguration.png)\r\n\r\n1. Click on the `NEW TARGET` button (top-right) and then select\r\n   `Applications and Databases`:\r\n\r\n   ![](images/applicationAndDatabases.png)\r\n\r\n1. Click on `Instana`:\r\n\r\n   ![](images/instanaTarget.png)\r\n\r\n1. Add the Instana hostname, API key (which you have created in Step 2 earlier),\r\n   and proxy username set as `administrator`:\r\n\r\n   > **Note:** For _Instana hostname_ use the Instana server's IP address if\r\n   > using a provisioned lab environment during a scheduled Tech Jam event.\r\n   >\r\n   > Normally, if your Instana server has a DNS resolvable name, you can use\r\n   > that.\r\n\r\n   ![](images/addInstanaTarget.png)\r\n\r\n   > **Note:** It can take some time for Turbonomic to discover and validate the\r\n   > target. Once it is validated, you should see:\r\n   > ![target added](images/instana-target-added.png)\r\n\r\nAfter it is validated successfully, it will be displayed as a validated target\r\nin the **_Target Configurations_** list in the Turbonomic console settings.\r\n\r\n![](images/instanaValidatedTarget.png)\r\n\r\n---\r\n\r\n# 3-3: Summary\r\n\r\nIn this portion of the lab, you have learned how to integrate your existing\r\nAPM tools to give Turbonomic ARM a view of your critical buiness applications.\r\n\r\nNavigate to the next section to start understanding the Turbonomic ARM user\r\ninterface.\r\n\r\n---\r\n","fileAbsolutePath":"C:/Users/103537778/git/waiops-tech-jam/src/pages/tutorials/turbonomic/integrate-instana/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}