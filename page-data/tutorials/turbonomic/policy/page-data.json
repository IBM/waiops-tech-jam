{"componentChunkName":"component---src-pages-tutorials-turbonomic-policy-index-mdx","path":"/tutorials/turbonomic/policy/","result":{"pageContext":{"frontmatter":{"title":"6 - Configure Policies","description":"Turbonomic Policies"},"relativePagePath":"/tutorials/turbonomic/policy/index.mdx","titleType":"page","MdxNode":{"id":"06558cae-da63-526a-8c36-8ca6157b331c","children":[],"parent":"3823b9a5-7f24-53e7-a9e4-686e93ee267c","internal":{"content":"---\r\ntitle: 6 - Configure Policies\r\ndescription: Turbonomic Policies\r\n---\r\n\r\n<AnchorLinks>\r\n  <AnchorLink>6-1: Introduction</AnchorLink>\r\n  <AnchorLink>6-2: Generate RobotShop Website Traffic</AnchorLink>\r\n  <AnchorLink>6-3: Create Groups</AnchorLink>\r\n  <AnchorLink>6-4: Setup a Policy</AnchorLink>\r\n  <AnchorLink>6-5: Editing a Policy</AnchorLink>\r\n  <AnchorLink>6-6: Deleting a Policy</AnchorLink>\r\n  <AnchorLink>6-7: Summary</AnchorLink>\r\n</AnchorLinks>\r\n\r\n---\r\n\r\n## 6-1: Introduction\r\n\r\nTurbonomic defines a set of default policies for each entity type which are\r\nused to analyze data and make action recommendations.\r\n\r\nSsers can define their own policies for each entity in the supply chain based\r\non business requirements.\r\n\r\nPolicies define business rules to control how Turbonimic\r\n\r\n- analyzes resource allocation.\r\n- displays resource status\r\n- recommends or executes actions.\r\n\r\nIn this lab, you will configure an SLO policy for the Robot Shop application\r\nto understand how Turbonomic ARM uses target data already configured to\r\nmake action recommendations that will assure application performance.\r\n\r\n---\r\n\r\n## 6-2: Generate RobotShop Website Traffic\r\n\r\n1. Go to the **manage-to** OpenShift cluster console, where RobotShop is running:\r\n\r\n   ![](images/arch-1.png)\r\n\r\n1. Login into the OpenShift Console UI (`manage-from` cluster) and get your\r\n   login token:\r\n\r\n   - From the OpenShift console, click your username in the top-right.\r\n   - Select the _Copy login command_ menu item.\r\n   - From the new tab that opens, copy the login command from the\r\n     **Log in with this token** section.\r\n   - Paste the copied command into your SSH terminal on your control node and\r\n     press enter to login.\r\n\r\n   Validate you are logged into the correct cluster. You should see the\r\n   Robot Shop pods running:\r\n\r\n   ```sh\r\n   oc get pods -n robot-shop\r\n   ```\r\n\r\n1. On your **control** node, set the `ROBOTSHOP_URL` environment variable:\r\n\r\n   ```sh\r\n   export ROBOTSHOP_URL=$(\r\n    oc get route -n robot-shop | grep web | awk '{print $2}'\r\n   )\r\n   ```\r\n\r\n1. Use the Selenium-based `load-gen` from <a href=\"https://github.com/brightzheng100/robot-shop/tree/selenium-load-gen/selenium\" target=\"_blank\">Bright Zheng</a> as\r\n   it generate good traffic for website monitoring:\r\n\r\n   ```sh\r\n   oc -n robot-shop apply -f - <<EOF\r\n   apiVersion: apps/v1\r\n   kind: Deployment\r\n   metadata:\r\n     name: rs-website-load\r\n     labels:\r\n       service: rs-website-load\r\n   spec:\r\n     replicas: 100\r\n     selector:\r\n       matchLabels:\r\n         service: rs-website-load\r\n     template:\r\n       metadata:\r\n         labels:\r\n           service: rs-website-load\r\n       spec:\r\n         containers:\r\n         - name: rs-website-load\r\n           env:\r\n             - name: HOST\r\n               value: \"${ROBOTSHOP_URL}\"\r\n           image: brightzheng100/rs-website-load:latest\r\n   EOF\r\n   ```\r\n\r\n1. Verify the `rs-website-load-xxx` pod is created:\r\n\r\n   ```sh\r\n   oc get pods -n robot-shop\r\n   ```\r\n\r\n   **Example output:**\r\n\r\n   ```\r\n   NAME                              READY   STATUS              RESTARTS       AGE\r\n   cart-7d7745696b-wl26d             1/1     Running             0              14h\r\n   catalogue-998b69bc9-6cgwk         1/1     Running             0              14h\r\n   dispatch-69b65d89b9-w5kd4         1/1     Running             0              14h\r\n   load-56b554db46-5568w             1/1     Running             1 (179m ago)   14h\r\n   mongodb-67c5456f4-s8rqr           1/1     Running             0              14h\r\n   mysql-6d778f4c8f-xh7wv            1/1     Running             0              14h\r\n   payment-5465d9cc79-62ksx          1/1     Running             0              14h\r\n   rabbitmq-785b678f74-bg5m4         1/1     Running             0              14h\r\n   ratings-7ccf67b49f-szbf4          1/1     Running             0              14h\r\n   redis-0                           1/1     Running             0              14h\r\n   rs-website-load-779f86d45-6rjwg   0/1     ContainerCreating   0              79s\r\n   shipping-7f6dfbf46f-8hcqt         0/1     Running             11 (67m ago)   14h\r\n   user-899b6c7ff-kbrwj              1/1     Running             0              14h\r\n   web-5476dc8495-qphxc              1/1     Running             0              14h\r\n   ```\r\n\r\n1. Go to your Instana dashboard and verify that the `Page Views` count for the\r\n   Robot Shop website has increased:\r\n\r\n   ![](images/robotShopLoad-1.png)\r\n\r\n---\r\n\r\n## 6-3: Create Groups\r\n\r\nIn Turbonomic ARM, groups:\r\n\r\n- are a collection of like entities.\r\n- can be used any place where you can scope.\r\n- are automatically created in some cases.\r\n\r\nNow we first need to create the group containing the Robot Shop business\r\napplication.\r\n\r\nIn the Turbonomic ARM user interface:\r\n\r\n1. Click on `Settings -> Groups`:\r\n\r\n   ![](images/groups-1.png)\r\n\r\n1. Click on `NEW GROUP`:\r\n\r\n   ![](images/groups-2.png)\r\n\r\n1. Click on `Business Application`:\r\n\r\n   ![](images/groups-3.png)\r\n\r\n1. Enter the group name as `Robot Shop Group` and select the `Dynamic` type:\r\n\r\n   > **Static vs Dynamic**\r\n   >\r\n   > - use Dynamic groups if there is criteria which can define your group.\r\n   > - use Static groups when:\r\n   >   - You do not expect membership to ever change.\r\n   >   - There is no criteria that can be used to define the group.\r\n\r\n   ![](images/groups-4.png)\r\n\r\n1. Click on `ADD FILTER` and select `NAME`\r\n\r\n1. Select filter `Equals` and enter the regular expression `.*robot.*`, then\r\n   click the `Apply` button:\r\n\r\n   ![](images/groups-5.png)\r\n\r\n1. Click on the `SAVE GROUP` button:\r\n\r\n   ![](images/groups-6.png)\r\n\r\nYou should now see the `Robot Shop Group` newly created.\r\n\r\n![](images/groups-7.png)\r\n\r\n---\r\n\r\n## 6-4: Setup a Policy\r\n\r\n1. Go to the Turbonomic ARM homepage and click on `Settings`:\r\n\r\n   ![](images/turboSettings.png)\r\n\r\n1. Then choose `Policies`:\r\n\r\n   ![](images/turboPolicies.png)\r\n\r\n1. Then click on `NEW AUTOMATION POLICY`:\r\n\r\n   ![](images/policy-1.png)\r\n\r\n1. Select `Business Application` as the policy type for the Robot Shop\r\n   application:\r\n\r\n   ![](images/policy-2.png)\r\n\r\n1. Fill in the name as `Robot Shop Response Time SLO Policy` and click on\r\n   `ADD BUSINESS APPLICATION GROUP`:\r\n\r\n   ![](images/policy-3.png)\r\n\r\n1. Select the `Robot Shop Group` checkbox and click on the `SELECT` button.\r\n\r\n   ![](images/policy-4.png)\r\n\r\n1. Expand the `OPERATIONAL CONSTRAINTS` section:\r\n\r\n   ![](images/policy-5.png)\r\n\r\n1. Configure the operational constraints as in the image below to set up a\r\n   response time SLO:\r\n\r\n   ![](images/policy-6.png)\r\n\r\n1. Then click the `SAVE AND APPLY` button. With the policy configured,\r\n   Turbonomic will analyze performance data over time and then provide placement\r\n   and resource sizing recommendations.\r\n\r\n1. The scoped policy you have created can be found in the `Automation Policies`\r\n   category:\r\n\r\n   ![](images/policy-7.png)\r\n\r\n1. The `Imported Placement Policies` category is specifically for imported\r\n   on-prem policies:\r\n\r\n   ![](images/turbo-imported-placement-policies.jpg)\r\n\r\n1. The `Defaults` category represents the policies that govern entire entity\r\n   types.\r\n\r\n   ![](images/turbo-defaults-policy.jpg)\r\n\r\n1. Now go back to the Turbonomic dashboard and you will notice there is\r\n   an `SLO Violation` now on the Robot Shop application:\r\n\r\n   ![](images/policy-8.png)\r\n\r\n---\r\n\r\n## 6-5: Editing a Policy\r\n\r\n> **Note:** This is for information only, there is no need to actually edit\r\n> any policy for these labs.\r\n\r\nTo edit a policy, click on the policy:\r\n\r\n![](images/turbo-edit-policy.jpg)\r\n\r\nMake your changes and save.\r\n\r\n---\r\n\r\n## 6-6: Deleting a Policy\r\n\r\n> **Important:** This is for information only, do not delete any policy for\r\n> these labs.\r\n\r\n18. To delete a policy:\r\n\r\n![](images/turbo-delete-policy-1.jpg)\r\n![](images/turbo-delete-policy-2.jpg)\r\n\r\n---\r\n\r\n## 6-7: Summary\r\n\r\nIn this section, you have learned how to create a scoped policy for a business\r\napplication, in this case to govern an application response time SLO.\r\n\r\nThen, generate website traffic for the Robot Shop application to trigger an SLO\r\nviolation.\r\n\r\nNext, we will look at how to take actions to assure appication performance.\r\n\r\n---\r\n","type":"Mdx","contentDigest":"9c911c46944b82f10e1362d0a4da0751","owner":"gatsby-plugin-mdx","counter":1067},"frontmatter":{"title":"6 - Configure Policies","description":"Turbonomic Policies"},"exports":{},"rawBody":"---\r\ntitle: 6 - Configure Policies\r\ndescription: Turbonomic Policies\r\n---\r\n\r\n<AnchorLinks>\r\n  <AnchorLink>6-1: Introduction</AnchorLink>\r\n  <AnchorLink>6-2: Generate RobotShop Website Traffic</AnchorLink>\r\n  <AnchorLink>6-3: Create Groups</AnchorLink>\r\n  <AnchorLink>6-4: Setup a Policy</AnchorLink>\r\n  <AnchorLink>6-5: Editing a Policy</AnchorLink>\r\n  <AnchorLink>6-6: Deleting a Policy</AnchorLink>\r\n  <AnchorLink>6-7: Summary</AnchorLink>\r\n</AnchorLinks>\r\n\r\n---\r\n\r\n## 6-1: Introduction\r\n\r\nTurbonomic defines a set of default policies for each entity type which are\r\nused to analyze data and make action recommendations.\r\n\r\nSsers can define their own policies for each entity in the supply chain based\r\non business requirements.\r\n\r\nPolicies define business rules to control how Turbonimic\r\n\r\n- analyzes resource allocation.\r\n- displays resource status\r\n- recommends or executes actions.\r\n\r\nIn this lab, you will configure an SLO policy for the Robot Shop application\r\nto understand how Turbonomic ARM uses target data already configured to\r\nmake action recommendations that will assure application performance.\r\n\r\n---\r\n\r\n## 6-2: Generate RobotShop Website Traffic\r\n\r\n1. Go to the **manage-to** OpenShift cluster console, where RobotShop is running:\r\n\r\n   ![](images/arch-1.png)\r\n\r\n1. Login into the OpenShift Console UI (`manage-from` cluster) and get your\r\n   login token:\r\n\r\n   - From the OpenShift console, click your username in the top-right.\r\n   - Select the _Copy login command_ menu item.\r\n   - From the new tab that opens, copy the login command from the\r\n     **Log in with this token** section.\r\n   - Paste the copied command into your SSH terminal on your control node and\r\n     press enter to login.\r\n\r\n   Validate you are logged into the correct cluster. You should see the\r\n   Robot Shop pods running:\r\n\r\n   ```sh\r\n   oc get pods -n robot-shop\r\n   ```\r\n\r\n1. On your **control** node, set the `ROBOTSHOP_URL` environment variable:\r\n\r\n   ```sh\r\n   export ROBOTSHOP_URL=$(\r\n    oc get route -n robot-shop | grep web | awk '{print $2}'\r\n   )\r\n   ```\r\n\r\n1. Use the Selenium-based `load-gen` from <a href=\"https://github.com/brightzheng100/robot-shop/tree/selenium-load-gen/selenium\" target=\"_blank\">Bright Zheng</a> as\r\n   it generate good traffic for website monitoring:\r\n\r\n   ```sh\r\n   oc -n robot-shop apply -f - <<EOF\r\n   apiVersion: apps/v1\r\n   kind: Deployment\r\n   metadata:\r\n     name: rs-website-load\r\n     labels:\r\n       service: rs-website-load\r\n   spec:\r\n     replicas: 100\r\n     selector:\r\n       matchLabels:\r\n         service: rs-website-load\r\n     template:\r\n       metadata:\r\n         labels:\r\n           service: rs-website-load\r\n       spec:\r\n         containers:\r\n         - name: rs-website-load\r\n           env:\r\n             - name: HOST\r\n               value: \"${ROBOTSHOP_URL}\"\r\n           image: brightzheng100/rs-website-load:latest\r\n   EOF\r\n   ```\r\n\r\n1. Verify the `rs-website-load-xxx` pod is created:\r\n\r\n   ```sh\r\n   oc get pods -n robot-shop\r\n   ```\r\n\r\n   **Example output:**\r\n\r\n   ```\r\n   NAME                              READY   STATUS              RESTARTS       AGE\r\n   cart-7d7745696b-wl26d             1/1     Running             0              14h\r\n   catalogue-998b69bc9-6cgwk         1/1     Running             0              14h\r\n   dispatch-69b65d89b9-w5kd4         1/1     Running             0              14h\r\n   load-56b554db46-5568w             1/1     Running             1 (179m ago)   14h\r\n   mongodb-67c5456f4-s8rqr           1/1     Running             0              14h\r\n   mysql-6d778f4c8f-xh7wv            1/1     Running             0              14h\r\n   payment-5465d9cc79-62ksx          1/1     Running             0              14h\r\n   rabbitmq-785b678f74-bg5m4         1/1     Running             0              14h\r\n   ratings-7ccf67b49f-szbf4          1/1     Running             0              14h\r\n   redis-0                           1/1     Running             0              14h\r\n   rs-website-load-779f86d45-6rjwg   0/1     ContainerCreating   0              79s\r\n   shipping-7f6dfbf46f-8hcqt         0/1     Running             11 (67m ago)   14h\r\n   user-899b6c7ff-kbrwj              1/1     Running             0              14h\r\n   web-5476dc8495-qphxc              1/1     Running             0              14h\r\n   ```\r\n\r\n1. Go to your Instana dashboard and verify that the `Page Views` count for the\r\n   Robot Shop website has increased:\r\n\r\n   ![](images/robotShopLoad-1.png)\r\n\r\n---\r\n\r\n## 6-3: Create Groups\r\n\r\nIn Turbonomic ARM, groups:\r\n\r\n- are a collection of like entities.\r\n- can be used any place where you can scope.\r\n- are automatically created in some cases.\r\n\r\nNow we first need to create the group containing the Robot Shop business\r\napplication.\r\n\r\nIn the Turbonomic ARM user interface:\r\n\r\n1. Click on `Settings -> Groups`:\r\n\r\n   ![](images/groups-1.png)\r\n\r\n1. Click on `NEW GROUP`:\r\n\r\n   ![](images/groups-2.png)\r\n\r\n1. Click on `Business Application`:\r\n\r\n   ![](images/groups-3.png)\r\n\r\n1. Enter the group name as `Robot Shop Group` and select the `Dynamic` type:\r\n\r\n   > **Static vs Dynamic**\r\n   >\r\n   > - use Dynamic groups if there is criteria which can define your group.\r\n   > - use Static groups when:\r\n   >   - You do not expect membership to ever change.\r\n   >   - There is no criteria that can be used to define the group.\r\n\r\n   ![](images/groups-4.png)\r\n\r\n1. Click on `ADD FILTER` and select `NAME`\r\n\r\n1. Select filter `Equals` and enter the regular expression `.*robot.*`, then\r\n   click the `Apply` button:\r\n\r\n   ![](images/groups-5.png)\r\n\r\n1. Click on the `SAVE GROUP` button:\r\n\r\n   ![](images/groups-6.png)\r\n\r\nYou should now see the `Robot Shop Group` newly created.\r\n\r\n![](images/groups-7.png)\r\n\r\n---\r\n\r\n## 6-4: Setup a Policy\r\n\r\n1. Go to the Turbonomic ARM homepage and click on `Settings`:\r\n\r\n   ![](images/turboSettings.png)\r\n\r\n1. Then choose `Policies`:\r\n\r\n   ![](images/turboPolicies.png)\r\n\r\n1. Then click on `NEW AUTOMATION POLICY`:\r\n\r\n   ![](images/policy-1.png)\r\n\r\n1. Select `Business Application` as the policy type for the Robot Shop\r\n   application:\r\n\r\n   ![](images/policy-2.png)\r\n\r\n1. Fill in the name as `Robot Shop Response Time SLO Policy` and click on\r\n   `ADD BUSINESS APPLICATION GROUP`:\r\n\r\n   ![](images/policy-3.png)\r\n\r\n1. Select the `Robot Shop Group` checkbox and click on the `SELECT` button.\r\n\r\n   ![](images/policy-4.png)\r\n\r\n1. Expand the `OPERATIONAL CONSTRAINTS` section:\r\n\r\n   ![](images/policy-5.png)\r\n\r\n1. Configure the operational constraints as in the image below to set up a\r\n   response time SLO:\r\n\r\n   ![](images/policy-6.png)\r\n\r\n1. Then click the `SAVE AND APPLY` button. With the policy configured,\r\n   Turbonomic will analyze performance data over time and then provide placement\r\n   and resource sizing recommendations.\r\n\r\n1. The scoped policy you have created can be found in the `Automation Policies`\r\n   category:\r\n\r\n   ![](images/policy-7.png)\r\n\r\n1. The `Imported Placement Policies` category is specifically for imported\r\n   on-prem policies:\r\n\r\n   ![](images/turbo-imported-placement-policies.jpg)\r\n\r\n1. The `Defaults` category represents the policies that govern entire entity\r\n   types.\r\n\r\n   ![](images/turbo-defaults-policy.jpg)\r\n\r\n1. Now go back to the Turbonomic dashboard and you will notice there is\r\n   an `SLO Violation` now on the Robot Shop application:\r\n\r\n   ![](images/policy-8.png)\r\n\r\n---\r\n\r\n## 6-5: Editing a Policy\r\n\r\n> **Note:** This is for information only, there is no need to actually edit\r\n> any policy for these labs.\r\n\r\nTo edit a policy, click on the policy:\r\n\r\n![](images/turbo-edit-policy.jpg)\r\n\r\nMake your changes and save.\r\n\r\n---\r\n\r\n## 6-6: Deleting a Policy\r\n\r\n> **Important:** This is for information only, do not delete any policy for\r\n> these labs.\r\n\r\n18. To delete a policy:\r\n\r\n![](images/turbo-delete-policy-1.jpg)\r\n![](images/turbo-delete-policy-2.jpg)\r\n\r\n---\r\n\r\n## 6-7: Summary\r\n\r\nIn this section, you have learned how to create a scoped policy for a business\r\napplication, in this case to govern an application response time SLO.\r\n\r\nThen, generate website traffic for the Robot Shop application to trigger an SLO\r\nviolation.\r\n\r\nNext, we will look at how to take actions to assure appication performance.\r\n\r\n---\r\n","fileAbsolutePath":"C:/Users/103537778/git/waiops-tech-jam/src/pages/tutorials/turbonomic/policy/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}