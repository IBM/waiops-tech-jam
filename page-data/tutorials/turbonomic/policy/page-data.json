{"componentChunkName":"component---src-pages-tutorials-turbonomic-policy-index-mdx","path":"/tutorials/turbonomic/policy/","result":{"pageContext":{"frontmatter":{"title":"6 - Configure Policies","description":"Turbonomic Policies"},"relativePagePath":"/tutorials/turbonomic/policy/index.mdx","titleType":"page","MdxNode":{"id":"7ccf365e-4459-5c9d-9929-0efc01c17d47","children":[],"parent":"fded5cdf-4b1a-5b62-999a-b9028e16e7e4","internal":{"content":"---\ntitle: 6 - Configure Policies\ndescription: Turbonomic Policies\n---\n\n<AnchorLinks>\n  <AnchorLink>6-1: Introduction</AnchorLink>\n  <AnchorLink>6-2: Create Groups</AnchorLink>\n  <AnchorLink>6-3: Setup a Policy</AnchorLink>\n  <AnchorLink>6-4: Editing a Policy</AnchorLink>\n  <AnchorLink>6-5: Deleting a Policy</AnchorLink>\n  <AnchorLink>6-6: Summary</AnchorLink>\n</AnchorLinks>\n\n---\n\n## 6-1: Introduction\n\nTurbonomic defines a set of default policies for each entity type which are\nused to analyze data and make action recommendations.\n\nSsers can define their own policies for each entity in the supply chain based\non business requirements.\n\nPolicies define business rules to control how Turbonimic\n\n- analyzes resource allocation.\n- displays resource status\n- recommends or executes actions.\n\nIn this lab, you will configure an SLO policy for the Robot Shop application\nto understand how Turbonomic ARM uses target data already configured to\nmake action recommendations that will assure application performance.\n\n---\n\n## 6-2: Create Groups\n\nIn Turbonomic ARM, groups:\n\n- are a collection of like entities.\n- can be used any place where you can scope.\n- are automatically created in some cases.\n\nNow we first need to create the group containing the Robot Shop business\napplication.\n\nIn the Turbonomic ARM user interface:\n\n1. Click on `Settings -> Groups`:\n\n   ![](images/groups-1.png)\n\n1. Click on `NEW GROUP`:\n\n   ![](images/groups-2.png)\n\n1. Click on `Container Spec`:\n\n   ![](images/groups-3.png)\n\n1. Enter the group name as `Robot Shop Group` and select the `Dynamic` type:\n\n   > **Static vs Dynamic**\n   >\n   > - use Dynamic groups if there is criteria which can define your group.\n   > - use Static groups when:\n   >   - You do not expect membership to ever change.\n   >   - There is no criteria that can be used to define the group.\n\n   ![](images/groups-4.png)\n\n1. Click on `ADD FILTER` and select `Namespace`\n\n1. Select filter `Equals` and enter the regular expression `robot-shop`, then\n   click the `Apply` button:\n\n   ![](images/groups-5.png)\n\n1. Click on the `SAVE GROUP` button:\n\n   ![](images/groups-6.png)\n\nYou should now see the `Robot Shop Group` newly created.\n\n![](images/groups-7.png)\n\n---\n\n## 6-3: Setup a Policy\n\n1. Go to the Turbonomic ARM homepage and click on `Settings`:\n\n   ![](images/turboSettings.png)\n\n1. Then choose `Policies`:\n\n   ![](images/turboPolicies.png)\n\n1. Then click on `NEW AUTOMATION POLICY`:\n\n   ![](images/policy-1.png)\n\n1. Select `Container Spec` as the policy type for the Robot Shop\n   application:\n\n   ![](images/policy-2.png)\n\n1. Fill in the name as `Robot Shop Container Spec Policy` and click on\n   `ADD CONTAINER SPEC GROUPS`:\n\n   ![](images/policy-3.png)\n\n1. Select the `Robot Shop Group` checkbox and click on the `SELECT` button.\n\n   ![](images/policy-4.png)\n\n1. Expand the `SCALING CONSTRAINTS` section:\n\n   ![](images/policy-5.png)\n\n1. Configure the scaling constraints as in the image below:\n\n   ![](images/policy-6.png)\n\n1. Then click the `SAVE AND APPLY` button. With the policy configured,\n   Turbonomic will analyze performance data over time and then provide placement\n   and resource sizing recommendations.\n\n1. The scoped policy you have created can be found in the `Automation Policies`\n   category:\n\n   ![](images/policy-7.png)\n\n1. The `Imported Placement Policies` category is specifically for imported\n   on-prem policies:\n\n   ![](images/turbo-imported-placement-policies.jpg)\n\n1. The `Defaults` category represents the policies that govern entire entity\n   types.\n\n   ![](images/turbo-defaults-policy.jpg)\n\n1. Now go back to the Turbonomic dashboard. **Wait for a few minutes** and you will notice there is\n   `ACTIONS` now on the Robot Shop application:\n\n   ![](images/policy-8.png)\n\n---\n\n## 6-4: Editing a Policy\n\n> **Note:** This is for information only, there is no need to actually edit\n> any policy for these labs.\n\nTo edit a policy, click on the policy:\n\n![](images/turbo-edit-policy.jpg)\n\nMake your changes and save.\n\n---\n\n## 6-5: Deleting a Policy\n\n> **Important:** This is for information only, do not delete any policy for\n> these labs.\n\n18. To delete a policy:\n\n![](images/turbo-delete-policy-1.jpg)\n![](images/turbo-delete-policy-2.jpg)\n\n---\n\n## 6-6: Summary\n\nIn this section, you have learned how to create a scoped policy for a container\nspec, in this case to govern an application container spec.\n\nNext, we will look at how to take actions to assure application performance.\n\n---\n","type":"Mdx","contentDigest":"852db94da187ec3039a51908b7fd6378","owner":"gatsby-plugin-mdx","counter":3328},"frontmatter":{"title":"6 - Configure Policies","description":"Turbonomic Policies"},"exports":{},"rawBody":"---\ntitle: 6 - Configure Policies\ndescription: Turbonomic Policies\n---\n\n<AnchorLinks>\n  <AnchorLink>6-1: Introduction</AnchorLink>\n  <AnchorLink>6-2: Create Groups</AnchorLink>\n  <AnchorLink>6-3: Setup a Policy</AnchorLink>\n  <AnchorLink>6-4: Editing a Policy</AnchorLink>\n  <AnchorLink>6-5: Deleting a Policy</AnchorLink>\n  <AnchorLink>6-6: Summary</AnchorLink>\n</AnchorLinks>\n\n---\n\n## 6-1: Introduction\n\nTurbonomic defines a set of default policies for each entity type which are\nused to analyze data and make action recommendations.\n\nSsers can define their own policies for each entity in the supply chain based\non business requirements.\n\nPolicies define business rules to control how Turbonimic\n\n- analyzes resource allocation.\n- displays resource status\n- recommends or executes actions.\n\nIn this lab, you will configure an SLO policy for the Robot Shop application\nto understand how Turbonomic ARM uses target data already configured to\nmake action recommendations that will assure application performance.\n\n---\n\n## 6-2: Create Groups\n\nIn Turbonomic ARM, groups:\n\n- are a collection of like entities.\n- can be used any place where you can scope.\n- are automatically created in some cases.\n\nNow we first need to create the group containing the Robot Shop business\napplication.\n\nIn the Turbonomic ARM user interface:\n\n1. Click on `Settings -> Groups`:\n\n   ![](images/groups-1.png)\n\n1. Click on `NEW GROUP`:\n\n   ![](images/groups-2.png)\n\n1. Click on `Container Spec`:\n\n   ![](images/groups-3.png)\n\n1. Enter the group name as `Robot Shop Group` and select the `Dynamic` type:\n\n   > **Static vs Dynamic**\n   >\n   > - use Dynamic groups if there is criteria which can define your group.\n   > - use Static groups when:\n   >   - You do not expect membership to ever change.\n   >   - There is no criteria that can be used to define the group.\n\n   ![](images/groups-4.png)\n\n1. Click on `ADD FILTER` and select `Namespace`\n\n1. Select filter `Equals` and enter the regular expression `robot-shop`, then\n   click the `Apply` button:\n\n   ![](images/groups-5.png)\n\n1. Click on the `SAVE GROUP` button:\n\n   ![](images/groups-6.png)\n\nYou should now see the `Robot Shop Group` newly created.\n\n![](images/groups-7.png)\n\n---\n\n## 6-3: Setup a Policy\n\n1. Go to the Turbonomic ARM homepage and click on `Settings`:\n\n   ![](images/turboSettings.png)\n\n1. Then choose `Policies`:\n\n   ![](images/turboPolicies.png)\n\n1. Then click on `NEW AUTOMATION POLICY`:\n\n   ![](images/policy-1.png)\n\n1. Select `Container Spec` as the policy type for the Robot Shop\n   application:\n\n   ![](images/policy-2.png)\n\n1. Fill in the name as `Robot Shop Container Spec Policy` and click on\n   `ADD CONTAINER SPEC GROUPS`:\n\n   ![](images/policy-3.png)\n\n1. Select the `Robot Shop Group` checkbox and click on the `SELECT` button.\n\n   ![](images/policy-4.png)\n\n1. Expand the `SCALING CONSTRAINTS` section:\n\n   ![](images/policy-5.png)\n\n1. Configure the scaling constraints as in the image below:\n\n   ![](images/policy-6.png)\n\n1. Then click the `SAVE AND APPLY` button. With the policy configured,\n   Turbonomic will analyze performance data over time and then provide placement\n   and resource sizing recommendations.\n\n1. The scoped policy you have created can be found in the `Automation Policies`\n   category:\n\n   ![](images/policy-7.png)\n\n1. The `Imported Placement Policies` category is specifically for imported\n   on-prem policies:\n\n   ![](images/turbo-imported-placement-policies.jpg)\n\n1. The `Defaults` category represents the policies that govern entire entity\n   types.\n\n   ![](images/turbo-defaults-policy.jpg)\n\n1. Now go back to the Turbonomic dashboard. **Wait for a few minutes** and you will notice there is\n   `ACTIONS` now on the Robot Shop application:\n\n   ![](images/policy-8.png)\n\n---\n\n## 6-4: Editing a Policy\n\n> **Note:** This is for information only, there is no need to actually edit\n> any policy for these labs.\n\nTo edit a policy, click on the policy:\n\n![](images/turbo-edit-policy.jpg)\n\nMake your changes and save.\n\n---\n\n## 6-5: Deleting a Policy\n\n> **Important:** This is for information only, do not delete any policy for\n> these labs.\n\n18. To delete a policy:\n\n![](images/turbo-delete-policy-1.jpg)\n![](images/turbo-delete-policy-2.jpg)\n\n---\n\n## 6-6: Summary\n\nIn this section, you have learned how to create a scoped policy for a container\nspec, in this case to govern an application container spec.\n\nNext, we will look at how to take actions to assure application performance.\n\n---\n","fileAbsolutePath":"/home/amar/workspace/git-repos/github.com/IBM/waiops-tech-jam/src/pages/tutorials/turbonomic/policy/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}