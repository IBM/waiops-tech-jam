{"componentChunkName":"component---src-pages-tutorials-aiops-webhook-index-mdx","path":"/tutorials/aiops/webhook/","result":{"pageContext":{"frontmatter":{"title":"Set up a webhook integration","description":"Set up webhook integrations in Event Manager"},"relativePagePath":"/tutorials/aiops/webhook/index.mdx","titleType":"page","MdxNode":{"id":"edb09cde-1b2b-5a9c-89f1-f31b877424b3","children":[],"parent":"14dc3e30-1104-5439-9951-8301bc4f2a19","internal":{"content":"---\r\ntitle: Set up a webhook integration\r\ndescription: Set up webhook integrations in Event Manager\r\n---\r\n<AnchorLinks>\r\n  <AnchorLink>4-1: Overview</AnchorLink>\r\n  <AnchorLink>4-2: Create a new generic webhook integration with SevOne</AnchorLink>\r\n</AnchorLinks>\r\n\r\n\r\n## 4-1: Overview\r\n\r\nThis module focuses on the set up of a webhook integration, so that events can be received from a cloud event source. We will configure a generic webhook integration with SevOne as an example.\r\n\r\nBy the end of this module, you will have configured a webhook to be able to receive events from a SevOne system.\r\n\r\nA full list of the incoming event integrations are documented here: https://www.ibm.com/docs/en/noi/1.6.5?topic=systems-configuring-incoming-integrations\r\n\r\n## 4-2: Create a new generic webhook integration with SevOne\r\n\r\nWhile the event integrations provide a large number of off-the-shelf integrations, it is typical that a user will have an event source for which there is no corresponding integration. Like everything with Netcool, where there is not an off-the-shelf option, there is always the generic option of integration as a backstop. In this exercise, we will create a generic webhook integration with SevOne.\r\n\r\nThe basic steps to creating a generic webhook integration are as follows:\r\n\r\n1. Assuming the event source is capable of sending to a webhook, obtain a sample payload from that source system\r\n2. Create the integration via the Event Manager UI\r\n3. Paste the sample JSON event payload into the sample box\r\n4. Specify the payload-to-field mappings\r\n5. Test the integration\r\n\r\n\r\n**NOTE:** When you create a new webhook integration in Event Manager, it is essential to copy the generated webhook URL and save it in a text document for future reference. After the integration is saved, there is no way to retrieve the URL (although you can regenerate a new one).\r\n\r\nIn this exercise, it is assumed that the webhook configuration has been done already on the SevOne side, and it only awaits the webhook URL.\r\n\r\nFirst, navigate to: **Administration > Integration with other systems**. Click on **New integration** and **Configure** a new generic **Webhook** integration:\r\n\r\n![](images/generic_webhook.png)\r\n\r\nUse the following steps to set up your integration:\r\n\r\n* Configure the Name field with a label to identify your webhook - eg. \"SevOne\"\r\n* Copy the generated URL and save it to a text file for later use\r\n* Copy your sample SevOne payload into: **Example incoming request**\r\n* Configure the Event attributes\r\n* Check the Result field, to ensure there are no errors, and the mapped values are showing\r\n* Click Generate to generate a test event using the sample\r\n* Check the event in the Event List to ensure it looks correct\r\n* Copy the generated webhook over to your SevOne system as an vent target\r\n\r\nA sample SevOne payload is provided below, which may be used to set up this integration (copy into **Example incoming request**):\r\n\r\n```sh\r\n{\r\n\"deviceName\": \"testDeviceName\",\r\n\"occurrences\": \"4\",\r\n\"triggeringConditions\": \"Test\",\r\n\"thresholdId\": \"1-0\",\r\n\"check\": \"Website Alerts - testObjectName\",\r\n\"host\": \"testDeviceName\",\r\n\"assignedTo\": \"engineer@widgetcom.com\",\r\n\"pluginDescription\": \"HTTP Poller\",\r\n\"groupName\": \"All Devices\",\r\n\"objectName\": \"testObjectName\",\r\n\"routes\": [\"Netcool\"],\r\n\"alertMessage\": \"Default Alert Message\",\r\n\"hashtag\": \"hash\",\r\n\"policyId\": \"0\",\r\n\"hash\": \"hash\",\r\n\"url\": \"url\",\r\n\"deviceId\": \"-1\",\r\n\"alertState\": \"Alert\",\r\n\"sender\": \"SevOne\",\r\n\"objectAltName\": \"testObjectAltName\",\r\n\"thresholdName\": \"Website Alerts - testDeviceName - testObjectName\",\r\n\"alertType\": \"Metric\",\r\n\"alertId\": \"-1\",\r\n\"objectId\": \"-1\",\r\n\"cluster\": \"All Devices\",\r\n\"description\": \"Default Alert Message\",\r\n\"deviceIp\": \"10.1.2.3\",\r\n\"policyName\": \"Website Alerts\",\r\n\"objectDescription\": \"testObjectDescription\",\r\n\"pluginName\": \"HTTP\"\r\n}\r\n```\r\n\r\nRegarding the **Event attributes**, the following example mappings can be used:\r\n\r\n```sh\r\nSeverity: alertState = \"Emergency\" ? \"Critical\" : alertState = \"Alert\" ? \"Critical\" : alertState = \"Critical\" ? \"Critical\" : alertState = \"Error\" ? \"Major\" : alertState = \"Cleared\" ? \"Cleared\"\r\nSummary: description\r\nResource name: deviceName\r\nEvent type: policyName\r\n* Resolution:  alertState = \"Cleared\"\r\n* Sender: Name: \"SevOne\"\r\n* URL 1: URL: url\r\n* URL 1: Description: url\r\n\r\n* Fields marked with an asterisk first need to be added via the Optional event attributes link.\r\n\r\n```\r\n**NOTE:** Further information regarding the generic webhook event integration can be found here, including a table that maps the integration attributes to event fields in the Event Manager event store (Netcool/OMNIbus ObjectServer): https://www.ibm.com/docs/en/noi/1.6.5?topic=integrations-webhook\r\n\r\n**NOTE:** Complex mappings such as the Severity field example above can be mapped using JSONATA functions: http://docs.jsonata.org/object-functions.html\r\n\r\n\r\nThe completed configuration should look something like the following:\r\n\r\n![](images/mapping.png)\r\n\r\n\r\nThe sample event generated via the **Generate** function should look something like the following:\r\n\r\n![](images/event.png)\r\n\r\nYou could now take the URL you copied from the new integration to SevOne and use it to set up a new event target.\r\n\r\nYou have now completed this module and are ready for module \"Create sample topology in Watson for AIOps Event Manager\".\r\n\r\n\r\n[Reference Blog](https://community.ibm.com/community/user/aiops/blogs/zane-bray1/2022/04/22/getting-started-with-watson-aiops-event-manager-37)\r\n","type":"Mdx","contentDigest":"b483e7a49bdd5e41c4b1629c1dcdbeaf","owner":"gatsby-plugin-mdx","counter":941},"frontmatter":{"title":"Set up a webhook integration","description":"Set up webhook integrations in Event Manager"},"exports":{},"rawBody":"---\r\ntitle: Set up a webhook integration\r\ndescription: Set up webhook integrations in Event Manager\r\n---\r\n<AnchorLinks>\r\n  <AnchorLink>4-1: Overview</AnchorLink>\r\n  <AnchorLink>4-2: Create a new generic webhook integration with SevOne</AnchorLink>\r\n</AnchorLinks>\r\n\r\n\r\n## 4-1: Overview\r\n\r\nThis module focuses on the set up of a webhook integration, so that events can be received from a cloud event source. We will configure a generic webhook integration with SevOne as an example.\r\n\r\nBy the end of this module, you will have configured a webhook to be able to receive events from a SevOne system.\r\n\r\nA full list of the incoming event integrations are documented here: https://www.ibm.com/docs/en/noi/1.6.5?topic=systems-configuring-incoming-integrations\r\n\r\n## 4-2: Create a new generic webhook integration with SevOne\r\n\r\nWhile the event integrations provide a large number of off-the-shelf integrations, it is typical that a user will have an event source for which there is no corresponding integration. Like everything with Netcool, where there is not an off-the-shelf option, there is always the generic option of integration as a backstop. In this exercise, we will create a generic webhook integration with SevOne.\r\n\r\nThe basic steps to creating a generic webhook integration are as follows:\r\n\r\n1. Assuming the event source is capable of sending to a webhook, obtain a sample payload from that source system\r\n2. Create the integration via the Event Manager UI\r\n3. Paste the sample JSON event payload into the sample box\r\n4. Specify the payload-to-field mappings\r\n5. Test the integration\r\n\r\n\r\n**NOTE:** When you create a new webhook integration in Event Manager, it is essential to copy the generated webhook URL and save it in a text document for future reference. After the integration is saved, there is no way to retrieve the URL (although you can regenerate a new one).\r\n\r\nIn this exercise, it is assumed that the webhook configuration has been done already on the SevOne side, and it only awaits the webhook URL.\r\n\r\nFirst, navigate to: **Administration > Integration with other systems**. Click on **New integration** and **Configure** a new generic **Webhook** integration:\r\n\r\n![](images/generic_webhook.png)\r\n\r\nUse the following steps to set up your integration:\r\n\r\n* Configure the Name field with a label to identify your webhook - eg. \"SevOne\"\r\n* Copy the generated URL and save it to a text file for later use\r\n* Copy your sample SevOne payload into: **Example incoming request**\r\n* Configure the Event attributes\r\n* Check the Result field, to ensure there are no errors, and the mapped values are showing\r\n* Click Generate to generate a test event using the sample\r\n* Check the event in the Event List to ensure it looks correct\r\n* Copy the generated webhook over to your SevOne system as an vent target\r\n\r\nA sample SevOne payload is provided below, which may be used to set up this integration (copy into **Example incoming request**):\r\n\r\n```sh\r\n{\r\n\"deviceName\": \"testDeviceName\",\r\n\"occurrences\": \"4\",\r\n\"triggeringConditions\": \"Test\",\r\n\"thresholdId\": \"1-0\",\r\n\"check\": \"Website Alerts - testObjectName\",\r\n\"host\": \"testDeviceName\",\r\n\"assignedTo\": \"engineer@widgetcom.com\",\r\n\"pluginDescription\": \"HTTP Poller\",\r\n\"groupName\": \"All Devices\",\r\n\"objectName\": \"testObjectName\",\r\n\"routes\": [\"Netcool\"],\r\n\"alertMessage\": \"Default Alert Message\",\r\n\"hashtag\": \"hash\",\r\n\"policyId\": \"0\",\r\n\"hash\": \"hash\",\r\n\"url\": \"url\",\r\n\"deviceId\": \"-1\",\r\n\"alertState\": \"Alert\",\r\n\"sender\": \"SevOne\",\r\n\"objectAltName\": \"testObjectAltName\",\r\n\"thresholdName\": \"Website Alerts - testDeviceName - testObjectName\",\r\n\"alertType\": \"Metric\",\r\n\"alertId\": \"-1\",\r\n\"objectId\": \"-1\",\r\n\"cluster\": \"All Devices\",\r\n\"description\": \"Default Alert Message\",\r\n\"deviceIp\": \"10.1.2.3\",\r\n\"policyName\": \"Website Alerts\",\r\n\"objectDescription\": \"testObjectDescription\",\r\n\"pluginName\": \"HTTP\"\r\n}\r\n```\r\n\r\nRegarding the **Event attributes**, the following example mappings can be used:\r\n\r\n```sh\r\nSeverity: alertState = \"Emergency\" ? \"Critical\" : alertState = \"Alert\" ? \"Critical\" : alertState = \"Critical\" ? \"Critical\" : alertState = \"Error\" ? \"Major\" : alertState = \"Cleared\" ? \"Cleared\"\r\nSummary: description\r\nResource name: deviceName\r\nEvent type: policyName\r\n* Resolution:  alertState = \"Cleared\"\r\n* Sender: Name: \"SevOne\"\r\n* URL 1: URL: url\r\n* URL 1: Description: url\r\n\r\n* Fields marked with an asterisk first need to be added via the Optional event attributes link.\r\n\r\n```\r\n**NOTE:** Further information regarding the generic webhook event integration can be found here, including a table that maps the integration attributes to event fields in the Event Manager event store (Netcool/OMNIbus ObjectServer): https://www.ibm.com/docs/en/noi/1.6.5?topic=integrations-webhook\r\n\r\n**NOTE:** Complex mappings such as the Severity field example above can be mapped using JSONATA functions: http://docs.jsonata.org/object-functions.html\r\n\r\n\r\nThe completed configuration should look something like the following:\r\n\r\n![](images/mapping.png)\r\n\r\n\r\nThe sample event generated via the **Generate** function should look something like the following:\r\n\r\n![](images/event.png)\r\n\r\nYou could now take the URL you copied from the new integration to SevOne and use it to set up a new event target.\r\n\r\nYou have now completed this module and are ready for module \"Create sample topology in Watson for AIOps Event Manager\".\r\n\r\n\r\n[Reference Blog](https://community.ibm.com/community/user/aiops/blogs/zane-bray1/2022/04/22/getting-started-with-watson-aiops-event-manager-37)\r\n","fileAbsolutePath":"C:/Users/103537778/git/waiops-tech-jam/src/pages/tutorials/aiops/webhook/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}