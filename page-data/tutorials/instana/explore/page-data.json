{"componentChunkName":"component---src-pages-tutorials-instana-explore-index-mdx","path":"/tutorials/instana/explore/","result":{"pageContext":{"frontmatter":{"title":"Explore Instana and the Quote of the Day Application","description":"Explore Instana and the Quote of the Day Application"},"relativePagePath":"/tutorials/instana/explore/index.mdx","titleType":"page","MdxNode":{"id":"80e4a838-3b21-5ef5-bca4-9c49edfc6c76","children":[],"parent":"764b5be2-5b64-5158-bd78-dd60a7bf03aa","internal":{"content":"---\ntitle: Explore Instana and the Quote of the Day Application\ndescription: Explore Instana and the Quote of the Day Application\n---\n\n<AnchorLinks>\n  <AnchorLink>6-1: Explore Kubernetes</AnchorLink>\n  <AnchorLink>6-2: Explore the Infrastructure View</AnchorLink>\n  <AnchorLink>6-3: Create an Application Perspective for Robot Shop</AnchorLink>\n  <AnchorLink>6-4: Create an Application Perspective for QOTD</AnchorLink>\n  <AnchorLink>6-5: Explore the Application</AnchorLink>\n  <AnchorLink>6-6: Websites and Mobile App monitoring</AnchorLink>\n  <AnchorLink>6-7: Summary</AnchorLink>\n</AnchorLinks>\n***\n\nFollow the tutorial below to explore some key Instana capabilities including monitoring of Kubernetes, monitoring of applications, and monitoring of infrastructure.\n\n## 6-1:  Explore Kubernetes\n\nOpen the browser tab for the Instana user interface.\n\nOn the left navigation, select **Platforms** and then **Kubernetes**\n![](images/kubernetes.png)\n\nWhen you select **Platforms** in the classroom environment, you will only see **kubernetes** and **Cloud Foundry**.  But, there are additional **feature flags** that can be enabled to add in other technologies like **VMware**, **Power HMC**, and **Z HMC**. You saw the **feature flags** for those technologies when you performed the Instana server installation.\n\nYou will see a list of Kubernetes clusters.   Look for the Cluster name that you chose when you installed the Instana Agent into OpenShift.  \n![](images/clusters.png)\n\nAssuming that your cluster shows up properly, click the cluster name to open the dashboard.\n\nYou should see a screen similar to the one below where you can see overall utilization of the Kubernetes cluster.\n![](images/cluster.png)\n\nSelect some of the other tabs to explore the Kubernetes monitoring.  We recommend you look at the Events, Nodes, and Pods tabs.  When you select the pods tab, you will see a list of all pods running within the cluster.\n\nIn the upper right corner, add `qotd` into the search widget.  You'll notice that it will filter the list to the pods related to the Quote of the Day application.\n![](images/pods.png)\n\nClick on one of the links on the left side and drill into the pod utilization details.\n\n***\n\n## 6-2:  Explore the Infrastructure View\n\nNext, explore the Infrastructure view.  To do this, click on the **\"Infrastructure\"** icon on the left side.\n\n![](images/2022-05-27-18-16-43.png)\n\nYou'll notice that there is a square surrounding the **\"towers\"** with the zone names that you specified.  The square is a **\"zone\"**.  If you recall, you specified a zone name when you performed the install of the Instana Agent.  The towers contained within the zones represents the OpenShift worker node, the Instana server, and the virtual machine running ACE and MQ.\n\nHINT: If you cannot see 5 hosts in your zones, then one of the Agents is not connecting properly.  There should be 3 OpenShift worker nodes, the Instana server, and the ACE/MQ server. If you see a host show up in the **Undefined Zone**, it means that you did not specify a zone name in the Agent configuration.\n\nIn a large environment, it can be difficult to find the server or zone that you are looking for.  Fortunately, there are a number of ways that you can search for things within the Infrastructure view.  \n\nIn the bottom right corner, click on some of the icons and explore different ways of organizing and filtering the Infrastructure view.\n![](images/filters.png)\n\n\nOr, you can use the lucene query language in the filter/search bar at the top of the page.  Before beginning the search, flyover one of the towers and identify the hostname of one of the servers.  For example jam-stack-dal10-01-mqace.<fully qualified hostname\\>\n- Click in the filter bar and select **\"Entity\"**\n- A list will popup. Start typing **host** and you will see the list filtered to \"host\".  Once you see the single entry, select **host**.\n- Once you have select \"Host\", another list will popup. Select **name**.\n- Now, you will see **\"entity.host.name:\"**.  After the \":\", you can do a wildcard search.  For example **\"entity.host.name:abc*\"**.  Type in a wildcard string that matches the beginning of the hostname you found earlier. In my example, I could specify **\"entity.host.name:*mqace*\"** to filter on the MQ/ACE server.\n\nOne you have specified the filter, you'll see that the infrastructure view is filtered to just a single server that matches your search.  \n\n![](images/hostQuery.png)\n\nThere are many other types of queries that can be executed using the filter/search bar.  For example, you can specify AND, OR, and NOT conditions.  You can find detailed information on the lucene query language in the product docmentation found here:   [lucene query language](https://www.ibm.com/docs/en/instana-observability/current?topic=instana-filtering-dynamic-focus)\n\nClear the filter at the top of the page by clicking on the **X**\n\nNext, flyover the tower that represents either the Instana server or the OpenShift worker node.  These two towers are taller.  They are taller because there are more discovered entities running on those servers.\n\n  ![](images/student6Flyover.png) \n\nYou'll notice that a number of components were automatically discovered and are instrumented for monitoring.\n\nNext, flyover the ACE/MQ tower.\n\n  ![](images/student6Flyover2.png) \n\nThis is the ACE and MQ server. You can see the MQ and ACE components along with a discovered JVM, and more.\n\nNext, click on the **\"Comparison Table\"** near the top of the page.\n\n![](images/2022-05-27-18-19-43.png)\n\nThis table shows a sortable and searchable list of the Hosts that make up this environment.  You can quickly find hosts consuming high CPU, high memory, or have poor health.\n\nIn addition, if you select where is says **\"Hosts\"**, there is a dropdown list that allows you to see lists of JVMs, containers, etc.\n\n  ![](images/tableContent.png)\n\nChange from **\"Hosts\"** to **\"Docker Containers\"** in the dropdown list and you'll see a complete list of containers and their utilization and health.\n\nSwitch back to the Map view by clicking on **\"Map\"** near the upper left corner.\n\n  ![](images/map.png)\n\nZoom in with the plus sign in the bottom right corner.\n\n  ![](images/plus.png)\n\nYou'll notice that each tower is actually comprised of multiple pizza boxes.   Each one represents an **\"Entity\"** such as an MQ Queue Manager or an ACE Integration Node.\n\n  ![](images/pizzaBox.png)\n\nFlyover the ACE/MQ server again until you see a list of all discovered Entities.  If you only see 1 entity, move your mouse to one of the corners of the tower.\nOnce you see all of the entities, click your mouse.  You'll see a dialog open \n\n![](images/2022-05-27-18-22-34.png)\n\nUse the scroll bar to scroll down. You'll notice that you see each of the types of Entities that were discovered.  Expand the MQ entity type and you'll see the Queue\nManager that was discovered.\n\n![](images/2022-05-27-18-24-50.png)\n\nIt is possible to click on either the \"Open Dashboard\" button or the links for the individual entities.  If you clicked, you could navigate to either the Host \noperating system metrics or the specific middleware entity.\n\nClick on the \"Open Dashboard\" button and we'll examine the Host Agent dashboard.  \n\nAfter you click on the button you'll see a screen that looks like this:\n\n![](images/2022-05-27-18-26-49.png)\n\nYou can see fine grained metric data for the Host operating system. Most metrics are gathered at 1 second granularity.  This can be very valuable in diagnosing problems.  To see the 1 second metric data, let's shorten the time interval on the screen.  Click on the **time range** dropdown in the upper right corner and select **last minute**. This will filter the data to the last minute of metric data.\n\n![](images/lastMinute.png)\n\nNow, click the **Live** button in the upper right corner.  This will show you **Live** data as it is streaming into the Instana server in near-realtime.\n\n![](images/live.png)\n\nAfter examining the data, click the **time range** dropdown and select **Last Hour** to look at a more typical view within Instana.\n\nScroll down and explore the other metrics on the page.\n\nAs you scroll down the page, you'll notice a section on the left side of the screen that contains a list of Entity types that were discovered. This is the same list that you \nsaw earlier on the Infrastructure view.  By placing these links in context and leveraging the relationships that are discoved by Instana, it makes it easier to diagnose problems.\n\n![](images/2022-05-27-18-26-15.png)\n\nExpand the IBM MQ Queue Manager section and select the link for the **QM1@&lt;your-mqace-server&gt;** queue manager\n\nYou will navigate to the dashboard for the MQ Queue Manager. Scroll down the page and examine the metrics.  There are many tables that contain links that would allow you to\ndrill into the listener, topics, queues, channels, and more.  Let's focus on the Channels.  Scroll down to the table labeled **\"Channels\"**. \n\n![](images/2022-05-27-18-29-06.png)\n\nClick on the blue text on the left to drill into the Channel.  Examine the Channel metrics on the page.\n\nNext, look at the top of the screen.  You'll notice that this is a breadcrumb that allows you to navigate back to where you were earlier in your nativations.   It is also\npossible to use the back button in your browser.\n\n![](images/2022-05-27-18-39-59.png)\n\nIf time permits at the end of the lab, you can explore some of the other elements within the MQ sensor or other middleware such as ACE.\n\n***\n\n##  6-3:  Create an Application Perspective for Robot Shop\n\nBefore we can investigate Applications within Instana, we need to create an **Application Perspective**.  This section describes how to define the **Application Perspective**.\n\n**Application Perspectives** allow you to group together a number of different services and endpoints into dashboard that shows the health and performance of a business application. In this section, you will create and **Application Persective** for the **Robot Shop** application.\n\nOn the left hand navigation, select **\"Applications\"**. You will see a screen open up that contains a list of all applications that are defined in the environment.  Initially, this list maybe almost empty shwoing just **All Services** generic bucket.  \n\nThe next thing you are going to do is define an application.  You will see an **\"Add\"** button in the bottom right corner.\n\n  ![](images/add.png)\n\nClick the **\"Add\"** button\n\nA dialog will open with two options (one if Smart Alerts feature is not enabled yet on your server).  We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab.  For now, click on the **\"New Application Perspective\"** button\n\n  ![](images/newApplication.png)\n\nSwich to the Advanced View Mode  in the upper right corner. Then complete the definition to look like below.  First, type in **kubernetes** and then select **namespace**.  Then, click in the **value** field.  You'll notice that when you click on it, the field is pre-populated with **kubernetes namespaces** that have applications being monitored.  Select the **robot-shop** namespace. \n\n  ![](images/addRobotShop.png)\n\nThis selection will allow the **application perspective** to limit the scope to all transactions within the **robot-shop** kubernetes namespace.\n\nScroll down further in the dialog and select to include **All Calls** within the dashboard.\n\nFinally, click the **Create** button to create the application perspective.\n\n***\n\n##  6-4:  Create an Application Perspective for QOTD\n\nBefore we can investigate Applications within Instana, we need to create an **Application Perspective**.  This section describes how to define the **Application Perspective** for the **Quote of the Day** application.\n\n**Application Perspectives** allow you to group together a number of different services and endpoints into dashboard that shows the health and performance of a business application. In this section, you will create and **Application Persective** for the **Quote of the Day** application.\n\nOn the left hand navigation, select **\"Applications\"**. You will see a screen open up that contains a list of all applications that are defined in the environment.  Initially, this list maybe almost empty shwoing just **All Services** generic bucket.  \n\nThe next thing you are going to do is define an application.  You will see an **\"Add\"** button in the bottom right corner.\n\n  ![](images/add.png)\n\nClick the **\"Add\"** button\n\nA dialog will open with two options (one if Smart Alerts feature is not enabled yet on your server).  We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab.  For now, click on the **\"New Application Perspective\"** button\n\n  ![](images/newApplication.png)\n\nSwich to the Advanced View Mode  in the upper right corner. Then complete the definition to look like below.  As you add filters, you'll notice that Instana automatically populates the fields like the service name.  As you add filters, notice that you need to add a combination of AND and OR conditions to achieve the results that you want.\n\n![](images/2022-05-27-18-48-03.png)\n\nWhat this Application Perspective is doing is the following.  We are including the MQ Service by matching any service that contains the Queue Manager Name of QM1.  We're including any service that includes the name of our ACE Integration Server named BK1.  We're including any transactions that are in the **qotd** kubernetes **namespace** where the Quote of the Day application is installed.  Using namespaces makes it very easy to build **Application Perspectives** for cloud native applications.  Finally we added a filter to filter **OUT** any trace that has an endpoint name of **GET /health**.  The **GET /health** requests are the readiness probes (heartbeating) that happens within kubernetes to ensure the pods are healthy.  These transactions are not part of the application, so we want to exclude them.\n\nNote:  In these lab environments, the systems are fairly slow and the service names, kubernetes namespace, and endpoint name may not be available yet.  For example, if you start typing kubernetes and can't find it, you can use an alternative method of defining the application.  Add a filter with Service->Name contains **qotd** as shown below\n![](images/alternative.png)\n\n\nYou have now created an Application Perspective. In the next section, you'll explore the application (it can take few minutes before the data for application is populated).\n\n***\n\n##  6-5:  Explore the Application\n\nAfter creating the application, your screen should have automatically changed context to show the Application Perspective that you just defined.\n\nInitially, you probably won't see any metrics on the screen.  In the upper right corner, click the **\"Live\"** button and within a short amount of time you should start\nto see metrics in the widgets.\n\n![](images/2022-05-27-18-51-01.png)\n\nOn this page you can see the golden signals which include transaction volumes, the number of erroneous calls, and latency.  You'll also see the top services that make up the application.\n\nYou'll notice a number of tabs across the top of the screen.  Explore these tabs.  In particular, let's take a look at the **\"Depedencies\"** tab.  \n\nClick on the **Dependencies** tab.\n![](images/dependencies.png)\n\nOn the dependencies tab, you'll see a full topology of the application services.  This topology is discovered automatically.  You can see transactions flowing between\nthe different nodes in the topology.   Most of these services are node.js based cloud-native services. There should be also be a node with a name that ends in **BK1:EG2**. BK1 is the ACE Integration Node and EG2 is the ACE Integration Server. The QM1 node in the topology is the MQ Queue Manager named **\"QM1\"**.\n\n![](images/dependencies2.png)\n\nIn the example below, you'll notice that there are red alerts on the screen due to an Event triggering against the queue manager.  In your environment, you may not see errors or warnings.\n\nFly your mouse over the **QM1** node.  Flying over any node in the dependency graph will show you a summary of the traces going through that service.  You'll see the percentage of calls that are erroneous and the latency of the calls.\n\n![](images/flyoverQM.png)\n\nClick on the **\"QM1\"** node.  Notice that there are 3 options that would allow you to navigate to the MQ dashboard, the transaction Flow within MQ, or analyze the transaction\ncalls through MQ.  For now, we'll skip this navigation, but we suggest you explore those options later.\n\n![](images/dependenciesMQ.png)\n\nClick on **\"Upstream/Downsteam\"** near the top of the page.  This will allow you to see a list of Upstream and Downstream services for the application.\n\n  ![](images/upstreamDownstream.png)\n\nClick on **\"Stack\"** where you can view the Application, Kubernetes, and Infrastructure stack that makes up the application.\n\n![](images/2022-05-27-18-56-01.png)\n\nAll of this contextual and relationship data helps you analyze and debug you applications to get to root cause as quickly as possible.  In addition, Instana's built \nanalytics uses this data to automatically group multiple related **\"Events\"** into a single **\"Incident\"** for diagnosis.\n\nClose the **Stack** dialog by either clicking on the **Stack** button or somewhere else on the background of the Instana GUI.\n\nNote:  There are a few other tabs on this screen that you can explore on your own. For now, we're going to focus on the **Services**.\n\nClick on the Services Tab\n\n![](images/2022-05-27-18-57-07.png)\n\nYou will see a list of services that make up the application.\n\nScroll down on the page until you see the **\"qotd-engraving\"** service.\n\nClick on the **qotd-engraving** link on the left Column.  The qotd-engraving service is the service that calls and ACE flow and then puts a message on the MQ queue. \nWe want to explore this service in more detail.\n\n  ![](images/qotdEngraving.png)\n\nYou should see a page showing the transactional data filtered down to just the qotd-engraving service.\n\nClick on the **\"Analyze Calls\"** button to analyze the individual transactions that are executing within the **\"qotd-engraving\"** service.\n\n  ![](images/analyzeCalls.png)\n\nThis will take you to a screen showing all of the different types of calls taking place within the qotd-engraving service.  At the top, there is a summary of all calls in terms of\ntransaction rates, return codes, erroneous calls, and latency.\n\nOn the right side, click the arrow to expand the list of qotd-engraving **\"POST /order\"** calls.  Instana is capturing 100% of the transactions so that you don't miss intermittent problems that might be occurring in the environment. \n\n  ![](images/engravingCalls.png)\n\nSelect one of the requests\n\nYou are now looking at the tracing data for a single transaction.  At the top of the screen, you will see a summary of the latency, sub-calls and timeline. On the right\nside of the screen, you'll see the details and stack trace.\n  ![](images/call1.png)\n\nScroll down and you will see the service endpoint list\n\n  ![](images/call2.png)\n\nFinally, scroll to the bottom of the screen and you will see a detailed call stack.  The call stack gives you the timing and sequence of the call going through the application.\n\nNote: If errors were captured in the logs, they would be shown at the bottom of the screen, below the call stack.\n\n  ![](images/call3.png)\n\nIf you select the text on the left or the timeline bar, the **\"Details & Stack Trace\"** context will change.\n\nExplore the different types of calls going through this transaction by selecting the individual call.  When you select an entry, examine the detailed information on the right.\n\n  ![](images/callStack.png)\n\nYou should notice that different request types are color coded differently.  Blue represents the HTTP requests going through an App Server or java process. Orange represents\na database call.  And green represents a messaging call (ACE and MQ).  \n\nWhen you select the Node.js App Server requests, you'll see the **StackTrace** on the right hand side. Within the **StackTrace**, click one of the URLs.\n\n  ![](images/stackTrace.png)\n\nWhen you click on the link, Instana will decompile the code and show you the lines of code.  The exact line of code that is executing will be highlighted in yellow.\n\n  ![](images/lineOfCode.png)\n\nClick the **X** in the upper right corner to close the dialog.\n\nWhen you select the ACE portions of the call Stack (gen.supplychain, msgFlowTransaction, and postOrder) you will see key information including the flow name, Integration Node,\nIntegration Server, IP address, and more on the right side of the screen.\n\n  ![](images/ace.png)\n\nWhen you select the MQ portion of the call stack, you'll see key information related to the MQ environment on the right.  The information includes the Queue Manager, Queue Name, and the message ID that was posted on the queue.\n\nScroll down to the very bottom on the right side of the screen and you will see a link named **\"CP4I.DEMO.API.Q\"**. Click on the **\"CP4I.DEMO.API.Q\"** link and you will navigate to the Queue page of the MQ sensor for the CP4I.DEMO.API.Q queue.  Instana places these links in context to make it easier to diagnose problems.\n\n  ![](images/mq.png)\n\n\nEarlier, you explored the Queue Manager and the MQ Channels.  You're now looking at the queue that is being used by this application.  You'll notice key information\nlike the oldest message on the queue, queue depth, input/output rates, and more.\n\n  ![](images/queue1.png)\n\n***\n\n## 6-6:  Websites and Mobile App Monitoring\n\nNext, let's take a look at **Website** and **Mobile Application** Monitoring.  In this environment, Instana does not include an native mobile applications, but know that Instana can gather End User Monitoring (EUM) data from Mobile Applications.  For now, we'll investigate the website monitoring.   \n\nUsing the left side navigation, select **Websites & Mobile Apps**\n\n  ![](images/website.png)\n\nYou will see a list of websites that are being monitored.  In this environment, you'll see the **Bee-Travels** application website.  Click on the blue link for the **Bee-Travels** website to drill down for more details.\n\n  ![](images/websiteQOTD.png)  \n\nExplore the additional data available within the website monitoring by clicking on some of the other tabs.\n\n  ![](images/websiteTabs.png)\n\nNext, explore the **Filters** that you see at the top of the screen.\n\n  ![](images/websiteQOTD3.png)\n\nIn this environment, the filters will not be very interesting because there is only automated workload coming from a single location.   But, usually, you can use this information to filter the web traffic down to specific browser types, OS's, geographic locations and key metadata tags.   This can be very useful in identifying whether specific network locations, browser, or OS's are having performance problems.   If you want to see typical EUM data, you can look at one of the IBM sales or Business Partner demo environments.\n\nAt the top of the screen, click on the **Analyze Page Loads* button\n\n  ![](images/analyzePageLoads.png)\n\nYou will see a detailed list of the web requests grouped by URL path.  \n\nSelect the **Group** icon next to one of the URL paths.  This will give you a page that is filtered to the transactions for just that single URL path.  As with Tracing, Instana is capturing 100% of the web transactions.\n\n  ![](images/websiteGroup.png)\n\n\n  Next, select one of the requests.  You will see a detailed page showing the EUM data and more.  At the top of the page, you'll notice that you can see the user that made the request.  This sensitive data can be ommitted by Instana if the customer desires.  You'll also see the Browser version and operating system that was used to access the web page.  Depending on the environment, you'll also see geolocation data for where the person accessed the application.  In some cases the private IP addresses are not mapped and the **User Location** data will be empty.\n\n  ![](images/EUM.png)\n\nScroll down on the page and you'll see a detailed breakdown of the request including timings for the key page content.  \n\nExpand one of the entries on the right by clicking the down arrow to view more details.  \n\n  ![](images/webTrace.png)\n\nWe are not going to do it for this lab, but if you click on the **View Backend Trace** button, you can investigate the backend trace data that you saw earlier in the lab.\n\n***\n\nNext, we're goint to investigate Instana's unbounded analytics.  Navigate to the **Analytics** using the left side navigation.\n\n  ![](images/analytics.png)\n\nInitially, you will see a screen showing 100% of the **Application Calls** that are happening in the environment. \n\nSelect the dropdown at the top of the page labeled **Applications / Calls** to view other options.  For example, you could analyze the traces, websites, mobile applications, or profiles.   For now, close the dialog and we'll analyze the **Application Calls**\n\n  ![](images/typeOfCalls.png)\n\nOne of the key Instana capabilities is **unbounded analytics**. This allows you to apply ad-hoc queries to easily find the data you are looking for.  On the screen, you'll see a couple of different ways that you can query/filter the metrics.  \n\nOne the left side, you'll see a mumber of about of the box filters.  Expand the dropdown arrows to see the options.  Then, select one of the checkboxes to filter the data.\n\n  ![](images/filterOptions.png)\n\nNow, uncheck the checkbox to remove the filter.\n\nAnother option is to use the **filter** and **group** options at the top of the page.  Let's try out an example.  Let's say you want to find the slowest SQL statements in the environment.  Let's try to implement a **filter** and **group** to accomplish that.\n\nSelect the **Add Filter** button at the top of the page.  Then, select **Call Type** and select **Database**\n\n  ![](images/databaseFilter.png)\n\nThis will filter the calls to just the database calls.  But, the calls are not organized in a meaningful way.   So, let's use the **group** option to group the statements.\n\nClick on the **Add Group** button.  Then, type **database** in the filter box and select **Statement**\n\n  ![](images/groupStatements.png)\n\nThis will group all of the Database statements by unique SQL statements.  You can then take these statements and sort them by latency, erroneous calls, etc.\n\n  ![](images/sort.png)\n\nNote: You also have the option **select metrics** to choose the metrics that you want to see on the screen. For example, change latency from Average to 95th percentile.\n\n***\n\nNow, let's explore one more key capabilitity within Instana.  \n\nIn the upper right corner of the screen, there is an icon of a chain link.  Click on the **link** and a dialog will open.  By clicking the **Copy** button, you can send a link to a team member.  When they open the link, it will take them to a screen with the exact same context that you are looking at.  This can be very valuable when collaborating with team members to diagnose a problem.  Within the dialog, you'll see that there is a checkbox to **Lock current time range**.  By locking the current time range, when the link it opened, it will take the person to a view with the exact same time range that you are looking at.  Otherwise, they are taken to the most recent time range.\n\n  ![](images/link.png)\n\n\nThat completes the Explore section of the lab.\n\n***\n\n## 6-7:  Summary\n\nIn this exercise you have explored some of the key capabilities within Instana.  You explored Kubernetes monitoring. You explored the Infrastructure view.  You defined an Application Perspective. And you explored the application monitoring details.  You learned about the website monitoring and EUM data. And, you reviewed the unbounded analytics.\n\nNavigate to section 7 of the lab where we will investigate the Administrative capabilities within Instana.\n\n***","type":"Mdx","contentDigest":"18cbd61aaa8b70dca54f6d9d0b8f4afb","owner":"gatsby-plugin-mdx","counter":900},"frontmatter":{"title":"Explore Instana and the Quote of the Day Application","description":"Explore Instana and the Quote of the Day Application"},"exports":{},"rawBody":"---\ntitle: Explore Instana and the Quote of the Day Application\ndescription: Explore Instana and the Quote of the Day Application\n---\n\n<AnchorLinks>\n  <AnchorLink>6-1: Explore Kubernetes</AnchorLink>\n  <AnchorLink>6-2: Explore the Infrastructure View</AnchorLink>\n  <AnchorLink>6-3: Create an Application Perspective for Robot Shop</AnchorLink>\n  <AnchorLink>6-4: Create an Application Perspective for QOTD</AnchorLink>\n  <AnchorLink>6-5: Explore the Application</AnchorLink>\n  <AnchorLink>6-6: Websites and Mobile App monitoring</AnchorLink>\n  <AnchorLink>6-7: Summary</AnchorLink>\n</AnchorLinks>\n***\n\nFollow the tutorial below to explore some key Instana capabilities including monitoring of Kubernetes, monitoring of applications, and monitoring of infrastructure.\n\n## 6-1:  Explore Kubernetes\n\nOpen the browser tab for the Instana user interface.\n\nOn the left navigation, select **Platforms** and then **Kubernetes**\n![](images/kubernetes.png)\n\nWhen you select **Platforms** in the classroom environment, you will only see **kubernetes** and **Cloud Foundry**.  But, there are additional **feature flags** that can be enabled to add in other technologies like **VMware**, **Power HMC**, and **Z HMC**. You saw the **feature flags** for those technologies when you performed the Instana server installation.\n\nYou will see a list of Kubernetes clusters.   Look for the Cluster name that you chose when you installed the Instana Agent into OpenShift.  \n![](images/clusters.png)\n\nAssuming that your cluster shows up properly, click the cluster name to open the dashboard.\n\nYou should see a screen similar to the one below where you can see overall utilization of the Kubernetes cluster.\n![](images/cluster.png)\n\nSelect some of the other tabs to explore the Kubernetes monitoring.  We recommend you look at the Events, Nodes, and Pods tabs.  When you select the pods tab, you will see a list of all pods running within the cluster.\n\nIn the upper right corner, add `qotd` into the search widget.  You'll notice that it will filter the list to the pods related to the Quote of the Day application.\n![](images/pods.png)\n\nClick on one of the links on the left side and drill into the pod utilization details.\n\n***\n\n## 6-2:  Explore the Infrastructure View\n\nNext, explore the Infrastructure view.  To do this, click on the **\"Infrastructure\"** icon on the left side.\n\n![](images/2022-05-27-18-16-43.png)\n\nYou'll notice that there is a square surrounding the **\"towers\"** with the zone names that you specified.  The square is a **\"zone\"**.  If you recall, you specified a zone name when you performed the install of the Instana Agent.  The towers contained within the zones represents the OpenShift worker node, the Instana server, and the virtual machine running ACE and MQ.\n\nHINT: If you cannot see 5 hosts in your zones, then one of the Agents is not connecting properly.  There should be 3 OpenShift worker nodes, the Instana server, and the ACE/MQ server. If you see a host show up in the **Undefined Zone**, it means that you did not specify a zone name in the Agent configuration.\n\nIn a large environment, it can be difficult to find the server or zone that you are looking for.  Fortunately, there are a number of ways that you can search for things within the Infrastructure view.  \n\nIn the bottom right corner, click on some of the icons and explore different ways of organizing and filtering the Infrastructure view.\n![](images/filters.png)\n\n\nOr, you can use the lucene query language in the filter/search bar at the top of the page.  Before beginning the search, flyover one of the towers and identify the hostname of one of the servers.  For example jam-stack-dal10-01-mqace.<fully qualified hostname\\>\n- Click in the filter bar and select **\"Entity\"**\n- A list will popup. Start typing **host** and you will see the list filtered to \"host\".  Once you see the single entry, select **host**.\n- Once you have select \"Host\", another list will popup. Select **name**.\n- Now, you will see **\"entity.host.name:\"**.  After the \":\", you can do a wildcard search.  For example **\"entity.host.name:abc*\"**.  Type in a wildcard string that matches the beginning of the hostname you found earlier. In my example, I could specify **\"entity.host.name:*mqace*\"** to filter on the MQ/ACE server.\n\nOne you have specified the filter, you'll see that the infrastructure view is filtered to just a single server that matches your search.  \n\n![](images/hostQuery.png)\n\nThere are many other types of queries that can be executed using the filter/search bar.  For example, you can specify AND, OR, and NOT conditions.  You can find detailed information on the lucene query language in the product docmentation found here:   [lucene query language](https://www.ibm.com/docs/en/instana-observability/current?topic=instana-filtering-dynamic-focus)\n\nClear the filter at the top of the page by clicking on the **X**\n\nNext, flyover the tower that represents either the Instana server or the OpenShift worker node.  These two towers are taller.  They are taller because there are more discovered entities running on those servers.\n\n  ![](images/student6Flyover.png) \n\nYou'll notice that a number of components were automatically discovered and are instrumented for monitoring.\n\nNext, flyover the ACE/MQ tower.\n\n  ![](images/student6Flyover2.png) \n\nThis is the ACE and MQ server. You can see the MQ and ACE components along with a discovered JVM, and more.\n\nNext, click on the **\"Comparison Table\"** near the top of the page.\n\n![](images/2022-05-27-18-19-43.png)\n\nThis table shows a sortable and searchable list of the Hosts that make up this environment.  You can quickly find hosts consuming high CPU, high memory, or have poor health.\n\nIn addition, if you select where is says **\"Hosts\"**, there is a dropdown list that allows you to see lists of JVMs, containers, etc.\n\n  ![](images/tableContent.png)\n\nChange from **\"Hosts\"** to **\"Docker Containers\"** in the dropdown list and you'll see a complete list of containers and their utilization and health.\n\nSwitch back to the Map view by clicking on **\"Map\"** near the upper left corner.\n\n  ![](images/map.png)\n\nZoom in with the plus sign in the bottom right corner.\n\n  ![](images/plus.png)\n\nYou'll notice that each tower is actually comprised of multiple pizza boxes.   Each one represents an **\"Entity\"** such as an MQ Queue Manager or an ACE Integration Node.\n\n  ![](images/pizzaBox.png)\n\nFlyover the ACE/MQ server again until you see a list of all discovered Entities.  If you only see 1 entity, move your mouse to one of the corners of the tower.\nOnce you see all of the entities, click your mouse.  You'll see a dialog open \n\n![](images/2022-05-27-18-22-34.png)\n\nUse the scroll bar to scroll down. You'll notice that you see each of the types of Entities that were discovered.  Expand the MQ entity type and you'll see the Queue\nManager that was discovered.\n\n![](images/2022-05-27-18-24-50.png)\n\nIt is possible to click on either the \"Open Dashboard\" button or the links for the individual entities.  If you clicked, you could navigate to either the Host \noperating system metrics or the specific middleware entity.\n\nClick on the \"Open Dashboard\" button and we'll examine the Host Agent dashboard.  \n\nAfter you click on the button you'll see a screen that looks like this:\n\n![](images/2022-05-27-18-26-49.png)\n\nYou can see fine grained metric data for the Host operating system. Most metrics are gathered at 1 second granularity.  This can be very valuable in diagnosing problems.  To see the 1 second metric data, let's shorten the time interval on the screen.  Click on the **time range** dropdown in the upper right corner and select **last minute**. This will filter the data to the last minute of metric data.\n\n![](images/lastMinute.png)\n\nNow, click the **Live** button in the upper right corner.  This will show you **Live** data as it is streaming into the Instana server in near-realtime.\n\n![](images/live.png)\n\nAfter examining the data, click the **time range** dropdown and select **Last Hour** to look at a more typical view within Instana.\n\nScroll down and explore the other metrics on the page.\n\nAs you scroll down the page, you'll notice a section on the left side of the screen that contains a list of Entity types that were discovered. This is the same list that you \nsaw earlier on the Infrastructure view.  By placing these links in context and leveraging the relationships that are discoved by Instana, it makes it easier to diagnose problems.\n\n![](images/2022-05-27-18-26-15.png)\n\nExpand the IBM MQ Queue Manager section and select the link for the **QM1@&lt;your-mqace-server&gt;** queue manager\n\nYou will navigate to the dashboard for the MQ Queue Manager. Scroll down the page and examine the metrics.  There are many tables that contain links that would allow you to\ndrill into the listener, topics, queues, channels, and more.  Let's focus on the Channels.  Scroll down to the table labeled **\"Channels\"**. \n\n![](images/2022-05-27-18-29-06.png)\n\nClick on the blue text on the left to drill into the Channel.  Examine the Channel metrics on the page.\n\nNext, look at the top of the screen.  You'll notice that this is a breadcrumb that allows you to navigate back to where you were earlier in your nativations.   It is also\npossible to use the back button in your browser.\n\n![](images/2022-05-27-18-39-59.png)\n\nIf time permits at the end of the lab, you can explore some of the other elements within the MQ sensor or other middleware such as ACE.\n\n***\n\n##  6-3:  Create an Application Perspective for Robot Shop\n\nBefore we can investigate Applications within Instana, we need to create an **Application Perspective**.  This section describes how to define the **Application Perspective**.\n\n**Application Perspectives** allow you to group together a number of different services and endpoints into dashboard that shows the health and performance of a business application. In this section, you will create and **Application Persective** for the **Robot Shop** application.\n\nOn the left hand navigation, select **\"Applications\"**. You will see a screen open up that contains a list of all applications that are defined in the environment.  Initially, this list maybe almost empty shwoing just **All Services** generic bucket.  \n\nThe next thing you are going to do is define an application.  You will see an **\"Add\"** button in the bottom right corner.\n\n  ![](images/add.png)\n\nClick the **\"Add\"** button\n\nA dialog will open with two options (one if Smart Alerts feature is not enabled yet on your server).  We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab.  For now, click on the **\"New Application Perspective\"** button\n\n  ![](images/newApplication.png)\n\nSwich to the Advanced View Mode  in the upper right corner. Then complete the definition to look like below.  First, type in **kubernetes** and then select **namespace**.  Then, click in the **value** field.  You'll notice that when you click on it, the field is pre-populated with **kubernetes namespaces** that have applications being monitored.  Select the **robot-shop** namespace. \n\n  ![](images/addRobotShop.png)\n\nThis selection will allow the **application perspective** to limit the scope to all transactions within the **robot-shop** kubernetes namespace.\n\nScroll down further in the dialog and select to include **All Calls** within the dashboard.\n\nFinally, click the **Create** button to create the application perspective.\n\n***\n\n##  6-4:  Create an Application Perspective for QOTD\n\nBefore we can investigate Applications within Instana, we need to create an **Application Perspective**.  This section describes how to define the **Application Perspective** for the **Quote of the Day** application.\n\n**Application Perspectives** allow you to group together a number of different services and endpoints into dashboard that shows the health and performance of a business application. In this section, you will create and **Application Persective** for the **Quote of the Day** application.\n\nOn the left hand navigation, select **\"Applications\"**. You will see a screen open up that contains a list of all applications that are defined in the environment.  Initially, this list maybe almost empty shwoing just **All Services** generic bucket.  \n\nThe next thing you are going to do is define an application.  You will see an **\"Add\"** button in the bottom right corner.\n\n  ![](images/add.png)\n\nClick the **\"Add\"** button\n\nA dialog will open with two options (one if Smart Alerts feature is not enabled yet on your server).  We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab.  For now, click on the **\"New Application Perspective\"** button\n\n  ![](images/newApplication.png)\n\nSwich to the Advanced View Mode  in the upper right corner. Then complete the definition to look like below.  As you add filters, you'll notice that Instana automatically populates the fields like the service name.  As you add filters, notice that you need to add a combination of AND and OR conditions to achieve the results that you want.\n\n![](images/2022-05-27-18-48-03.png)\n\nWhat this Application Perspective is doing is the following.  We are including the MQ Service by matching any service that contains the Queue Manager Name of QM1.  We're including any service that includes the name of our ACE Integration Server named BK1.  We're including any transactions that are in the **qotd** kubernetes **namespace** where the Quote of the Day application is installed.  Using namespaces makes it very easy to build **Application Perspectives** for cloud native applications.  Finally we added a filter to filter **OUT** any trace that has an endpoint name of **GET /health**.  The **GET /health** requests are the readiness probes (heartbeating) that happens within kubernetes to ensure the pods are healthy.  These transactions are not part of the application, so we want to exclude them.\n\nNote:  In these lab environments, the systems are fairly slow and the service names, kubernetes namespace, and endpoint name may not be available yet.  For example, if you start typing kubernetes and can't find it, you can use an alternative method of defining the application.  Add a filter with Service->Name contains **qotd** as shown below\n![](images/alternative.png)\n\n\nYou have now created an Application Perspective. In the next section, you'll explore the application (it can take few minutes before the data for application is populated).\n\n***\n\n##  6-5:  Explore the Application\n\nAfter creating the application, your screen should have automatically changed context to show the Application Perspective that you just defined.\n\nInitially, you probably won't see any metrics on the screen.  In the upper right corner, click the **\"Live\"** button and within a short amount of time you should start\nto see metrics in the widgets.\n\n![](images/2022-05-27-18-51-01.png)\n\nOn this page you can see the golden signals which include transaction volumes, the number of erroneous calls, and latency.  You'll also see the top services that make up the application.\n\nYou'll notice a number of tabs across the top of the screen.  Explore these tabs.  In particular, let's take a look at the **\"Depedencies\"** tab.  \n\nClick on the **Dependencies** tab.\n![](images/dependencies.png)\n\nOn the dependencies tab, you'll see a full topology of the application services.  This topology is discovered automatically.  You can see transactions flowing between\nthe different nodes in the topology.   Most of these services are node.js based cloud-native services. There should be also be a node with a name that ends in **BK1:EG2**. BK1 is the ACE Integration Node and EG2 is the ACE Integration Server. The QM1 node in the topology is the MQ Queue Manager named **\"QM1\"**.\n\n![](images/dependencies2.png)\n\nIn the example below, you'll notice that there are red alerts on the screen due to an Event triggering against the queue manager.  In your environment, you may not see errors or warnings.\n\nFly your mouse over the **QM1** node.  Flying over any node in the dependency graph will show you a summary of the traces going through that service.  You'll see the percentage of calls that are erroneous and the latency of the calls.\n\n![](images/flyoverQM.png)\n\nClick on the **\"QM1\"** node.  Notice that there are 3 options that would allow you to navigate to the MQ dashboard, the transaction Flow within MQ, or analyze the transaction\ncalls through MQ.  For now, we'll skip this navigation, but we suggest you explore those options later.\n\n![](images/dependenciesMQ.png)\n\nClick on **\"Upstream/Downsteam\"** near the top of the page.  This will allow you to see a list of Upstream and Downstream services for the application.\n\n  ![](images/upstreamDownstream.png)\n\nClick on **\"Stack\"** where you can view the Application, Kubernetes, and Infrastructure stack that makes up the application.\n\n![](images/2022-05-27-18-56-01.png)\n\nAll of this contextual and relationship data helps you analyze and debug you applications to get to root cause as quickly as possible.  In addition, Instana's built \nanalytics uses this data to automatically group multiple related **\"Events\"** into a single **\"Incident\"** for diagnosis.\n\nClose the **Stack** dialog by either clicking on the **Stack** button or somewhere else on the background of the Instana GUI.\n\nNote:  There are a few other tabs on this screen that you can explore on your own. For now, we're going to focus on the **Services**.\n\nClick on the Services Tab\n\n![](images/2022-05-27-18-57-07.png)\n\nYou will see a list of services that make up the application.\n\nScroll down on the page until you see the **\"qotd-engraving\"** service.\n\nClick on the **qotd-engraving** link on the left Column.  The qotd-engraving service is the service that calls and ACE flow and then puts a message on the MQ queue. \nWe want to explore this service in more detail.\n\n  ![](images/qotdEngraving.png)\n\nYou should see a page showing the transactional data filtered down to just the qotd-engraving service.\n\nClick on the **\"Analyze Calls\"** button to analyze the individual transactions that are executing within the **\"qotd-engraving\"** service.\n\n  ![](images/analyzeCalls.png)\n\nThis will take you to a screen showing all of the different types of calls taking place within the qotd-engraving service.  At the top, there is a summary of all calls in terms of\ntransaction rates, return codes, erroneous calls, and latency.\n\nOn the right side, click the arrow to expand the list of qotd-engraving **\"POST /order\"** calls.  Instana is capturing 100% of the transactions so that you don't miss intermittent problems that might be occurring in the environment. \n\n  ![](images/engravingCalls.png)\n\nSelect one of the requests\n\nYou are now looking at the tracing data for a single transaction.  At the top of the screen, you will see a summary of the latency, sub-calls and timeline. On the right\nside of the screen, you'll see the details and stack trace.\n  ![](images/call1.png)\n\nScroll down and you will see the service endpoint list\n\n  ![](images/call2.png)\n\nFinally, scroll to the bottom of the screen and you will see a detailed call stack.  The call stack gives you the timing and sequence of the call going through the application.\n\nNote: If errors were captured in the logs, they would be shown at the bottom of the screen, below the call stack.\n\n  ![](images/call3.png)\n\nIf you select the text on the left or the timeline bar, the **\"Details & Stack Trace\"** context will change.\n\nExplore the different types of calls going through this transaction by selecting the individual call.  When you select an entry, examine the detailed information on the right.\n\n  ![](images/callStack.png)\n\nYou should notice that different request types are color coded differently.  Blue represents the HTTP requests going through an App Server or java process. Orange represents\na database call.  And green represents a messaging call (ACE and MQ).  \n\nWhen you select the Node.js App Server requests, you'll see the **StackTrace** on the right hand side. Within the **StackTrace**, click one of the URLs.\n\n  ![](images/stackTrace.png)\n\nWhen you click on the link, Instana will decompile the code and show you the lines of code.  The exact line of code that is executing will be highlighted in yellow.\n\n  ![](images/lineOfCode.png)\n\nClick the **X** in the upper right corner to close the dialog.\n\nWhen you select the ACE portions of the call Stack (gen.supplychain, msgFlowTransaction, and postOrder) you will see key information including the flow name, Integration Node,\nIntegration Server, IP address, and more on the right side of the screen.\n\n  ![](images/ace.png)\n\nWhen you select the MQ portion of the call stack, you'll see key information related to the MQ environment on the right.  The information includes the Queue Manager, Queue Name, and the message ID that was posted on the queue.\n\nScroll down to the very bottom on the right side of the screen and you will see a link named **\"CP4I.DEMO.API.Q\"**. Click on the **\"CP4I.DEMO.API.Q\"** link and you will navigate to the Queue page of the MQ sensor for the CP4I.DEMO.API.Q queue.  Instana places these links in context to make it easier to diagnose problems.\n\n  ![](images/mq.png)\n\n\nEarlier, you explored the Queue Manager and the MQ Channels.  You're now looking at the queue that is being used by this application.  You'll notice key information\nlike the oldest message on the queue, queue depth, input/output rates, and more.\n\n  ![](images/queue1.png)\n\n***\n\n## 6-6:  Websites and Mobile App Monitoring\n\nNext, let's take a look at **Website** and **Mobile Application** Monitoring.  In this environment, Instana does not include an native mobile applications, but know that Instana can gather End User Monitoring (EUM) data from Mobile Applications.  For now, we'll investigate the website monitoring.   \n\nUsing the left side navigation, select **Websites & Mobile Apps**\n\n  ![](images/website.png)\n\nYou will see a list of websites that are being monitored.  In this environment, you'll see the **Bee-Travels** application website.  Click on the blue link for the **Bee-Travels** website to drill down for more details.\n\n  ![](images/websiteQOTD.png)  \n\nExplore the additional data available within the website monitoring by clicking on some of the other tabs.\n\n  ![](images/websiteTabs.png)\n\nNext, explore the **Filters** that you see at the top of the screen.\n\n  ![](images/websiteQOTD3.png)\n\nIn this environment, the filters will not be very interesting because there is only automated workload coming from a single location.   But, usually, you can use this information to filter the web traffic down to specific browser types, OS's, geographic locations and key metadata tags.   This can be very useful in identifying whether specific network locations, browser, or OS's are having performance problems.   If you want to see typical EUM data, you can look at one of the IBM sales or Business Partner demo environments.\n\nAt the top of the screen, click on the **Analyze Page Loads* button\n\n  ![](images/analyzePageLoads.png)\n\nYou will see a detailed list of the web requests grouped by URL path.  \n\nSelect the **Group** icon next to one of the URL paths.  This will give you a page that is filtered to the transactions for just that single URL path.  As with Tracing, Instana is capturing 100% of the web transactions.\n\n  ![](images/websiteGroup.png)\n\n\n  Next, select one of the requests.  You will see a detailed page showing the EUM data and more.  At the top of the page, you'll notice that you can see the user that made the request.  This sensitive data can be ommitted by Instana if the customer desires.  You'll also see the Browser version and operating system that was used to access the web page.  Depending on the environment, you'll also see geolocation data for where the person accessed the application.  In some cases the private IP addresses are not mapped and the **User Location** data will be empty.\n\n  ![](images/EUM.png)\n\nScroll down on the page and you'll see a detailed breakdown of the request including timings for the key page content.  \n\nExpand one of the entries on the right by clicking the down arrow to view more details.  \n\n  ![](images/webTrace.png)\n\nWe are not going to do it for this lab, but if you click on the **View Backend Trace** button, you can investigate the backend trace data that you saw earlier in the lab.\n\n***\n\nNext, we're goint to investigate Instana's unbounded analytics.  Navigate to the **Analytics** using the left side navigation.\n\n  ![](images/analytics.png)\n\nInitially, you will see a screen showing 100% of the **Application Calls** that are happening in the environment. \n\nSelect the dropdown at the top of the page labeled **Applications / Calls** to view other options.  For example, you could analyze the traces, websites, mobile applications, or profiles.   For now, close the dialog and we'll analyze the **Application Calls**\n\n  ![](images/typeOfCalls.png)\n\nOne of the key Instana capabilities is **unbounded analytics**. This allows you to apply ad-hoc queries to easily find the data you are looking for.  On the screen, you'll see a couple of different ways that you can query/filter the metrics.  \n\nOne the left side, you'll see a mumber of about of the box filters.  Expand the dropdown arrows to see the options.  Then, select one of the checkboxes to filter the data.\n\n  ![](images/filterOptions.png)\n\nNow, uncheck the checkbox to remove the filter.\n\nAnother option is to use the **filter** and **group** options at the top of the page.  Let's try out an example.  Let's say you want to find the slowest SQL statements in the environment.  Let's try to implement a **filter** and **group** to accomplish that.\n\nSelect the **Add Filter** button at the top of the page.  Then, select **Call Type** and select **Database**\n\n  ![](images/databaseFilter.png)\n\nThis will filter the calls to just the database calls.  But, the calls are not organized in a meaningful way.   So, let's use the **group** option to group the statements.\n\nClick on the **Add Group** button.  Then, type **database** in the filter box and select **Statement**\n\n  ![](images/groupStatements.png)\n\nThis will group all of the Database statements by unique SQL statements.  You can then take these statements and sort them by latency, erroneous calls, etc.\n\n  ![](images/sort.png)\n\nNote: You also have the option **select metrics** to choose the metrics that you want to see on the screen. For example, change latency from Average to 95th percentile.\n\n***\n\nNow, let's explore one more key capabilitity within Instana.  \n\nIn the upper right corner of the screen, there is an icon of a chain link.  Click on the **link** and a dialog will open.  By clicking the **Copy** button, you can send a link to a team member.  When they open the link, it will take them to a screen with the exact same context that you are looking at.  This can be very valuable when collaborating with team members to diagnose a problem.  Within the dialog, you'll see that there is a checkbox to **Lock current time range**.  By locking the current time range, when the link it opened, it will take the person to a view with the exact same time range that you are looking at.  Otherwise, they are taken to the most recent time range.\n\n  ![](images/link.png)\n\n\nThat completes the Explore section of the lab.\n\n***\n\n## 6-7:  Summary\n\nIn this exercise you have explored some of the key capabilities within Instana.  You explored Kubernetes monitoring. You explored the Infrastructure view.  You defined an Application Perspective. And you explored the application monitoring details.  You learned about the website monitoring and EUM data. And, you reviewed the unbounded analytics.\n\nNavigate to section 7 of the lab where we will investigate the Administrative capabilities within Instana.\n\n***","fileAbsolutePath":"/Volumes/SSD Storage/IBM-DEVELOPMENT/TECHJAM2022/IBM/waiops-tech-jam/src/pages/tutorials/instana/explore/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}