{"componentChunkName":"component---src-pages-tutorials-instana-ibm-middleware-index-mdx","path":"/tutorials/instana/ibm-middleware/","result":{"pageContext":{"frontmatter":{"title":"Configure ACE and MQ for Instana Monitoring & Tracing","description":"Configure the Quote of the Day Application and Install/Configure Monitoring"},"relativePagePath":"/tutorials/instana/ibm-middleware/index.mdx","titleType":"page","MdxNode":{"id":"2c9cfdd9-2914-50b7-8e33-f57eafdba8b8","children":[],"parent":"ac10019f-8eb7-5c01-a6f6-958ac1e6b478","internal":{"content":"---\ntitle: Configure ACE and MQ for Instana Monitoring & Tracing\ndescription: Configure the Quote of the Day Application and Install/Configure Monitoring\n---\n\n<AnchorLinks>\n  <AnchorLink>4-1: Introduction</AnchorLink>\n  <AnchorLink>4-2: Installing the Instana agents</AnchorLink>\n  <AnchorLink>4-3: Configure Quote of the Day Application to use MQ & ACE</AnchorLink>\n  <AnchorLink>4-4: Configure ACE and MQ for Resource Monitoring</AnchorLink>\n  <AnchorLink>4-5: Configure ACE and MQ for Tracing</AnchorLink>\n  <AnchorLink>4-6: Configure the ACE and MQ Sensors</AnchorLink>\n  <AnchorLink>4-7: Further Configuration</AnchorLink>\n  <AnchorLink>4-8: Summary</AnchorLink>\n</AnchorLinks>\n\n## 4-1:  Introduction\n\nPositioning Instana at existing IBM customers often requires presenting Instana value proposition in context of other IBM middleware used by the client.\nIn this section, you will find guidence about configuring and using Instana with the following IBM technologies:\n\n- MQ\n- App Connect Enterprise (ACE)\n\n***\n\n## 4-2:  Installing the Instana agents\n\nIn this portion of the lab, you will be updating \"Quote of the Day\" hybrid application to use ACE and MQ, and configuring the Instana to monitor the whole application.  That includes configuration of the MQ and ACE sensors.\n\nThis tutorial won't provide you a detailed step-by-step instructions for simple tasks - it is assumed that you are familiar with basics of Instana. \n\n1. Open the browser to login to the Instana user interface.  Credentials for your instance you can find in the [Environments](../../general/teams) section.\n\n2. Login through SSH to the MQ/ACE virtual machine.\n\n***\n\n## 4-3:  Configure Quote of the Day Application to use MQ & ACE\n\nThe **\"Quote of the Day\"** application has been installed for you on the OpenShift cluster. For more information about the **Quote of the Day** application, you can go to this GitLab location: https://gitlab.com/quote-of-the-day/quote-of-the-day (It is not necessary to go there, but you might be interested in learning more about the application.)\n\nFor the containerized portion of the application, some technologies are automatically instrumented for monitoring. In addition, the load generation tool is continuously running transactions against the application.  \n\nLet's verify that things are running.  Issue the **oc get pods** command against the **qotd** namespace/project.\n```sh\noc get pods -n qotd\n```\n\nYou should see results similar to this:\n\n![](images/qotdPods.png)\n\nThe next step is to modify the configuration of the Quote of the Day application so that it uses an external ACE and MQ server.  By default, the engraving service runs as a cloud native call that doesn't really do anything.  We want to modify the configuration so that the engraving service makes a REST API call to ACE and ACE subsequently calls MQ and puts a message on a queue.\n\nYou can do this by editing the deployment for the qotd-engraving.  \n\nType the following command:  \n\n```sh\noc edit deployment qotd-engraving -n qotd\n```\n\nThis will open a \"vi\" session.  Scroll down within the file to line 49.  You should see 3 lines of text like the following:\n\n```sh\n        - name: SUPPLY_CHAIN_URL\n        - name: SUPPLY_CHAIN_SIMULATE\n          value: \"true\"\n```\n\nYou need to modify those lines to look like the following.  You need to add a \"value\" parameter that contains the SUPPLY_CHAIN_URL for the ACE flow. The flow within the\nACE server is **\"http://&lt;acemq_ipaddress&gt;:7081/supplychain/v1/order\"**.  This is what you need to use for the SUPPLY_CHAIN_URL value.  You'll need to change the value for the SUPPLY_CHAIN_SIMULATE to \"false\" to disable the simulation.  When you are done, the lines should look like this:\n\n```sh\n        - name: SUPPLY_CHAIN_URL\n          value: http://<acemq_ipaddress>:7081/supplychain/v1/order\n        - name: SUPPLY_CHAIN_SIMULATE\n          value: \"false\"\n```\n\nHINT: Replace &lt;acemq_ipaddress&gt; with the IP address for your ACEMQ server\n\nType **\":wq\"** to save your changes and exit the file.\n\n```sh\n:wq\n```\n\nAs soon as you save your changes, OpenShift will automatically redeploy the **\"qotd-engraving\"** pod with the updated configuration. To verify that the changes were applied successfully, let's check the application UI.\n\nType `oc get route -n qotd` to get the route for the application.  Then, in the browser, open this URL and click the “Order Engraving”.   Then, click again “Order Engraving” button. If successful, you’ll see “Order successfully placed.”\n\n![](images/2022-05-30-12-04-59.png)\n\n\n***\n\n## 4-4:  Configure ACE and MQ for Resource Monitoring\n\nThis section of the lab will help you understand how IBM MQ and IBM App Connect Enterprise (ACE) need to be configured for monitoring.  There are certain configuration settings within MQ and ACE that are required in order to get the\nmonitoring KPIs.  The key KPI's that need to be enabled are Resource Stats and Flow Stats.  The requirements are documented in the [sensor configuration guide](https://www.ibm.com/docs/en/obi/223?topic=technologies-monitoring-app-connect-enterprise#monitoring-ibm-app-connect-enterprise) that is online.  You'll see links to those guides further down in this document.  \n\nNote:  Typically, these steps are performed by the MQ and ACE admins, so you don't need to know the step by step procedure.  But, you do need to tell the MQ/ACE admins what the monitoring requirements are.\n\n<span style=\"color:red\"> In your lab environment, these steps have already been performed.</span>\n\n***\n\n### Verify the ACE configuration\n\nThe \"Resource Monitoring\" KPIs are already enabled in most customer environments.   But it is worth validating the configuration.  For example, you can use the\nACE mqsireportresourcestats and mqsireportflowstats commands to view the configuration for ACE.  \n\nTo run the following commands you have to source the `mqsiprofile`:\n\n```sh\n. /opt/ace-11.0.0.11/server/bin/mqsiprofile\n```\n\n> **&#9888; HINT: In the commands listed, BK1 is the Integration Node name and would be different if the Integration Node had a different name**\n\nHere are example commands that you can issue to see the ACE configuration:\n\n```sh\nmqsireportresourcestats BK1 -e EG2\n```\n\nYou will see results similar to those shown below.  Notice that the \"state\" is set to \"true\" indicating that **\"Resource Stats\"** are enabled.\n\n  ![](images/resourcestats.png)\n\nTo see the configuration of the \"flow\" stats, issue the following command:\n\n```sh\nmqsireportflowstats BK1 -s -e EG2\n```\n\nYou will see results similar to those shown below.  Notice that the \"state\" is \"active\", and the outputFormat is \"json\".  This indicates that the **\"Flow Stats\"** are enabled.  The product\nrequires that the output format be set to json vs. XML.\n\n  ![](images/flowstats.png)\n\n***\n\n### Verify the MQ configuration\n\nThere are fewer requirements for MQ.  The sensor will work with the default settings.  However, you can have the sensor automatically use thresholds/Events that are \nsetup within the MQ server.  If you want to use the built in MQ Events, then you need to set **CHLEV** (Channel Events) and **PERFMEV** (Performance Events) to **ENABLED**.  To check those settings, you can issue the following commands.  \n\nHINT: To run the following commands you have to source the `setmqenv` and specify the queue manager name (QM1):\n\n```sh\n. /opt/mqm/bin/setmqenv -m QM1\n```\n\nYou first need to run the **\"runmqsc\"** command.  \n\n```sh \n/opt/mqm/bin/runmqsc QM1\n```\nThe **runmqsc** command won't prompt you with a cursor.  That's okay.  Just start typing the coomands.\n\nWithin the runmqsc command prompt you can issue other MQ commands.  Type the following commands:\n\nThen:\n\n```sh\ndisplay QMGR PUBSUB CHLEV\n```\n\n```sh\ndisplay QMGR CLUSTER PERFMEV\n```\n\nThese commands will give outputs similar to what's shown below.\n\n  ![](images/2022-05-27-14-45-36.png)\n\nIn the output, you can see that the CHLEV (Channel Events) and PERFMEV (Performance Events) is set to disabled.\n\nTo enable run the following commands:\n\n```sh\nALTER QMGR CHLEV(ENABLED)\nALTER QMGR PERFMEV(ENABLED)\n```\n\nRe-run the display command to verify that configuration was changed\n\n  ![](images/2022-05-27-14-59-27.png)\n\nType **\"quit\"** to exit the runmqsc command prompt.\n\n```sh\nquit\n```\n\n***\n\n## 4-5:  Configure ACE and MQ for Tracing\n\nIn addition to the \"Resource Monitoring\" KPIs, additional settings are required to enable Tracing within IBM MQ and ACE.  It is important that you understand this process since Tracing is typically not enabled by default in most IBM MQ and ACE environments.  In this section, we've documented the steps.\n\nNote:  Typically, these steps are performed by the MQ and ACE admins, so you don't need to know the step by step procedure.\n\nThis section is simply going to describe the process. <span style=\"color:red\">You do not need to perform these steps.</span>  The procedure is well documented within the Instana online documentation.  You will find a **Tracing** section within the sensor documentation.\n\nFor ACE, you perform the following steps\n\n- Download a small TAR file from IBM Fix Central.  There are links within the [Instana documentation](https://www.ibm.com/docs/en/obi/223?topic=technologies-monitoring-app-connect-enterprise#tracing).\n- Extract the tar file into the **/var/mqsi/shared-classes** directory\n- Stop the ACE server\n- Run the following command to \"Install\" the **User Exit**:  **mqsichangeflowuserexits BK1 -o -x /var/mqsi/shared-classes**\n- Start the ACE server\n- Activate the **User Exit** by typing:  **mqsichangeflowuserexits BK1 -o -a ACEOpenTracingUserExit**\n\nThe MQ procedure is similar.\n\n- Download a small TAR file from IBM Fix Central.  There are links within the [Instana documentation](https://www.ibm.com/docs/en/obi/223?topic=technologies-monitoring-mq#tracing). \n- Extract the tar file to **/var/mqm/exits64**\n- Edit the **/var/mqm/mqs.ini** file\n- Add a small section within the **/var/mqm/mqs.ini** file.  The content can be copied and pasted from the Instana documentation.\n- Restart the Queue Manager\n\nIn the lab environment, these steps have already been performed.  If you want, you can examine the files and directories specified above.\n\nNote:  Even though the TAR files for ACE and MQ look similar, they are unique for each middleware component.\n\n***\n\n## 4-6:  Configure the ACE and MQ Sensors\n\nAfter installing an Instana Agent, one of the first things you want to do is set a Zone name.  This allows you to organize your Agents to make them easier to find.  The Zones can\nalso be used for custom queries, threshold distribution, and more.   In your case, set the Zone name to **Quote of the Day** or something meaningful.\n\nChange directory to `/opt/instana/agent/etc/instana`\n\n```sh\ncd /opt/instana/agent/etc/instana\n```\n\nThis is the main configuration directory for the Instana Agent and sensors.  There are few configuration files in the parent directory, but most of the important ones are here.\n\nThe **com.instana.agent.main.sender.Backend.cfg** file contains information on where the Agent is going to send the monitoring data.  Back one directory, you'll see a file **/opt/instana/agent/etc/mvn-settings.xml** that is used to configure the use of an internal maven repository.\n\nWe are going to be editing the configuration.yaml file.   This file contains all of the configuration settings for the sensors.\n\nEdit configuration.yaml using either \"vi\"\n\n```sh\nvi configuration.yaml\n```\n\nor use other editor like `nano` if you prefer.\n\n**------------IMPORTANT------------**  \nyaml files are very strict about indentation.  Each line within the file must be indented by 0, 2, 4, 6, etc. spaces.  Do not use tabs and do not indent by odd numbers\nof characters.  Make sure that all of the characters line up vertically within the text.   If you see a line that is commented out and you need to uncomment it, just\nremove the single \"#\" character.\n\nWithin the editor, scroll down to the section titled **\"IBM ACE\"**\n\nYou will need to uncomment the required entries and change the parameters to match the ACE/MQ configuration on this server.  If you read the description on each line,\nyou'll see that some parameters are optional.  \n\nFor more information about about the ACE configuration, view the online documentation found here:  [link](https://www.ibm.com/docs/en/obi/current?topic=technologies-monitoring-app-connect-enterprise)\n\nThere are multiple options for configuring the sensor. The information shown matches this particular environment. A few key possibilities:\n\n- If ACE is configured for MQTT, the configuration will be different than if ACE is configured to use MQ.\n- The configuration will be different if you are doing remote monitoring vs. local.\n- Pay careful attention to the required vs. optional parameters.  For example, in some environments the MQ Channel Authenticatio is disabled and you don't need to specify credentials.\n\nEdit the **IBM ACE** section of the file so that it looks like this. If you want, you can copy this text and replace the entire section.  Or, you can change the \nindividual parameters.\n\n```sh\n# IBM ACE\ncom.instana.plugin.ace:\n  enabled: true\n  poll_rate: 20\n  NodesOrServers: # Multiple Integration node instances or multiple standalone Integration Servers can be specified\n    BK1:     # specify the Integration node/server name (required)\n      restApiPort: '4414'        # ACE rest api port (required)\n      mqport: '1414'             # Sets the port for remote administration IBM MQ channel port or the MQTT server port (required)\n      queuemanagerName: 'QM1'     # Queue Manager name (required for IBM MQ)\n      channel: 'ACE.SVRCONN'             # Remote administration channel (required for IBM MQ)\n      mqUsername: 'mqm'         # MQ channel authentication's username if security enabled (optional for IBM MQ)\n      mqPassword: '\\<mqm password\\>'         # MQ channel authentication's password if security enabled (optional for IBM MQ)\n```\n\nNote:  The markdown documentation only shows 9 rows of text, but there are more rows.  You can either click the **Show more** button in the bottom right, or you can click on the **Copy** button in the top right corner.\n\n![](images/ACEyaml.png)\n\nIn the example above, **QM1** is the Queue Manager name.  **BK1** is the name of the Integration Server. **ACE.SVRCONN** is the channel that the sensor will conect to in order to query the performance KPIs.  The username of **mqm** is the admin username for MQ, but the sensor does not require administrative permissions.\n\nNext, you will need to edit the MQ sensor settings.   Scroll further down in the file until you find the section titled \"IBM MQ\".  You will be editing this section of\nthe configuration to match the settings of the MQ server.  There are a number of mandatory and optional parameters.  For more information on the configuration settings,\nsee the online documentation: [link](https://www.ibm.com/docs/en/obi/current?topic=technologies-monitoring-mq) \n\nEdit the **IBM MQ** section of the file so that it looks like this. If you want, you can copy this text and replace the entire section.  Or, you can change the \nindividual parameters.\n\n```sh\n# IBM MQ\ncom.instana.plugin.ibmmq:\n  enabled: true\n  poll_rate: 5\n  queueManagers: # Multiple Queue Manager instances can be specified\n    QM1:\n      channel: 'ACE.SVRCONN' # Remote administration channel\n      username: 'mqm'\n      password: '\\<mqm password\\>'\n```\n\n***\n\n## 4-7:  Further Configuration\n\nFirst, let's change the **Zone** name within the file.  This is similar to the Zone that you specified when installing the Docker and OpenShift monitoring Agents.   Scroll down until you see the section titled \"Hardware & Zone\".  Uncomment the 3 lines of text starting with \n`com.instana.plugin.generic.hardware`.   By default the \"availability-zone\" parameter is set to \"Datacenter A /Rack 42\".  Change the value to **Quote of the Day**\n\nThe section of the configuration.yaml file should look as follows:\n```sh\n# Hardware & Zone\ncom.instana.plugin.generic.hardware:\n  enabled: true # disabled by default\n  availability-zone: 'Quote of the Day'\n```\n\n\nIn addition to configuring the **Zone** name, you can specify tags within the configuration.yaml file.   Search for the section within the configuration.yaml file titled **Host**.  Within that section, you see a section for tags.   By default this section will be commented out.  Uncomment the **com.instana.plugin.host** section and specify some tags.  For example, add a **production** tag to indicate that this system is a production server.  And, add a **QOTD** tag to indicate that it supports the **Quote of the Day** application.  Add a **Dallas** tag to indicate the the server resides in Dallas, Texas.  \n\nAdd **production, QOTD, and Dallas** as tags.  The configuration.yaml section should look as follows:\n ```sh\n com.instana.plugin.host:\n  tags:\n    - 'production'\n    - 'QOTD'\n    - 'Dallas'\n```\nIt is possible to specify tags for the Docker and OpenShift versions of the Instana Agent, but we are not going to cover that in this lab.\n\nNote: Zones and Tags can be used for a number of purposes within instana:\n- Search for systems within the UI or via the APIs\n- Assign thresholds to systems with a specific tag or zone name\n- Build custom dashboards using the tags or zone names\nand more...\n\n\n\nBy default, Instana will monitoring key processes that are related to the applications/middleware that are being monitoring.  It will also monitor processes that are consuming large amounts of CPU or Memory.  Sometimes, customers want to ensure that specific processes are monitoring.  Let's edit the configuration.yaml file to specify some key proccesses on this ACE/MQ server.  Seach within the configuration.yaml file for **com.instana.plugin.process**\n\nThe section will be commented out by default.  Uncomment the section and specify the following processes for monitoring **(crond, amqzmgr0, runmqlsr)**.  One process is the cron daemon, which customers frequently want to monitor.  The other two process are related to IBM MQ.  The section should look like this:\n```sh\ncom.instana.plugin.process:\n  processes:\n    - 'crond'\n    - 'amqzmgr0'\n    - 'runmqlsr'\n```\nNote: There is also a section in the configuration.yaml file where you can specify processes that you want to ignore.  Search for **com.instana.ignore**.\n\nSave and exit the configuration.yaml file.   In \"vi\", type \":wq\" to save and exit the file.\n\nAs soon as you save your changes to the file, Instana will detect those changes and will start to implement what you have configured.\n\nAt this point, we recommend that you navigate to section 5 of this tutorial **5 - Explore Instana**.  \n\n![](images/exploreInstana.png)\n\nIn the **Explore Instana** section, we'll begin by confirming that the ACE and MQ monitoring are working propererly.  If they are not, come back to this section and double check your configuraion.yaml settings and check that there are no obvious errors in the log file.\n\nThe main install log file is /opt/instana/agent/data/log/agent.log\n\n***\n\n## 4-8:  Summary\n\nYou learned how to configure the Instana sensor for IBM App Connect Enterprise (ACE) and IBM MQ.\n\nNow, proceed to section 5.\n\n***","type":"Mdx","contentDigest":"d0dcbf75b6152318a1e5486e4060a646","owner":"gatsby-plugin-mdx","counter":916},"frontmatter":{"title":"Configure ACE and MQ for Instana Monitoring & Tracing","description":"Configure the Quote of the Day Application and Install/Configure Monitoring"},"exports":{},"rawBody":"---\ntitle: Configure ACE and MQ for Instana Monitoring & Tracing\ndescription: Configure the Quote of the Day Application and Install/Configure Monitoring\n---\n\n<AnchorLinks>\n  <AnchorLink>4-1: Introduction</AnchorLink>\n  <AnchorLink>4-2: Installing the Instana agents</AnchorLink>\n  <AnchorLink>4-3: Configure Quote of the Day Application to use MQ & ACE</AnchorLink>\n  <AnchorLink>4-4: Configure ACE and MQ for Resource Monitoring</AnchorLink>\n  <AnchorLink>4-5: Configure ACE and MQ for Tracing</AnchorLink>\n  <AnchorLink>4-6: Configure the ACE and MQ Sensors</AnchorLink>\n  <AnchorLink>4-7: Further Configuration</AnchorLink>\n  <AnchorLink>4-8: Summary</AnchorLink>\n</AnchorLinks>\n\n## 4-1:  Introduction\n\nPositioning Instana at existing IBM customers often requires presenting Instana value proposition in context of other IBM middleware used by the client.\nIn this section, you will find guidence about configuring and using Instana with the following IBM technologies:\n\n- MQ\n- App Connect Enterprise (ACE)\n\n***\n\n## 4-2:  Installing the Instana agents\n\nIn this portion of the lab, you will be updating \"Quote of the Day\" hybrid application to use ACE and MQ, and configuring the Instana to monitor the whole application.  That includes configuration of the MQ and ACE sensors.\n\nThis tutorial won't provide you a detailed step-by-step instructions for simple tasks - it is assumed that you are familiar with basics of Instana. \n\n1. Open the browser to login to the Instana user interface.  Credentials for your instance you can find in the [Environments](../../general/teams) section.\n\n2. Login through SSH to the MQ/ACE virtual machine.\n\n***\n\n## 4-3:  Configure Quote of the Day Application to use MQ & ACE\n\nThe **\"Quote of the Day\"** application has been installed for you on the OpenShift cluster. For more information about the **Quote of the Day** application, you can go to this GitLab location: https://gitlab.com/quote-of-the-day/quote-of-the-day (It is not necessary to go there, but you might be interested in learning more about the application.)\n\nFor the containerized portion of the application, some technologies are automatically instrumented for monitoring. In addition, the load generation tool is continuously running transactions against the application.  \n\nLet's verify that things are running.  Issue the **oc get pods** command against the **qotd** namespace/project.\n```sh\noc get pods -n qotd\n```\n\nYou should see results similar to this:\n\n![](images/qotdPods.png)\n\nThe next step is to modify the configuration of the Quote of the Day application so that it uses an external ACE and MQ server.  By default, the engraving service runs as a cloud native call that doesn't really do anything.  We want to modify the configuration so that the engraving service makes a REST API call to ACE and ACE subsequently calls MQ and puts a message on a queue.\n\nYou can do this by editing the deployment for the qotd-engraving.  \n\nType the following command:  \n\n```sh\noc edit deployment qotd-engraving -n qotd\n```\n\nThis will open a \"vi\" session.  Scroll down within the file to line 49.  You should see 3 lines of text like the following:\n\n```sh\n        - name: SUPPLY_CHAIN_URL\n        - name: SUPPLY_CHAIN_SIMULATE\n          value: \"true\"\n```\n\nYou need to modify those lines to look like the following.  You need to add a \"value\" parameter that contains the SUPPLY_CHAIN_URL for the ACE flow. The flow within the\nACE server is **\"http://&lt;acemq_ipaddress&gt;:7081/supplychain/v1/order\"**.  This is what you need to use for the SUPPLY_CHAIN_URL value.  You'll need to change the value for the SUPPLY_CHAIN_SIMULATE to \"false\" to disable the simulation.  When you are done, the lines should look like this:\n\n```sh\n        - name: SUPPLY_CHAIN_URL\n          value: http://<acemq_ipaddress>:7081/supplychain/v1/order\n        - name: SUPPLY_CHAIN_SIMULATE\n          value: \"false\"\n```\n\nHINT: Replace &lt;acemq_ipaddress&gt; with the IP address for your ACEMQ server\n\nType **\":wq\"** to save your changes and exit the file.\n\n```sh\n:wq\n```\n\nAs soon as you save your changes, OpenShift will automatically redeploy the **\"qotd-engraving\"** pod with the updated configuration. To verify that the changes were applied successfully, let's check the application UI.\n\nType `oc get route -n qotd` to get the route for the application.  Then, in the browser, open this URL and click the “Order Engraving”.   Then, click again “Order Engraving” button. If successful, you’ll see “Order successfully placed.”\n\n![](images/2022-05-30-12-04-59.png)\n\n\n***\n\n## 4-4:  Configure ACE and MQ for Resource Monitoring\n\nThis section of the lab will help you understand how IBM MQ and IBM App Connect Enterprise (ACE) need to be configured for monitoring.  There are certain configuration settings within MQ and ACE that are required in order to get the\nmonitoring KPIs.  The key KPI's that need to be enabled are Resource Stats and Flow Stats.  The requirements are documented in the [sensor configuration guide](https://www.ibm.com/docs/en/obi/223?topic=technologies-monitoring-app-connect-enterprise#monitoring-ibm-app-connect-enterprise) that is online.  You'll see links to those guides further down in this document.  \n\nNote:  Typically, these steps are performed by the MQ and ACE admins, so you don't need to know the step by step procedure.  But, you do need to tell the MQ/ACE admins what the monitoring requirements are.\n\n<span style=\"color:red\"> In your lab environment, these steps have already been performed.</span>\n\n***\n\n### Verify the ACE configuration\n\nThe \"Resource Monitoring\" KPIs are already enabled in most customer environments.   But it is worth validating the configuration.  For example, you can use the\nACE mqsireportresourcestats and mqsireportflowstats commands to view the configuration for ACE.  \n\nTo run the following commands you have to source the `mqsiprofile`:\n\n```sh\n. /opt/ace-11.0.0.11/server/bin/mqsiprofile\n```\n\n> **&#9888; HINT: In the commands listed, BK1 is the Integration Node name and would be different if the Integration Node had a different name**\n\nHere are example commands that you can issue to see the ACE configuration:\n\n```sh\nmqsireportresourcestats BK1 -e EG2\n```\n\nYou will see results similar to those shown below.  Notice that the \"state\" is set to \"true\" indicating that **\"Resource Stats\"** are enabled.\n\n  ![](images/resourcestats.png)\n\nTo see the configuration of the \"flow\" stats, issue the following command:\n\n```sh\nmqsireportflowstats BK1 -s -e EG2\n```\n\nYou will see results similar to those shown below.  Notice that the \"state\" is \"active\", and the outputFormat is \"json\".  This indicates that the **\"Flow Stats\"** are enabled.  The product\nrequires that the output format be set to json vs. XML.\n\n  ![](images/flowstats.png)\n\n***\n\n### Verify the MQ configuration\n\nThere are fewer requirements for MQ.  The sensor will work with the default settings.  However, you can have the sensor automatically use thresholds/Events that are \nsetup within the MQ server.  If you want to use the built in MQ Events, then you need to set **CHLEV** (Channel Events) and **PERFMEV** (Performance Events) to **ENABLED**.  To check those settings, you can issue the following commands.  \n\nHINT: To run the following commands you have to source the `setmqenv` and specify the queue manager name (QM1):\n\n```sh\n. /opt/mqm/bin/setmqenv -m QM1\n```\n\nYou first need to run the **\"runmqsc\"** command.  \n\n```sh \n/opt/mqm/bin/runmqsc QM1\n```\nThe **runmqsc** command won't prompt you with a cursor.  That's okay.  Just start typing the coomands.\n\nWithin the runmqsc command prompt you can issue other MQ commands.  Type the following commands:\n\nThen:\n\n```sh\ndisplay QMGR PUBSUB CHLEV\n```\n\n```sh\ndisplay QMGR CLUSTER PERFMEV\n```\n\nThese commands will give outputs similar to what's shown below.\n\n  ![](images/2022-05-27-14-45-36.png)\n\nIn the output, you can see that the CHLEV (Channel Events) and PERFMEV (Performance Events) is set to disabled.\n\nTo enable run the following commands:\n\n```sh\nALTER QMGR CHLEV(ENABLED)\nALTER QMGR PERFMEV(ENABLED)\n```\n\nRe-run the display command to verify that configuration was changed\n\n  ![](images/2022-05-27-14-59-27.png)\n\nType **\"quit\"** to exit the runmqsc command prompt.\n\n```sh\nquit\n```\n\n***\n\n## 4-5:  Configure ACE and MQ for Tracing\n\nIn addition to the \"Resource Monitoring\" KPIs, additional settings are required to enable Tracing within IBM MQ and ACE.  It is important that you understand this process since Tracing is typically not enabled by default in most IBM MQ and ACE environments.  In this section, we've documented the steps.\n\nNote:  Typically, these steps are performed by the MQ and ACE admins, so you don't need to know the step by step procedure.\n\nThis section is simply going to describe the process. <span style=\"color:red\">You do not need to perform these steps.</span>  The procedure is well documented within the Instana online documentation.  You will find a **Tracing** section within the sensor documentation.\n\nFor ACE, you perform the following steps\n\n- Download a small TAR file from IBM Fix Central.  There are links within the [Instana documentation](https://www.ibm.com/docs/en/obi/223?topic=technologies-monitoring-app-connect-enterprise#tracing).\n- Extract the tar file into the **/var/mqsi/shared-classes** directory\n- Stop the ACE server\n- Run the following command to \"Install\" the **User Exit**:  **mqsichangeflowuserexits BK1 -o -x /var/mqsi/shared-classes**\n- Start the ACE server\n- Activate the **User Exit** by typing:  **mqsichangeflowuserexits BK1 -o -a ACEOpenTracingUserExit**\n\nThe MQ procedure is similar.\n\n- Download a small TAR file from IBM Fix Central.  There are links within the [Instana documentation](https://www.ibm.com/docs/en/obi/223?topic=technologies-monitoring-mq#tracing). \n- Extract the tar file to **/var/mqm/exits64**\n- Edit the **/var/mqm/mqs.ini** file\n- Add a small section within the **/var/mqm/mqs.ini** file.  The content can be copied and pasted from the Instana documentation.\n- Restart the Queue Manager\n\nIn the lab environment, these steps have already been performed.  If you want, you can examine the files and directories specified above.\n\nNote:  Even though the TAR files for ACE and MQ look similar, they are unique for each middleware component.\n\n***\n\n## 4-6:  Configure the ACE and MQ Sensors\n\nAfter installing an Instana Agent, one of the first things you want to do is set a Zone name.  This allows you to organize your Agents to make them easier to find.  The Zones can\nalso be used for custom queries, threshold distribution, and more.   In your case, set the Zone name to **Quote of the Day** or something meaningful.\n\nChange directory to `/opt/instana/agent/etc/instana`\n\n```sh\ncd /opt/instana/agent/etc/instana\n```\n\nThis is the main configuration directory for the Instana Agent and sensors.  There are few configuration files in the parent directory, but most of the important ones are here.\n\nThe **com.instana.agent.main.sender.Backend.cfg** file contains information on where the Agent is going to send the monitoring data.  Back one directory, you'll see a file **/opt/instana/agent/etc/mvn-settings.xml** that is used to configure the use of an internal maven repository.\n\nWe are going to be editing the configuration.yaml file.   This file contains all of the configuration settings for the sensors.\n\nEdit configuration.yaml using either \"vi\"\n\n```sh\nvi configuration.yaml\n```\n\nor use other editor like `nano` if you prefer.\n\n**------------IMPORTANT------------**  \nyaml files are very strict about indentation.  Each line within the file must be indented by 0, 2, 4, 6, etc. spaces.  Do not use tabs and do not indent by odd numbers\nof characters.  Make sure that all of the characters line up vertically within the text.   If you see a line that is commented out and you need to uncomment it, just\nremove the single \"#\" character.\n\nWithin the editor, scroll down to the section titled **\"IBM ACE\"**\n\nYou will need to uncomment the required entries and change the parameters to match the ACE/MQ configuration on this server.  If you read the description on each line,\nyou'll see that some parameters are optional.  \n\nFor more information about about the ACE configuration, view the online documentation found here:  [link](https://www.ibm.com/docs/en/obi/current?topic=technologies-monitoring-app-connect-enterprise)\n\nThere are multiple options for configuring the sensor. The information shown matches this particular environment. A few key possibilities:\n\n- If ACE is configured for MQTT, the configuration will be different than if ACE is configured to use MQ.\n- The configuration will be different if you are doing remote monitoring vs. local.\n- Pay careful attention to the required vs. optional parameters.  For example, in some environments the MQ Channel Authenticatio is disabled and you don't need to specify credentials.\n\nEdit the **IBM ACE** section of the file so that it looks like this. If you want, you can copy this text and replace the entire section.  Or, you can change the \nindividual parameters.\n\n```sh\n# IBM ACE\ncom.instana.plugin.ace:\n  enabled: true\n  poll_rate: 20\n  NodesOrServers: # Multiple Integration node instances or multiple standalone Integration Servers can be specified\n    BK1:     # specify the Integration node/server name (required)\n      restApiPort: '4414'        # ACE rest api port (required)\n      mqport: '1414'             # Sets the port for remote administration IBM MQ channel port or the MQTT server port (required)\n      queuemanagerName: 'QM1'     # Queue Manager name (required for IBM MQ)\n      channel: 'ACE.SVRCONN'             # Remote administration channel (required for IBM MQ)\n      mqUsername: 'mqm'         # MQ channel authentication's username if security enabled (optional for IBM MQ)\n      mqPassword: '\\<mqm password\\>'         # MQ channel authentication's password if security enabled (optional for IBM MQ)\n```\n\nNote:  The markdown documentation only shows 9 rows of text, but there are more rows.  You can either click the **Show more** button in the bottom right, or you can click on the **Copy** button in the top right corner.\n\n![](images/ACEyaml.png)\n\nIn the example above, **QM1** is the Queue Manager name.  **BK1** is the name of the Integration Server. **ACE.SVRCONN** is the channel that the sensor will conect to in order to query the performance KPIs.  The username of **mqm** is the admin username for MQ, but the sensor does not require administrative permissions.\n\nNext, you will need to edit the MQ sensor settings.   Scroll further down in the file until you find the section titled \"IBM MQ\".  You will be editing this section of\nthe configuration to match the settings of the MQ server.  There are a number of mandatory and optional parameters.  For more information on the configuration settings,\nsee the online documentation: [link](https://www.ibm.com/docs/en/obi/current?topic=technologies-monitoring-mq) \n\nEdit the **IBM MQ** section of the file so that it looks like this. If you want, you can copy this text and replace the entire section.  Or, you can change the \nindividual parameters.\n\n```sh\n# IBM MQ\ncom.instana.plugin.ibmmq:\n  enabled: true\n  poll_rate: 5\n  queueManagers: # Multiple Queue Manager instances can be specified\n    QM1:\n      channel: 'ACE.SVRCONN' # Remote administration channel\n      username: 'mqm'\n      password: '\\<mqm password\\>'\n```\n\n***\n\n## 4-7:  Further Configuration\n\nFirst, let's change the **Zone** name within the file.  This is similar to the Zone that you specified when installing the Docker and OpenShift monitoring Agents.   Scroll down until you see the section titled \"Hardware & Zone\".  Uncomment the 3 lines of text starting with \n`com.instana.plugin.generic.hardware`.   By default the \"availability-zone\" parameter is set to \"Datacenter A /Rack 42\".  Change the value to **Quote of the Day**\n\nThe section of the configuration.yaml file should look as follows:\n```sh\n# Hardware & Zone\ncom.instana.plugin.generic.hardware:\n  enabled: true # disabled by default\n  availability-zone: 'Quote of the Day'\n```\n\n\nIn addition to configuring the **Zone** name, you can specify tags within the configuration.yaml file.   Search for the section within the configuration.yaml file titled **Host**.  Within that section, you see a section for tags.   By default this section will be commented out.  Uncomment the **com.instana.plugin.host** section and specify some tags.  For example, add a **production** tag to indicate that this system is a production server.  And, add a **QOTD** tag to indicate that it supports the **Quote of the Day** application.  Add a **Dallas** tag to indicate the the server resides in Dallas, Texas.  \n\nAdd **production, QOTD, and Dallas** as tags.  The configuration.yaml section should look as follows:\n ```sh\n com.instana.plugin.host:\n  tags:\n    - 'production'\n    - 'QOTD'\n    - 'Dallas'\n```\nIt is possible to specify tags for the Docker and OpenShift versions of the Instana Agent, but we are not going to cover that in this lab.\n\nNote: Zones and Tags can be used for a number of purposes within instana:\n- Search for systems within the UI or via the APIs\n- Assign thresholds to systems with a specific tag or zone name\n- Build custom dashboards using the tags or zone names\nand more...\n\n\n\nBy default, Instana will monitoring key processes that are related to the applications/middleware that are being monitoring.  It will also monitor processes that are consuming large amounts of CPU or Memory.  Sometimes, customers want to ensure that specific processes are monitoring.  Let's edit the configuration.yaml file to specify some key proccesses on this ACE/MQ server.  Seach within the configuration.yaml file for **com.instana.plugin.process**\n\nThe section will be commented out by default.  Uncomment the section and specify the following processes for monitoring **(crond, amqzmgr0, runmqlsr)**.  One process is the cron daemon, which customers frequently want to monitor.  The other two process are related to IBM MQ.  The section should look like this:\n```sh\ncom.instana.plugin.process:\n  processes:\n    - 'crond'\n    - 'amqzmgr0'\n    - 'runmqlsr'\n```\nNote: There is also a section in the configuration.yaml file where you can specify processes that you want to ignore.  Search for **com.instana.ignore**.\n\nSave and exit the configuration.yaml file.   In \"vi\", type \":wq\" to save and exit the file.\n\nAs soon as you save your changes to the file, Instana will detect those changes and will start to implement what you have configured.\n\nAt this point, we recommend that you navigate to section 5 of this tutorial **5 - Explore Instana**.  \n\n![](images/exploreInstana.png)\n\nIn the **Explore Instana** section, we'll begin by confirming that the ACE and MQ monitoring are working propererly.  If they are not, come back to this section and double check your configuraion.yaml settings and check that there are no obvious errors in the log file.\n\nThe main install log file is /opt/instana/agent/data/log/agent.log\n\n***\n\n## 4-8:  Summary\n\nYou learned how to configure the Instana sensor for IBM App Connect Enterprise (ACE) and IBM MQ.\n\nNow, proceed to section 5.\n\n***","fileAbsolutePath":"/home/jason/workspace/IBM/waiops-tech-jam/src/pages/tutorials/instana/ibm-middleware/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}