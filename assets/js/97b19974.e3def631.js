"use strict";(self.webpackChunkswat_hub=self.webpackChunkswat_hub||[]).push([[9999],{15680:(n,e,t)=>{t.d(e,{xA:()=>p,yg:()=>f});var a=t(96540);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function r(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=a.createContext({}),l=function(n){var e=a.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):r(r({},e),n)),t},p=function(n){var e=l(n.components);return a.createElement(c.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,c=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),d=l(t),g=i,f=d["".concat(c,".").concat(g)]||d[g]||u[g]||o;return t?a.createElement(f,r(r({ref:e},p),{},{components:t})):a.createElement(f,r({ref:e},p))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,r=new Array(o);r[0]=g;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=n,s[d]="string"==typeof n?n:i,r[1]=s;for(var l=2;l<o;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},36210:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=t(58168),i=(t(96540),t(15680));const o={title:"Planning",description:"Storage planning guidance for IBM Fusion Data Foundation and Red Hat OpenShift Data Foundation solutions.",sidebar_position:1},r="Planning",s={unversionedId:"practitioner-basics/storage/data-foundation/planning",id:"practitioner-basics/storage/data-foundation/planning",title:"Planning",description:"Storage planning guidance for IBM Fusion Data Foundation and Red Hat OpenShift Data Foundation solutions.",source:"@site/labs/practitioner-basics/3-storage/data-foundation/planning.mdx",sourceDirName:"practitioner-basics/3-storage/data-foundation",slug:"/practitioner-basics/storage/data-foundation/planning",permalink:"/waiops-tech-jam/labs/practitioner-basics/storage/data-foundation/planning",draft:!1,editUrl:"https://github.com/IBM/waiops-tech-jam/tree/main/labs/practitioner-basics/3-storage/data-foundation/planning.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Planning",description:"Storage planning guidance for IBM Fusion Data Foundation and Red Hat OpenShift Data Foundation solutions.",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/waiops-tech-jam/labs/practitioner-basics/storage/intro"},next:{title:"Reclaiming Free Space",permalink:"/waiops-tech-jam/labs/practitioner-basics/storage/data-foundation/maintenance"}},c={},l=[{value:"Understanding capacity",id:"understanding-capacity",level:2},{value:"Minimum OSD size",id:"minimum-osd-size",level:2}],p={toc:l},d="wrapper";function u(n){let{components:e,...t}=n;return(0,i.yg)(d,(0,a.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"planning"},"Planning"),(0,i.yg)("admonition",{title:"Work in progress",type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"This section is being updated actively and full details will be published\nshortly.")),(0,i.yg)("p",null,"This section covers design planning considerations for\n",(0,i.yg)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/storage-fusion/2.6?topic=foundation-introduction-fusion-data"},"IBM Storage Fusion Data Foundation"),"\nand\n",(0,i.yg)("a",{parentName:"p",href:"https://www.redhat.com/en/technologies/cloud-computing/openshift-data-foundation"},"Red Hat OpenShift Data Foundation"),"\nin the context of IBM AIOps solutions."),(0,i.yg)("p",null,"Both solutions are based on ",(0,i.yg)("a",{parentName:"p",href:"https://docs.ceph.com/en/latest/"},"Ceph")," and are\ndistributed software-defined solutions which provide block, file and object\nstorage capabilities for containerized workloads."),(0,i.yg)("h2",{id:"understanding-capacity"},"Understanding capacity"),(0,i.yg)("p",null,"These solutions are configured with a default replication factor of ",(0,i.yg)("inlineCode",{parentName:"p"},"3"),", so the\nfirst thing to understand when planning storage capacity is the notion of:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},(0,i.yg)("em",{parentName:"strong"},"Usable Capacity:"))," The amount of storage available to consumers of the\nstorage pool, i.e. the applications.")),(0,i.yg)("h2",{id:"minimum-osd-size"},"Minimum OSD size"),(0,i.yg)("p",null,"The recommended minimum device size for a backing OSD is ",(0,i.yg)("inlineCode",{parentName:"p"},"500GiB"),"."),(0,i.yg)("p",null,"This size allows headroom for storage solution maintenance processes to run\nefficiently in conjunction with application data demands."))}u.isMDXComponent=!0}}]);