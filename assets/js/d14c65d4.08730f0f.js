"use strict";(self.webpackChunkswat_hub=self.webpackChunkswat_hub||[]).push([[4686],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>u});var n=a(96540);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),g=o,u=d["".concat(l,".").concat(g)]||d[g]||h[g]||r;return a?n.createElement(u,i(i({ref:t},c),{},{components:a})):n.createElement(u,i({ref:t},c))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},69848:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=a(58168),o=(a(96540),a(15680));const r={title:"4. Webhook and Kafka Data Load",description:"Set up a webhook and kafka integration",sidebar_position:4},i=void 0,s={unversionedId:"cloud-pak-aiops/alert-lab/webhook-integration/index",id:"cloud-pak-aiops/alert-lab/webhook-integration/index",title:"4. Webhook and Kafka Data Load",description:"Set up a webhook and kafka integration",source:"@site/labs/cloud-pak-aiops/alert-lab/4-webhook-integration/index.mdx",sourceDirName:"cloud-pak-aiops/alert-lab/4-webhook-integration",slug:"/cloud-pak-aiops/alert-lab/webhook-integration/",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/alert-lab/webhook-integration/",draft:!1,editUrl:"https://github.com/IBM/waiops-tech-jam/tree/main/labs/cloud-pak-aiops/alert-lab/4-webhook-integration/index.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"4. Webhook and Kafka Data Load",description:"Set up a webhook and kafka integration",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"3. Event and Alert Terminology",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/alert-lab/alert-concepts/"},next:{title:"5. Scope Based Correlation",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/alert-lab/scope-based/"}},l={},p=[{value:"4.1: Creating a Webhook Integration",id:"41-creating-a-webhook-integration",level:2},{value:"4.2: Create the Webhook Event Loader Script",id:"42-create-the-webhook-event-loader-script",level:2},{value:"4.3: Create a Kafka Event Loader Script",id:"43-create-a-kafka-event-loader-script",level:2}],c={toc:p},d="wrapper";function h(e){let{components:t,...r}=e;return(0,o.yg)(d,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"In this section, we will configure a generic webhook connection. If a dedicated\nconnection is not available for a data source, you can use the generic webhook\nconnection to provide an endpoint for applications to send JSON format events to\nthe Cloud Pak for AIOps via HTTP POST requests. You can also include a ",(0,o.yg)("em",{parentName:"p"},"JSONata"),"\nfile to map incoming JSON payloads to the Cloud Pak for AIOps event data schema.\nThe webhook endpoint is exposed via an OpenShift edge route that includes a\nunique, automatically-generated ID."),(0,o.yg)("p",null,"Also in this section, we will create a couple of bash scripts. The first script\nwill be used to load data via the webhook connection and the second script will\nbe used to load data into a kafka topic. The usage of these two scripts will\nbecome more clear as you move into the different sections of the Lab."),(0,o.yg)("h2",{id:"41-creating-a-webhook-integration"},"4.1: Creating a Webhook Integration"),(0,o.yg)("p",null,"Log into the Cloud Pak for AIOps:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"from the burger menu in the top-left navigate to: ",(0,o.yg)("strong",{parentName:"li"},"Define \u2192 Integrations")),(0,o.yg)("li",{parentName:"ul"},"from the ",(0,o.yg)("strong",{parentName:"li"},"Integrations")," page click on ",(0,o.yg)("strong",{parentName:"li"},"Add integration")),(0,o.yg)("li",{parentName:"ul"},"from the ",(0,o.yg)("strong",{parentName:"li"},"Add integrations")," page search for ",(0,o.yg)("strong",{parentName:"li"},"webhook"),", click on the\n",(0,o.yg)("strong",{parentName:"li"},"Generic Webhook")," tile and click ",(0,o.yg)("strong",{parentName:"li"},"Get started"),".")),(0,o.yg)("p",null,"Fill the ",(0,o.yg)("strong",{parentName:"p"},"Add integration")," form with these values:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Name: eventWebhook"),(0,o.yg)("li",{parentName:"ul"},"Description: custom webhook integration for events"),(0,o.yg)("li",{parentName:"ul"},"Authentication type: ",(0,o.yg)("em",{parentName:"li"},"select Username/Password")),(0,o.yg)("li",{parentName:"ul"},"Username: pick a username (e.g. test)"),(0,o.yg)("li",{parentName:"ul"},"Password: pick a password (e.g. test)")),(0,o.yg)("p",null,"Your complete form should look like this (note that your route will be\ndifferent)"),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(92751).A,width:"2176",height:"1592"})),(0,o.yg)("p",null,"Click ",(0,o.yg)("strong",{parentName:"p"},"Next"),"."),(0,o.yg)("p",null,"In the ",(0,o.yg)("strong",{parentName:"p"},"Configure event mapping")," form:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Confirm the ",(0,o.yg)("strong",{parentName:"li"},"Enable webhook")," slider is green (On)"),(0,o.yg)("li",{parentName:"ul"},"The webhook connector leverages JSONata which is a simple expression language\nto transform JSON data. You can read about JSONata\n",(0,o.yg)("a",{parentName:"li",href:"https://jsonata.org/"},"here"),'. In this Lab, we provide the JSON event format as\nexpected by the Cloud Pak for AIOPs, therefore the JSONata is just a\n"passthrough". In a real scenario, you will find this mapping capability very\nuseful.')),(0,o.yg)("p",null,"Enter the following JSONata configuration (use the copy helper icon (top-right)\nfor one-click copy)"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n   "sender":{\n      "service": sender.service,\n      "name": sender.name,\n      "type": sender.type\n   },\n   "resource":{\n      "application": resource.application,\n      "name": resource.name,\n      "hostname": resource.hostname,\n      "type": resource.type,\n      "ipaddress": resource.ipaddress,\n      "location": resource.location\n   },\n   "type":{\n      "classification": type.classification,\n      "eventType": type.eventType\n   },\n   "severity": severity,\n   "summary": summary,\n   "occurrenceTime": occurrenceTime,\n   "expirySeconds": expirySeconds\n}\n')),(0,o.yg)("p",null,"Click on ",(0,o.yg)("strong",{parentName:"p"},"Done"),". You will see a new webhook created as shown below. After the\nwebhook has finished initializing copy the ",(0,o.yg)("strong",{parentName:"p"},"Webhook route")," URL on the right.\nYou will need this URL in the next step."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(33365).A,width:"3544",height:"1102"})),(0,o.yg)("h2",{id:"42-create-the-webhook-event-loader-script"},"4.2: Create the Webhook Event Loader Script"),(0,o.yg)("p",null,"Lets create a ",(0,o.yg)("strong",{parentName:"p"},"lab")," ",(0,o.yg)("strong",{parentName:"p"},"folder")," for the upcoming files in the home directory\nand change to this new folder. Run the following command from the ",(0,o.yg)("strong",{parentName:"p"},"Terminal"),"\nwindow:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"cd; mkdir lab; cd lab\n")),(0,o.yg)("p",null,"We will create a simple bash script that reads an event file and calls the\nwebhook URL with every event in the file as a parameter."),(0,o.yg)("p",null,"Create a file called ",(0,o.yg)("strong",{parentName:"p"},"event-load-webhook.sh")," by running the following command\nin the ",(0,o.yg)("strong",{parentName:"p"},"Terminal")," window to open the text editor , ",(0,o.yg)("strong",{parentName:"p"},"copy")," the bash script\nbelow (use the copy helper icon (top-right) for one-click copy), ",(0,o.yg)("strong",{parentName:"p"},"paste")," it\ninto the text editor."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"gedit event-load-webhook.sh\n")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},'#!/bin/bash\n# this is the event-load-webhook.sh script\n\n# Check if a file is provided as a parameter\nif [ $# -eq 0 ]; then\n  echo "Please provide an event file as a parameter."\n  exit 1\nfi\n\n###########################################\nWEBHOOK_URL=\'<insert the webhook URL here>\'\n# Note below there is a colon character \':\' between the username and password e.g. test:test\nAUTH=<insert your chosen user name>:<insert your chosen password>\n###########################################\n\n\n# Read the event file line by line and submit the event via webhook\nwhile IFS= read -r line; do\n  curl -X POST -u $AUTH --insecure -H \'Content-Type: application/json\' $WEBHOOK_URL -d "$line"\n  echo ""\ndone < "$1"\n')),(0,o.yg)("p",null,"There are two changes you need to make to the script:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"assign to WEBHOOK_URL the webhook route of the webhook you just created in the\nprevious step"),(0,o.yg)("li",{parentName:"ul"},"assign to AUTH the chosen user name and password of the webhook you just\ncreated in the previous step e.g. test:test")),(0,o.yg)("p",null,"Click on the ",(0,o.yg)("strong",{parentName:"p"},"Save")," button in the text editor and ",(0,o.yg)("strong",{parentName:"p"},"close")," the editor window\n(click on the X)."),(0,o.yg)("h2",{id:"43-create-a-kafka-event-loader-script"},"4.3: Create a Kafka Event Loader Script"),(0,o.yg)("p",null,"Finally, we will create another simple bash script that will take an event or\nalert file and a kafka topic as parameters and it will load this data into the\nkafka topic."),(0,o.yg)("p",null,"Create a new file called ",(0,o.yg)("em",{parentName:"p"},"event-load-kafka.sh")," by running the following command\nin the ",(0,o.yg)("strong",{parentName:"p"},"Terminal")," window to open the text editor , ",(0,o.yg)("strong",{parentName:"p"},"copy")," the bash script\nbelow, ",(0,o.yg)("strong",{parentName:"p"},"paste")," it into the text editor, click on the ",(0,o.yg)("strong",{parentName:"p"},"Save")," button in the\ntext editor and ",(0,o.yg)("strong",{parentName:"p"},"close")," the editor window (click on the X)."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"gedit event-load-kafka.sh\n")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},"#!/bin/bash\n# this is the event-load-kafka.sh script\n\n# Check parameters\nif [ $# -lt 2 ]; then\n  echo \"Please provide an event file and a kafka topic as parameters\"\n  exit 1\nfi\n\nexport EVENTS_FILE=\"$1\"\nexport KAFKA_TOPIC=\"$2\"\n\noc project cp4aiops\n\n# Change Cassandra aiops.alerts table data expiration default_time_to_live (TTL) to 5 years\noc exec -it aiops-topology-cassandra-0 -- \\\n    /opt/ibm/cassandra/bin/cqlsh \\\n    --ssl \\\n    -u $(oc get secret aiops-topology-cassandra-auth-secret -o jsonpath='{.data.username}' | base64 --decode) \\\n    -p $(oc get secret aiops-topology-cassandra-auth-secret -o jsonpath='{.data.password}' | base64 --decode) \\\n    -e 'ALTER TABLE aiops.alerts WITH default_time_to_live = 157784630;'\n\n# Set Password and Broker\noc extract secret/iaf-system-cluster-ca-cert --keys=ca.crt --to=- > ca.crt\nexport sasl_password=$(oc get secret cp4waiops-cartridge-kafka-auth-0 --template={{.data.password}} | base64 --decode)\nexport BROKER=$(oc get routes iaf-system-kafka-bootstrap -o=jsonpath='{.status.ingress[0].host}{\"\\n\"}'):443\n\n# Load data using kafka-cat tool\nkcat \\\n-X debug=msg \\\n-X security.protocol=SASL_SSL \\\n-X ssl.ca.location=ca.crt \\\n-X sasl.mechanisms=SCRAM-SHA-512 \\\n-X sasl.username=cp4waiops-cartridge-kafka-auth-0 \\\n-X sasl.password=$sasl_password \\\n-b $BROKER \\\n-P \\\n-t $KAFKA_TOPIC \\\n-l $EVENTS_FILE\n")),(0,o.yg)("hr",null),(0,o.yg)("p",null,"You will use these event loader scripts in the following labs."))}h.isMDXComponent=!0},33365:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/webhook-created-e1ca53e5ca12539f1564491cbb42c18f.png"},92751:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/webhook-page1-92f839584a51567d8cd875dc64f634a2.png"}}]);