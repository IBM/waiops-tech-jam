"use strict";(self.webpackChunkswat_hub=self.webpackChunkswat_hub||[]).push([[5772],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},70063:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(58168),a=(n(96540),n(15680));const o={title:"3. Event and Alert Terminology",description:"Alert Terminology",sidebar_position:3},i=void 0,s={unversionedId:"cloud-pak-aiops/alert-lab/alert-concepts/index",id:"cloud-pak-aiops/alert-lab/alert-concepts/index",title:"3. Event and Alert Terminology",description:"Alert Terminology",source:"@site/labs/cloud-pak-aiops/alert-lab/3-alert-concepts/index.mdx",sourceDirName:"cloud-pak-aiops/alert-lab/3-alert-concepts",slug:"/cloud-pak-aiops/alert-lab/alert-concepts/",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/alert-lab/alert-concepts/",draft:!1,editUrl:"https://github.com/IBM/waiops-tech-jam/tree/main/labs/cloud-pak-aiops/alert-lab/3-alert-concepts/index.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"3. Event and Alert Terminology",description:"Alert Terminology",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"2. Lab Environment",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/alert-lab/lab-environment/"},next:{title:"4. Webhook and Kafka Data Load",permalink:"/waiops-tech-jam/labs/cloud-pak-aiops/alert-lab/webhook-integration/"}},l={},c=[{value:"Terms Definition",id:"terms-definition",level:3},{value:"Normalized Event Schema",id:"normalized-event-schema",level:3},{value:"Event Deduplication",id:"event-deduplication",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...o}=e;return(0,a.yg)(d,(0,r.A)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"terms-definition"},"Terms Definition"),(0,a.yg)("p",null,"Lets define some key Cloud Pak for AIOps concepts and terms that will help you\nunderstand the Lab:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Events"),": An event is a record containing structured data summarizing key\nattributes of an occurrence on a managed entity, which might be a network\nresource, some part of that resource, or other key element associated with your\nnetwork, services, or applications. An event may or may not indicate something\nanomalous and is a point-in-time, immutable statement about the managed entity\nin question."),(0,a.yg)("p",null,"The ",(0,a.yg)("strong",{parentName:"p"},"Event")," ",(0,a.yg)("strong",{parentName:"p"},"severity")," range is"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"6: Critical"),(0,a.yg)("li",{parentName:"ul"},"5: Major"),(0,a.yg)("li",{parentName:"ul"},"4: Minor"),(0,a.yg)("li",{parentName:"ul"},"3: Warning"),(0,a.yg)("li",{parentName:"ul"},"2: Informational"),(0,a.yg)("li",{parentName:"ul"},"1: Indeterminate")),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Alerts"),": Alerts are created when one or more events indicate an anomalous\ncondition. Alerts represent an ongoing anomalous condition against a single\nmanaged entity. Unlike events, alerts might evolve over time as the condition\nchanges. Alerts have a start and an end time. The creation and evolution of\nalerts are informed by events. The Cloud Pak for AIOps automatically correlates\nalerts to determine what alerts are likely to share a common cause."),(0,a.yg)("p",null,"The ",(0,a.yg)("strong",{parentName:"p"},"Alert")," ",(0,a.yg)("strong",{parentName:"p"},"severity")," range is the same as Event"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"6: Critical"),(0,a.yg)("li",{parentName:"ul"},"5: Major"),(0,a.yg)("li",{parentName:"ul"},"4: Minor"),(0,a.yg)("li",{parentName:"ul"},"3: Warning"),(0,a.yg)("li",{parentName:"ul"},"2: Informational"),(0,a.yg)("li",{parentName:"ul"},"1: Indeterminate")),(0,a.yg)("p",null,"Alerts have ",(0,a.yg)("strong",{parentName:"p"},"state")," which can be ",(0,a.yg)("strong",{parentName:"p"},"Open, Clear, or Closed"),". Note that the\nAlert ",(0,a.yg)("em",{parentName:"p"},"state")," can go from Clear back to Open if new related events arrive during\nthe same time window."),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Alerts Groups"),": An alert group is a group of two or more alerts that Cloud\nPak for AIOps has correlated together because the underlying analytics have\ndetermined that these alerts belong together. Alerts can be added to an alert\ngroup because of one or more of these factors:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Correlation Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Example"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("strong",{parentName:"td"},"Scope-based")," ",(0,a.yg)("strong",{parentName:"td"},"correlation"),": the alerts occur on a user defined scope."),(0,a.yg)("td",{parentName:"tr",align:null},"An administrator defines a ScopeID based on properties that define the scope for how alerts are grouped. Any alerts that match the scope and occur within a default time window are then automatically grouped together. An example would be where an alert storm occurs on the london145.acme.com server. All of the alerts in that storm will be grouped together as they match the alert.resource.location= london145.acme.com, and they occur within the default time window. These alerts are grouped into a scope-based subgroup.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("strong",{parentName:"td"},"Temporal correlation:")," The system continually analyzes past alerts to determine which alerts tend to frequently co-occur. When these alerts occur together again, they are correlated."),(0,a.yg)("td",{parentName:"tr",align:null},'A "Latency" alert on a server is regularly followed by a "Ping response time high" alert on that same server. These alerts are grouped into a temporal subgroup.')),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("strong",{parentName:"td"},"Topological correlation"),": the alerts occur on resources within a predefined section of your network topology."),(0,a.yg)("td",{parentName:"tr",align:null},"If there is a predefined section of the network that groups together a specific switch and all the nodes that depend on that switch, then any alerts occurring on that specific switch or the nodes connected to it are grouped together. These alerts are grouped into a topological subgroup.")))),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Incidents"),": Incidents represent the context which is currently severely\nimpacting IT Operations. This includes all alerts that are related to the\nincident ranked by probable cause and information about how the affected\ntopology resources are related. The creation and evolution of incidents are\ninformed by alerts. Incidents help build the understanding of the current\nsituation and also can drive the remediation steps by suggesting runbooks that\ncan help with the solution of the problem."),(0,a.yg)("p",null,"Incidents are categorized by ",(0,a.yg)("strong",{parentName:"p"},"priority")," ",(0,a.yg)("strong",{parentName:"p"},"from 1 (highest) to 5 (lowest)."),"\nIncidents have also ",(0,a.yg)("strong",{parentName:"p"},"status")," which can be ",(0,a.yg)("strong",{parentName:"p"},"Unassigned, In-progress, On-hold,\nor Resolved. ")),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Policies"),": Policies are rules that contain a condition and a set of actions\nthat can be manual or automated. They can be triggered to automatically promote\nevents to alerts, reduce noise by grouping alerts into an Incident, and assign\nrunbooks to remediate alerts. Each policy has an execution priority number which\ndetermines which policy runs first."),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Runbooks"),": A runbook is a controlled set of automated and manual steps that\nsupport system and network operational processes. A runbook orchestrates all\ntypes of infrastructure elements, such as applications, network components, or\nservers. We can also use runbooks to document standard procedures that can be\nleveraged by IT operations."),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Actions"),": Actions are the collection of several predefined steps into a\nsingle automated tested entity that can be shared by multiple runbooks. Actions\nimprove runbook efficiency by encapsulating procedures and operations."),(0,a.yg)("p",null,"The following chart shows how all these terms are related:"),(0,a.yg)("p",null,(0,a.yg)("img",{src:n(54185).A,width:"843",height:"586"})),(0,a.yg)("h3",{id:"normalized-event-schema"},"Normalized Event Schema"),(0,a.yg)("p",null,"This is the normalized event schema for the Generic Webhook and Kafka\nintegration."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-04/schema#",\n  "title": "Normalized Event schema",\n  "description": "Normalized Event for None mapping use case",\n  "type": "object",\n  "properties": {\n    "sender": {\n      "description": "Identifies the resource which sent this event. This may be the resource that is the subject of the event, or it may be some external system which is monitoring the subject.",\n      "type": "object",\n      "properties": {\n        "service": {\n          "description": "The identifier of the service",\n          "type": "string"\n        },\n        "name": {\n          "description": "The descriptive name of the service",\n          "type": "string"\n        },\n        "type": {\n          "description": "Data source name. For examples, PagerDuty, Netcool/OMNIbus",\n          "type": "string"\n        }\n      },\n      "required": ["service", "name", "type"]\n    },\n    "resource": {\n      "description": "Identifies the resource that is the subject of this event. This is made up of multiple fields that describe the resource. There are a set of standard fields which should be used where applicable, but additional fields may be set.",\n      "type": "object",\n      "properties": {\n        "name": {\n          "description": "The name of the resource. For example, myhost.example.com",\n          "type": "string"\n        },\n        "hostname": {\n          "description": "The hostname of the resource.",\n          "type": "string"\n        },\n        "type": {\n          "description": "The type of resource. For example, host",\n          "type": "string"\n        },\n        "ipaddress": {\n          "description": "The IP address of the resource.",\n          "type": "string"\n        },\n        "location": {\n          "description": "The location of the resource. For example, Dallas 10",\n          "type": "string"\n        }\n      },\n      "required": ["name", "hostname", "type", "ipaddress", "location"]\n    },\n    "type": {\n      "description": "Indicates whether the source alert is a problem or a resolution along with its classification.",\n      "type": "object",\n      "properties": {\n        "classification": {\n          "description": "Description of the type of the event. E.g. Utilization, System status, Threshold breach",\n          "type": "string"\n        },\n        "eventType": {\n          "description": "String description of whether the event is \'problem\' or \'resolution\'. Note: Only these two values are permitted.",\n          "type": "string"\n        }\n      },\n      "required": ["classification", "eventType"]\n    },\n    "severity": {\n      "description": "Indicates the event severity level, which indicates how the perceived capability of the managed object has been affected.",\n      "type": "integer",\n      "minimum": 0,\n      "maximum": 6\n    },\n    "summary": {\n      "description": "A human-readable description of the event.",\n      "type": "string"\n    },\n    "occurrenceTime": {\n      "description": "The time at which this event occurred. (ISO format: yyyy-mm-ddThh:mm:ss.SSSZ)",\n      "type": "string",\n      "pattern": "\\\\d{4}-[01]\\\\d-[0-3]\\\\dT[0-2]\\\\d:[0-5]\\\\d:[0-5]\\\\d(?:\\\\.\\\\d+)Z"\n    },\n    "expirySeconds": {\n      "description": "The number of seconds before the event should automatically expire. A value of zero indicates that there is no expiration.",\n      "type": "integer",\n      "minimum": 0\n    }\n  },\n  "required": [\n    "sender",\n    "resource",\n    "type",\n    "severity",\n    "summary",\n    "occurrenceTime",\n    "expirySeconds"\n  ]\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Sample Event")),(0,a.yg)("p",null,"This is a sample event based on the previous schema:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "sender": {\n    "service": "Mun SelfMonitoring",\n    "name": "Mun SelfMonitoring",\n    "type": "Datadog Observability"\n  },\n  "resource": {\n    "name": "AGG_P",\n    "hostname": "samplehost.ibm.com",\n    "type": "host",\n    "ipaddress": "10.1.96.24",\n    "location": "Dal10"\n  },\n  "type": {\n    "classification": "CEASelfMonitoring",\n    "eventType": "problem"\n  },\n  "severity": 6,\n  "summary": "Web Service - getTransferAmount() timeout",\n  "occurrenceTime": "2023-05-05T14:50:38.000Z",\n  "expirySeconds": 0\n}\n')),(0,a.yg)("h3",{id:"event-deduplication"},"Event Deduplication"),(0,a.yg)("p",null,"Occurrences of the same event are deduplicated into a single alert instance. The\ndefault correlation policy constructs a ",(0,a.yg)("strong",{parentName:"p"},"deduplication key")," for events from\nthe following elements:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"{{ event.resource }}-{{ event.type.classification }}-{{ event.type.condition }}\n")),(0,a.yg)("p",null,"When the same event occurs multiple times (the resource, classification, and\ncondition fields are the same), then deduplication increments the event count of\nthe current alert instance to show how many times the event occurred."),(0,a.yg)("p",null,"Problem events (type.eventType = ",(0,a.yg)("em",{parentName:"p"},"problem"),") create an alert (if one does not\nexist). Meanwhile, resolution events (type.eventType = ",(0,a.yg)("em",{parentName:"p"},"resolution"),") do not\nbecome alerts and are not visible in the Alert Viewer. They clear an alert if\none exists and are ignored if no alert exists. For a resolution event to clear\nan alert, it must have the same deduplication key as the event that the alert\nwas created from. Also, it must have occurred ",(0,a.yg)("em",{parentName:"p"},"after")," the last event that\ncontributed to the alert."))}u.isMDXComponent=!0},54185:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/funnel-ea225bc01906047a2f736331dbde1f48.png"}}]);