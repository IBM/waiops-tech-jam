"use strict";(self.webpackChunkswat_hub=self.webpackChunkswat_hub||[]).push([[9582],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47381:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={title:"7. Configure scope-based grouping",description:"Define scope-based event grouping policies",sidebar_position:7},i=void 0,s={unversionedId:"watson-aiops/scope-based-grouping/index",id:"watson-aiops/scope-based-grouping/index",title:"7. Configure scope-based grouping",description:"Define scope-based event grouping policies",source:"@site/labs/watson-aiops/7-scope-based-grouping/index.mdx",sourceDirName:"watson-aiops/7-scope-based-grouping",slug:"/watson-aiops/scope-based-grouping/",permalink:"/waiops-tech-jam/labs/watson-aiops/scope-based-grouping/",draft:!1,editUrl:"https://github.com/IBM/waiops-tech-jam/labs/watson-aiops/7-scope-based-grouping/index.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"7. Configure scope-based grouping",description:"Define scope-based event grouping policies",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"6. Configure topology group templates",permalink:"/waiops-tech-jam/labs/watson-aiops/configure-topology/"},next:{title:"8. Optional grouping features",permalink:"/waiops-tech-jam/labs/watson-aiops/optional-grouping/"}},l={},p=[{value:"7.1: Overview",id:"71-overview",level:2},{value:"7.2: Create a scope-based event grouping policy to group by Service",id:"72-create-a-scope-based-event-grouping-policy-to-group-by-service",level:2},{value:"7.3: Inject some sample Service events",id:"73-inject-some-sample-service-events",level:2},{value:"7.4: Create a scope-based event grouping policy to group by Location",id:"74-create-a-scope-based-event-grouping-policy-to-group-by-location",level:2},{value:"7.5: Inject some sample Location events",id:"75-inject-some-sample-location-events",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"71-overview"},"7.1: Overview"),(0,r.kt)("p",null,'This module considers a second method of doing event correlation: scope-based\nevent grouping. Scope-based event grouping is based on a basic premise that\nevents occurring at the "same place", and at the "same time" are likely related.'),(0,r.kt)("p",null,"For example, if a remote cell site has a power failure, there will likely be\nalarms generated from equipment there, along with building management alarms,\nand so on, in a relatively short space of time. In this case, the scope might be\nthe remote location, and the time window might be, say, a 10 minute window.\nAnother example is where there is a hardware failure in one of the servers that\ncontribute to the provision of a service, such as an application or website.\nThis failure may result in alarms being generated from the dependent parts. In\nthis case, the scope might be the common application or service name, and the\nscope might be, say, a 5 minute window."),(0,r.kt)("p",null,"Scope-based grouping is provided by Watson for AIOps Event Manager so that\noperations teams can input local knowledge on how events should be grouped. A UI\nis provided so that scope-based event ",(0,r.kt)("strong",{parentName:"p"},"grouping policies")," can be created and\nmaintained."),(0,r.kt)("p",null,"In practice, scope-based event grouping is very powerful and yields tremendous\nevent reduction by virtue of grouping events, thereby effectively reducing the\nnumber of rows presented to operators. The level of reduction achieved varies\ndepending on the data sets, but it is typically ",(0,r.kt)("strong",{parentName:"p"},"upwards of 60%"),". A major\nnorth-American financial institution reported that scope-based event grouping\nhelped them to reduce the number of tickets they open by around 70%, by opening\ntickets based on groups of events rather than individual events."),(0,r.kt)("p",null,'By the end of this module, you will have created two scope-based event grouping\npolicies, injected some test events and observed the grouping. The second\nexample will include overlap with a topology-based event correlation scenario in\nthe previous module to demonstrate so-called "super grouping".'),(0,r.kt)("h2",{id:"72-create-a-scope-based-event-grouping-policy-to-group-by-service"},"7.2: Create a scope-based event grouping policy to group by Service"),(0,r.kt)("p",null,"Log in to Watson for AIOps Event Manager and navigate to: ",(0,r.kt)("strong",{parentName:"p"},"Netcool WebGUI"),"."),(0,r.kt)("p",null,"Navigate to: ",(0,r.kt)("strong",{parentName:"p"},"Insights > Scope Based Grouping")),(0,r.kt)("p",null,"Complete the following steps to create a policy based on common application\nname:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click on: ",(0,r.kt)("strong",{parentName:"li"},"Create policy")),(0,r.kt)("li",{parentName:"ul"},"Give the policy a name - eg: ",(0,r.kt)("strong",{parentName:"li"},"GroupByService")),(0,r.kt)("li",{parentName:"ul"},'Complete the Description field with something appropriate - eg: "Policy to\ngroup events by common service name"'),(0,r.kt)("li",{parentName:"ul"},"Leave the ",(0,r.kt)("strong",{parentName:"li"},"Priority")," field set to 1"),(0,r.kt)("li",{parentName:"ul"},"The default ",(0,r.kt)("strong",{parentName:"li"},"Datasource")," should already be checked"),(0,r.kt)("li",{parentName:"ul"},"From the ",(0,r.kt)("strong",{parentName:"li"},"Events")," section, select: ",(0,r.kt)("strong",{parentName:"li"},"Specify conditions")),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("strong",{parentName:"li"},"Condition 1")," to: ",(0,r.kt)("strong",{parentName:"li"},"Service")," field ",(0,r.kt)("strong",{parentName:"li"},"Is not empty")),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("strong",{parentName:"li"},"Action")," parameter to define the scope: set it to ",(0,r.kt)("strong",{parentName:"li"},"Service")),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("strong",{parentName:"li"},"Time Window")," to 300 seconds (5 minutes)"),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("strong",{parentName:"li"},"Enabled")," toggle switch to ",(0,r.kt)("strong",{parentName:"li"},"On")," and ",(0,r.kt)("strong",{parentName:"li"},"Save"),".")),(0,r.kt)("p",null,"You should end up with something like the following:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(39966).Z,width:"1849",height:"273"})),(0,r.kt)("h2",{id:"73-inject-some-sample-service-events"},"7.3: Inject some sample Service events"),(0,r.kt)("p",null,"Create a new local file and call it ",(0,r.kt)("inlineCode",{parentName:"p"},"scope_events.sh")," and paste the following\ncontent into it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="scope_events.sh"',title:'"scope_events.sh"'},"#!/bin/bash\n\n/opt/IBM/tivoli/netcool/omnibus/bin/nco_sql -server AGG_P -user root -passwd $OMNIBUS_ROOT_PWD << EOF\n\ndelete from alerts.status;\ngo\n\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Service) values ('db2server1clean1', 'db2server1', 'Running cleanup automation script', 2, 13, 'Syslog', 'WebService');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Service) values ('db2server1clean2', 'db2server1', 'Error: unable to run cleanup automation script', 3, 1, 'Syslog', 'WebService');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Service) values ('db2server1syslog', 'db2server1', '/dev/sda1 is 100% full', 5, 1, 'Syslog', 'WebService');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Service) values ('db2server1db', 'db2server1', 'Database is inaccessible', 5, 1, 'ITM6', 'WebService');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Service) values ('websphere01', 'websphere01', 'websphere01 unable to access transaction database', 4, 1, 'ITM6', 'WebService');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Service) values ('websphere02', 'websphere02', 'websphere02 unable to access transaction database', 4, 1, 'ITM6', 'WebService');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Service) values ('widgetcom', 'www.widget.com', 'www.widget.com: response time >30s', 5, 1, 'ITM6', 'WebService');\n\ngo\nexit\nEOF\n\n")),(0,r.kt)("p",null,"Next, use the following command to copy your new script to the ObjectServer pod\nand set its file permissions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'cat scope_events.sh | oc exec -i evtmanager-ncoprimary-0 -- sh -c "cat > /tmp/scope_events.sh"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'oc exec -it evtmanager-ncoprimary-0 bash -- sh -c "chmod +x /tmp/scope_events.sh"\n')),(0,r.kt)("p",null,"Finally, use the following commands to execute this script to generate the\nexample events:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"oc exec -it evtmanager-ncoprimary-0 bash -- /tmp/scope_events.sh\n")),(0,r.kt)("admonition",{title:"Note",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"You can ignore the message:\n",(0,r.kt)("inlineCode",{parentName:"p"},"Warning: Failed to find tar in the following directories : /bin /usr/bin"))),(0,r.kt)("p",null,"You should end up with something like the following:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(12563).Z,width:"1787",height:"291"})),(0,r.kt)("h2",{id:"74-create-a-scope-based-event-grouping-policy-to-group-by-location"},"7.4: Create a scope-based event grouping policy to group by Location"),(0,r.kt)("p",null,"Log in to Watson for AIOps Event Manager and navigate to: Netcool WebGUI."),(0,r.kt)("p",null,"Navigate to: ",(0,r.kt)("strong",{parentName:"p"},"Insights > Scope Based Grouping")),(0,r.kt)("p",null,"Complete the following steps to create a policy based on common geographic\nlocation:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click on: ",(0,r.kt)("strong",{parentName:"li"},"Create policy")),(0,r.kt)("li",{parentName:"ul"},"Give the policy a name - eg: ",(0,r.kt)("strong",{parentName:"li"},"GroupByLocation")),(0,r.kt)("li",{parentName:"ul"},"Complete the Description field with something appropriate - eg: Policy to\ngroup events by common location"),(0,r.kt)("li",{parentName:"ul"},"Leave the ",(0,r.kt)("strong",{parentName:"li"},"Priority")," field set to 1"),(0,r.kt)("li",{parentName:"ul"},"The default ",(0,r.kt)("strong",{parentName:"li"},"Datasource")," should already be checked"),(0,r.kt)("li",{parentName:"ul"},"From the ",(0,r.kt)("strong",{parentName:"li"},"Events")," section, select: ",(0,r.kt)("strong",{parentName:"li"},"Specify conditions")),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("strong",{parentName:"li"},"Condition 1")," to: ",(0,r.kt)("strong",{parentName:"li"},"Location")," field ",(0,r.kt)("strong",{parentName:"li"},"Is not empty")),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("strong",{parentName:"li"},"Action")," parameter to define the scope: set it to ",(0,r.kt)("strong",{parentName:"li"},"Location")),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("strong",{parentName:"li"},"Time Window")," to 300 seconds (5 minutes)"),(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("strong",{parentName:"li"},"Enabled")," toggle switch to ",(0,r.kt)("strong",{parentName:"li"},"On")," and ",(0,r.kt)("strong",{parentName:"li"},"Save"))),(0,r.kt)("p",null,"You should end up with something like the following: ",(0,r.kt)("img",{src:n(48274).Z,width:"1854",height:"335"})),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The Priority specifies the order in which the Policies will be tried. Once a\nscope-based event grouping Policy matches and the scope is set for an event, all\nsubsequent Policies will be skipped. If two policies have the same Priority\nvalue (as in this case), the execution order is indeterminate.")),(0,r.kt)("h2",{id:"75-inject-some-sample-location-events"},"7.5: Inject some sample Location events"),(0,r.kt)("p",null,"Create a new local file and call it ",(0,r.kt)("inlineCode",{parentName:"p"},"super_group_events.sh")," and paste the\nfollowing content into it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="super_group_events.sh"',title:'"super_group_events.sh"'},"#!/bin/bash\n\n\n/opt/IBM/tivoli/netcool/omnibus/bin/nco_sql -server AGG_P -user root -passwd $OMNIBUS_ROOT_PWD << EOF\n\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Location) values ('rackserver01', 'racksvr01', 'Warning: hardware fault detected in processing array', 5, 1, 'SNMP', 'London01');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Location) values ('esx1', 'esx01', 'Warning: low resources', 3, 1, 'VMware', 'London01');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Location) values ('computer1000esx', 'computer1000', 'Auto-scaling failed: unable to allocate resources', 4, 1, 'VMware', 'London01');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Location) values ('computer1001esx', 'computer1001', 'Auto-scaling failed: unable to allocate resources', 4, 1, 'VMware', 'London01');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Location) values ('server100esx', 'server100', 'Auto-scaling failed: unable to allocate resources', 4, 1, 'VMware', 'London01');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup, Location) values ('server200esx', 'server200', 'Auto-scaling failed: unable to allocate resources', 4, 1, 'VMware', 'London01');\ngo\n\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup) values ('cpu01', 'cpu01', 'cpu01 on computer1000 >90% utilisation', 5, 1, 'VMware');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup) values ('cpu02', 'cpu02', 'cpu02 on computer1000 >80% utilisation', 4, 1, 'VMware');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup) values ('billing', 'billing', 'Billing application ResponseTime >10000msec', 4, 1, 'Instana');\ninsert into alerts.status (Identifier, Node, Summary, Severity, Type, AlertGroup) values ('webserver', 'webserver', 'Webserver service degraded', 5, 1, 'Instana');\ngo\n\nexit\n\nEOF\n")),(0,r.kt)("p",null,"Next, use the following command to copy your new script to the ObjectServer pod\nand set its file permissions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'cat super_group_events.sh | oc exec -i evtmanager-ncoprimary-0 -- sh -c "cat > /tmp/super_group_events.sh"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'oc exec -it evtmanager-ncoprimary-0 bash -- sh -c "chmod +x /tmp/super_group_events.sh"\n')),(0,r.kt)("p",null,"Finally, use the following commands to execute this script to generate the\nexample events:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"oc exec -it evtmanager-ncoprimary-0 bash -- /tmp/super_group_events.sh\n")),(0,r.kt)("p",null,"You will observe three groups of events merged together: two created by\ntopology-based event grouping, and one created by scope-based event grouping."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You may need to wait a few seconds and refresh the event view before the\ngrouping is visible.")),(0,r.kt)("p",null,"Select any event and run the tool from the Alert Viewer. You should end up with\nsomething like the following:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(16690).Z,width:"1787",height:"389"})),(0,r.kt)("p",null,'You can click on the grouping buttons on the right to inspect the details of the\ngroup. Topology-based grouping will show a preview of the topology that has\neffected the grouping. Note how you have events grouped together by both\ntopology-based grouping and scope-based grouping in the "super group". The\nevents from computer1000 and computer1001 are found in both the topology-based\ncorrelation template groups, as well as the scope-based event grouping policy.\nHence these events are members of two different group types, and so the two\ngroups are automatically merged together due to these common events.'),(0,r.kt)("p",null,'You have now completed this module and are ready for the next module "Enable\noptional grouping features".'),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://community.ibm.com/community/user/aiops/blogs/zane-bray1/2022/06/27/getting-started-with-watson-aiops-event-manager-67"},"Reference Blog")))}u.isMDXComponent=!0},39966:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Scope1-33dcfb9d4c8c076f7b86735f6478664d.png"},48274:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Scope2-d00cc81bed1b21e06cf18d4b17331ee1.png"},12563:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/events-92ba382bf6ab8a0180bb3e8bcdd9a973.png"},16690:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/events2-5d605ebc6c07066d73f7bcf34a9dbb6c.png"}}]);