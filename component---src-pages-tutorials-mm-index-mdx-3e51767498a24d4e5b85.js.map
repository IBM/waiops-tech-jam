{"version":3,"file":"component---src-pages-tutorials-mm-index-mdx-3e51767498a24d4e5b85.js","mappings":"+PAEA,ECGmB,SAAC,GAAD,MAAGA,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,IAAiBC,KAAAA,OAAjB,MAAwB,GAAxB,SACjB,uBACEC,UAAWC,ICHS,yCDGP,OCDK,uCDEGF,EAAKG,OADb,ECJK,uCDMa,SAAVJ,EAFR,KAIb,uBAAKE,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,iBACb,sBAAIG,GAAG,aAAaH,UCTZ,kCDULH,MAVM,EEHnB,ECIiB,SAAC,GAAsD,IAApDO,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,GAEhBC,EAAAA,EAAAA,gBAAe,cAHjBC,KACEC,aAAgBH,WAgBpB,EAA0CD,GAAkBC,EAApDI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAEXC,EAAUF,EAAN,SAFV,EAA+BG,OAEUF,EAA/B,aAAwDP,EAElE,OAAOM,EACL,uBAAKV,UAAS,uCACZ,uBAAKA,UAAU,WACb,qBAAGA,UC7BO,+BD6BUY,KAAMA,GAA1B,8BAKF,IACL,E,oBExBoBE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,CAkClB,OAlCkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBC,OAAA,WACE,MAA8BC,KAAKC,MAA3BpB,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KAAMmB,EAArB,EAAqBA,KACfC,EAAaD,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,GAEvDC,EAAWzB,EAAK0B,KAAI,SAACC,GAAS,IAAD,EAC3BC,EAAeC,IAAQF,EAAK,CAAEG,OAAO,EAAMC,QAAQ,IACnDC,EAAWJ,IAAiBR,EAG5Ba,EAAkB,IAAIC,OAAUd,EAAd,aAClBP,EAAOM,EAAKgB,QAAQF,EAAiBL,GAC3C,OACE,sBAAIQ,IAAKT,EAAK1B,UAAWC,KAAE,OCrBT,yCDqB4B8B,EAAnB,GCtBb,sCDuBZ,gBAAC,EAAAK,KAAD,CAAMpC,UCzBE,+BDyBeqC,GAAE,GAAKzB,GAC3Bc,GAIR,IAED,OACE,uBAAK1B,UC7BgB,0CD8BnB,uBAAKA,UAAU,YACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,mCACb,uBAAK,aAAYH,GACf,sBAAIG,UCrCF,gCDqCoBwB,OAOnC,IAlCkBV,CAAiBwB,EAAAA,WEZtC,I,8BCAA,ECEyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAOpBC,EAAe,IAAIC,KAAKF,GAE9B,OAAOA,EACL,gBAAC,KAAD,CAAKvC,UCXQ,yCDYX,gBAAC,KAAD,KACE,uBAAKA,UCZK,0CDYV,sBACsBwC,EAAaE,mBAAmB,QAZ5C,CACdC,IAAK,UACLC,KAAM,UACNC,MAAO,YAcL,IACL,EEwED,EAjFgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClD,EAA0DH,EAAlDI,YAAAA,OAAR,MAAsB,CAAC,EAAvB,EAA0B9C,EAAgC0C,EAAhC1C,iBAAkB+C,EAAcL,EAAdK,UAE1CpD,EAMEmD,EANFnD,KACAF,EAKEqD,EALFrD,MACOuD,EAILF,EAJFpD,MACAuD,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAf,EACEW,EADFX,KAGMgB,GAAkBC,EAAAA,EAAAA,KAAlBD,cAIEE,GACNlD,EAAAA,EAAAA,gBAAe,cADjBC,KAAQiD,WAUJvC,EAAOuC,EACTT,EAASU,SAASxB,QAAQuB,EAAY,IACtCT,EAASU,SAUPvC,EAPCpB,EAEHmB,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CK,IAAQ7B,EAAK,GAAI,CAAE8B,OAAO,IAHV,GASd/B,EAAQsD,GAAoBG,EAElC,OACE,gBAACI,EAAA,EAAD,CACE5D,KAAMA,EACN6D,UAAU,EACV9D,MAAOA,EACP+D,UAAWhE,EACXiE,gBAAiBT,EACjBU,aAAcT,EACdH,UAAWA,GACX,gBAAC,EAAD,CACEtD,MAAOoD,EAAQ,gBAACA,EAAD,MAAYpD,EAC3BmE,MAAM,QACNjE,KAAMA,EACND,MAAOA,IAERC,GACC,gBAAC,EAAD,CACEF,MAAOA,EACPqB,KAAMA,EACNnB,KAAMA,EACNoB,WAAYA,IAGhB,gBAAC8C,EAAA,EAAD,CAAMC,QAAM,GACTnB,EACD,gBAAC,EAAD,CAAU3C,iBAAkBA,IAC5B,gBAAC,EAAD,CAAkBmC,KAAMA,KAE1B,gBAAC4B,EAAA,EAAD,CACErB,YAAaA,EACbE,SAAUA,EACV9B,KAAMA,EACNnB,KAAMA,EACNoB,WAAYA,IAEd,gBAACiD,EAAA,EAAD,MAGL,C,mKCrFYC,EAAe,CAAC,EAEvBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BtD,GAEzD,OADAuD,QAAQC,KAAK,aAAeF,EAAO,4EAC5B,cAAStD,EACjB,CAHyB,EAKpByD,EAAcJ,EAAc,eAC5BK,EAAaL,EAAc,cAC3BM,EAAc,CAClBP,aAAAA,GAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACG/D,GACF,YACD,OAAO,QAAC4D,EAAD,iBAAeD,EAAiB3D,EAAhC,CAAuC+D,WAAYA,EAAYC,QAAQ,eAG5E,QAACP,EAAD,CAAaO,QAAQ,gBACvB,QAACN,EAAD,CAAYM,QAAQ,cAApB,0CACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,8CACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,wDACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,uDACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,0EACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,2BACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,mCACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,6CACA,QAACN,EAAD,CAAYM,QAAQ,cAApB,wCAEE,6DACA,yOACA,mBACE,cAAIC,WAAW,MAAf,wDACA,cAAIA,WAAW,MAAf,oBACA,cAAIA,WAAW,MAAf,0CACA,cAAIA,WAAW,MAAf,eACA,cAAIA,WAAW,MAAf,cACA,cAAIA,WAAW,MAAf,0BACA,cAAIA,WAAW,MAAf,0BAEF,iGACA,eACE,IAAO,iCACP,IAAO,QAET,2HAA6G,kBAAQA,WAAW,KAAnB,cAA7G,iHAA4Q,kBAAQA,WAAW,KAAnB,aAA5Q,oJACA,eACE,IAAO,iCACP,IAAO,QAET,2BACE,aAAGA,WAAW,eAAa,kBAAQA,WAAW,KAAnB,gEAE7B,8FAAgF,kBAAQA,WAAW,KAAnB,WAAhF,QAAmI,kBAAQA,WAAW,KAAnB,UAAnI,kDAA+N,aAAGA,WAAW,IACzO,KAAQ,gGADmN,iCAG/N,2DAA6C,kBAAQA,WAAW,KAAnB,WAA7C,SAAiG,kBAAQA,WAAW,KAAnB,UAAjG,oDACA,uBAAS,kBAAQA,WAAW,KAAnB,WAAT,8QAAkU,aAAGA,WAAW,IAC5U,KAAQ,mGADsT,uBAGlU,uHAAyG,aAAGA,WAAW,IACnH,KAAQ,uFAD6F,kCAAzG,kPAGA,uBAAS,kBAAQA,WAAW,KAAnB,UAAT,qRACA,2BACE,aAAGA,WAAW,eAAa,kBAAQA,WAAW,KAAnB,iJAE7B,oBACA,iEACA,sMACA,+CAAiC,kBAAQA,WAAW,KAAnB,UAAjC,8CACF,eAAKA,WAAW,IACV,IAAO,kBACP,IAAO,SAEX,qCAAuB,kBAAQA,WAAW,KAAnB,kBAAvB,0CACF,eAAKA,WAAW,IACV,IAAO,yBACP,IAAO,SAEX,iMACF,eAAKA,WAAW,IACV,IAAO,0BACP,IAAO,SAEX,mEAAqD,kBAAQA,WAAW,KAAnB,gBAArD,mNACuF,kBAAQA,WAAW,KAAnB,wCADvF,gDAEA,2KACA,uDAAyC,kBAAQA,WAAW,KAAnB,kCAAzC,wHACA,kIACA,qHACA,uBAAS,eAAKA,WAAW,IACrB,IAAO,2BACP,IAAO,SAEX,8EACA,oZAEA,oBACA,2EACA,gJAAkI,kBAAQA,WAAW,KAAnB,WAAlI,iCACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,eAIL,+CAAiC,kBAAQA,WAAW,KAAnB,UAAjC,8CACF,eAAKA,WAAW,IACV,IAAO,kBACP,IAAO,SAEX,qCAAuB,kBAAQA,WAAW,KAAnB,kBAAvB,0CACF,eAAKA,WAAW,IACV,IAAO,yBACP,IAAO,SAEX,kDAAoC,kBAAQA,WAAW,KAAnB,UAApC,yFAAuK,kBAAQA,WAAW,KAAnB,QAAvK,mCAAkP,kBAAQA,WAAW,KAAnB,WAAlP,gFAEA,uBAAS,eAAKA,WAAW,IACrB,IAAO,2BACP,IAAO,SAEX,oCAAsB,kBAAQA,WAAW,KAAnB,aAAtB,4GACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,iBAIL,uBAAS,eAAKA,WAAW,IACrB,IAAO,4BACP,IAAO,SAEX,0cAEA,oBACA,0EACA,8MACA,mOAEA,gMACA,6FACA,uBAAS,eAAKA,WAAW,IACrB,IAAO,kBACP,IAAO,SAEX,qCAAuB,kBAAQA,WAAW,KAAnB,kBAAvB,yCACA,uBAAS,eAAKA,WAAW,IACrB,IAAO,yBACP,IAAO,SAEX,mLACA,uBAAS,eAAKA,WAAW,IACrB,IAAO,uBACP,IAAO,SAEX,+DAAiD,kBAAQA,WAAW,KAAnB,gBAAjD,oFAAqL,kBAAQA,WAAW,KAAnB,UAArL,2BACA,uBAAS,eAAKA,WAAW,IACrB,IAAO,kBACP,IAAO,OAFX,MAIA,wNAA0M,kBAAQA,WAAW,KAAnB,oBAA1M,mEAAiU,kBAAQA,WAAW,KAAnB,oBAAjU,kBACA,2BACE,aAAGA,WAAW,eAAa,kBAAQA,WAAW,KAAnB,mLAE7B,sMAAwL,kBAAQA,WAAW,KAAnB,WAAxL,cAAiP,kBAAQA,WAAW,KAAnB,QAAjP,yCACA,+RACA,uEACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,uCAIL,wEACF,eAAKA,WAAW,IACV,IAAO,qBACP,IAAO,SAEX,uKACA,sFACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,gCAIL,kFACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,iEAIL,kFACF,eAAKA,WAAW,IACV,IAAO,yBACP,IAAO,SAEX,iCACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,oCAIL,gGAAkF,kBAAQA,WAAW,KAAnB,uEAAlF,iNACF,eAAKA,WAAW,IACV,IAAO,qBACP,IAAO,SAEX,mLACA,oBACA,6FACA,kOACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,oCAIL,wPACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,yCAIL,2BAAa,kBAAQA,WAAW,KAAnB,YAAb,wDACA,oBACA,8CACA,mLACA,mBACE,cAAIA,WAAW,MAAf,kBAAsC,kBAAQA,WAAW,MAAnB,mBAAtC,kBAA4G,cAAIA,WAAW,MAAf,qBAA5G,2DACA,cAAIA,WAAW,MAAf,kBAAsC,kBAAQA,WAAW,MAAnB,2BAAtC,mBAAqH,cAAIA,WAAW,MAAf,qBAArH,0GAEF,0FAA4E,aAAGA,WAAW,IACtF,KAAQ,+GADgE,2BAG5E,iEAAmD,cAAIA,WAAW,KAAf,WAA8B,cAAIA,WAAW,MAAf,gBAAjF,+DAA6L,cAAIA,WAAW,KAAf,WAA8B,cAAIA,WAAW,MAAf,qBAA3N,gBACA,oBACA,sDACA,2HAA6G,sBAAYA,WAAW,KAAvB,sBAA7G,gCAA2M,sBAAYA,WAAW,KAAvB,kCAA3M,gGACA,2BACE,aAAGA,WAAW,eAAa,kBAAQA,WAAW,KAAnB,mFAE7B,uNAAyM,sBAAYA,WAAW,KAAvB,sBAAzM,mHAA0X,kBAAQA,WAAW,KAAnB,OAA1X,sFACA,gEAAkD,sBAAYA,WAAW,KAAvB,sBAAlD,wHAAwO,sBAAYA,WAAW,KAAvB,iBAAxO,gKACA,2BACE,aAAGA,WAAW,eAAa,kBAAQA,WAAW,KAAnB,sJAE7B,oBACA,gEACA,gKAAkJ,sBAAYA,WAAW,KAAvB,2CAClJ,wFAA0E,sBAAYA,WAAW,KAAvB,iBAA1E,qBAAwJ,sBAAYA,WAAW,KAAvB,iBAAxJ,gBACA,oBACA,0DACA,8QAAgQ,aAAGA,WAAW,IAC1Q,KAAQ,uHADoP,iBAAhQ,MAGA,iGACA,mBACE,cAAIA,WAAW,MAAf,iCACA,cAAIA,WAAW,MAAf,oEACA,cAAIA,WAAW,MAAf,wEACA,cAAIA,WAAW,MAAf,0IAEF,oBACA,6GAGH,CAEDH,EAAWI,gBAAiB,C","sources":["webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://ibm-aiops-swat-tech-jam/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://ibm-aiops-swat-tech-jam/./src/pages/tutorials/mm/index.mdx"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/103537778/git/waiops-tech-jam/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">2-1: Instana Agent Deployment Options</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-2: Installing Instana agent on Linux VM</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-3: Installing Instana Agent on the Instana Server</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-4: Installing Instana agent on OpenShift cluster</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-5: Troubleshooting Instana agent installation on Kubernetes cluster</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-6: Configuring Proxy</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-7: Configuring Instana Agent</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-8: Agent Configuration Troubleshooting</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2-9: Configuring GitOps for Agents</AnchorLink>\n    </AnchorLinks>\n    <h2>{`2-1:  Instana Agent Deployment Options`}</h2>\n    <p>{`Instana has a variety of agent installation options including the mirror repository and static agents that allow customers to meet strict change control processes. Some of the available options are listed below:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`OS specific installer (Linux, MacOS, Windows, UNIX)`}</li>\n      <li parentName=\"ul\">{`Container setup`}</li>\n      <li parentName=\"ul\">{`Docker (and other container managers)`}</li>\n      <li parentName=\"ul\">{`Kubernetes`}</li>\n      <li parentName=\"ul\">{`OpenShift`}</li>\n      <li parentName=\"ul\">{`Hosted Cloud Services`}</li>\n      <li parentName=\"ul\">{`Serverless component`}</li>\n    </ul>\n    <p>{`All above mentioned methods are accessible via the wizard on the Instana UI`}</p>\n    <img {...{\n      \"src\": \"images/2022-05-21-17-46-38.png\",\n      \"alt\": null\n    }}></img>\n    <p>{`You begin by choosing the platform where you will be installing the agent.  Then you can selected the `}<strong parentName=\"p\">{`Technology`}</strong>{` dropdown and choose from a list of installation options.  For example, on Linux, you can choose a automatic `}<strong parentName=\"p\">{`one-liner`}</strong>{` installation, RPM, or TAR file installation.  For OpenShift/kubernetes, you have multiple options including operator, helm, and yaml installs.`}</p>\n    <img {...{\n      \"src\": \"images/2022-05-21-17-48-04.png\",\n      \"alt\": null\n    }}></img>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`⚠`}{` HINT: Instana agent install needs privileges! ROOT!!`}</strong></p>\n    </blockquote>\n    <p>{`When installing Instana agent you have to select if you want agent to be `}<strong parentName=\"p\">{`dynamic`}</strong>{` or `}<strong parentName=\"p\">{`static`}</strong>{`. What does it mean? Here is the excerpt from `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/SSE1JP5_current/src/pages/setup_and_manage/host_agent/index.html\"\n      }}>{`Instana agent documentation`}</a></p>\n    <p>{`The Instana Host Agent has two types, `}<strong parentName=\"p\">{`dynamic`}</strong>{` and `}<strong parentName=\"p\">{`static`}</strong>{`, based on whether it can update itself or not.`}</p>\n    <p>{`A `}<strong parentName=\"p\">{`dynamic`}</strong>{` host agent downloads on startup the latest set of sensors from repositories. By default, a dynamic agent updates itself daily with the latest and greatest capabilities that are released. It is also possible to tightly control the updating of dynamic host agents by `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/obi/current?topic=agent-updates-dynamic-host-agents#version-pinning\"\n      }}>{`pinning a version`}</a></p>\n    <p>{`By default, dynamic host agents use the Instana repository to pull updates, but it is possible to `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/obi/current?topic=agent-repositories#agent-repositories\"\n      }}>{`set up your own managed mirror`}</a>{`.  Currently, the mirror must be a Nexus repository.  This is probably the best option for must customers because it allows them the benefits of automatic updates, while at the same time controlling the content that is in the repository.`}</p>\n    <p>{`A `}<strong parentName=\"p\">{`static`}</strong>{` host agent is a self-contained host agent that includes all the latest available components at the time of its release, and has no dynamic update capabilities. The static host agent has a stable “bill of materials” that never changes after the host agent’s installation. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`⚠`}{` HINT: Static host agents require no internet connection to the Instana repository, and are recommended in restrictive network setups.`}</strong></p>\n    </blockquote>\n    <hr></hr>\n    <h2>{`2-2:  Installing Instana Agent on Linux VM`}</h2>\n    <p>{`You will be installing the Instana Agent on the ACE/MQ server that has been provisioned for you for this lab.  Open up a terminal window and login to the ACE/MQ server as root.`}</p>\n    <p>{`In Instana UI, select the `}<strong parentName=\"p\">{`“Stan”`}</strong>{` the robot icon in the upper left corner\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/stan.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Next, click the `}<strong parentName=\"p\">{`“Deploy Agent”`}</strong>{` button near the upper right corner.\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/DeployAgent.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`A window will open with a list of different environments where you can install the Instana Agent.  This is a Linux server, so select Linux on the left side of the screen.\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/linuxInstall.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Just to see what your options are, select the `}<strong parentName=\"p\">{`“Technology”`}</strong>{` dropdown list to see the different ways that you can install the Instana Agent.  You’ll notice that you can perform\nrpm installs or simply download a tar file.  But, the easiest method is the default one, `}<strong parentName=\"p\">{`“Automatic Installation (One-Liner)”`}</strong>{`.  Select that option in the dropdown list.`}</p>\n    <p>{`Notice that there are a few other options including the use of different java versions, static vs. dynamic agents, etc.   Leave the default settings.`}</p>\n    <p>{`Next, select the checkbox next to `}<strong parentName=\"p\">{`“Install and start as service”`}</strong>{`.  This will setup the systemctl autostart process and will also start the Agent immediately after it is installed.`}</p>\n    <p>{`Finally, copy and paste the curl command into the terminal window with the SSH session to the target server.`}</p>\n    <p>{`The install will progress and you will see an output similar to the screen capture shown below.`}</p>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"images/installResult.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`At this point the Agent is installed and up and running.`}</p>\n    <p>{`The Agent will automatically start monitoring the operating system and start discovering key processes and middleware.  In many cases it will automatically instrument\nthose technologies.  In the case of some technologies (eg. MQ an and App Connect Enterprise), there are manual configuration steps required due to the need to provide credentials for accessing those applications.  `}</p>\n    <hr></hr>\n    <h2>{`2-3:  Installing Instana Agent on the Instana Server`}</h2>\n    <p>{`Next, you will install the Instana agent on the Instana server.  Open a terminal window on the Instana Server.  Then, type `}<strong parentName=\"p\">{`sudo -i`}</strong>{` to switch to the root user.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`sudo -i\n`}</code></pre>\n    <p>{`In Instana UI, select the `}<strong parentName=\"p\">{`“Stan”`}</strong>{` the robot icon in the upper left corner\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/stan.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Next, click the `}<strong parentName=\"p\">{`“Deploy Agent”`}</strong>{` button near the upper right corner.\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/DeployAgent.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`For this install, choose the `}<strong parentName=\"p\">{`Docker`}</strong>{` platform.  At the top of the page you will see an entry box where you can specify a `}<strong parentName=\"p\">{`Zone`}</strong>{`.  Specify a zone name such as `}<strong parentName=\"p\">{`instana`}</strong>{`.  Then, copy the\ndocker run command and past it into the terminal window.`}</p>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"images/dockerInstall.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`If you issue a `}<strong parentName=\"p\">{`docker ps`}</strong>{` command, you’ll see that there is a new docker container running. This container is the Instana agent.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`docker ps\n`}</code></pre>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"images/agentContainer.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`This will install the Instana Agent as a docker container running on the Instana Server machine.   It will begin to collect host metrics and will discover the various technologies like\nCassandra, ClickHouse, ElasticSearch, Nginx, Node.js, and more.  Many of these technologies will be monitored automatically without the need for configuration.  In some cases, the sensors need to be configured in order to see the performance metrics.`}</p>\n    <hr></hr>\n    <h2>{`2-4:  Installing Instana Agent on OpenShift Cluster`}</h2>\n    <p>{`The next step is to install the Instana Monitoring into the OpenShift Cluster that we’ll be using to install our Bee-Travels application.  This is the cluster that we’ll be monitoring.`}</p>\n    <p>{`Throughout this lab, we will be using the “oc” command to run commands within OpenShift.  The “oc” command is similar to kubectl for other versions of Kubernetes.  There are\nsome minor syntax differences.`}</p>\n    <p>{`To install Instana agent on OpenShift cluster you need to authenticate to the OCP cluster with appropriate permissions (cluster admin role). Then, follow the steps below:`}</p>\n    <p>{`In Instana UI select the “Stan” the robot icon in the upper left corner`}</p>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"images/stan.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Next, click the `}<strong parentName=\"p\">{`“Deploy Agent”`}</strong>{` button near the upper right corner.`}</p>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"images/DeployAgent.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`A window will open with a list of different environments where you can install the Instana Agent.  To install into OpenShift, select OpenShift from the list.`}</p>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"images/OpenShift.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Select the dropdown list next to the word `}<strong parentName=\"p\">{`“Technology”`}</strong>{`.  Notice that there are multiple options for installing the Agent.  Choose the `}<strong parentName=\"p\">{`“YAML”`}</strong>{` option from the list.`}</p>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"images/yaml.png\",\n        \"alt\": null\n      }}></img>{` `}</p>\n    <p>{`Enter a name for the Cluster and Zone - this will allow you to find your Agent and Kubernetes Cluster within the user interface and not get confused by data coming in from other agents.  Specify `}<strong parentName=\"p\">{`Quote of the Day`}</strong>{` for the Zone name since this OCP cluster will be used for the `}<strong parentName=\"p\">{`Quote of the Day`}</strong>{` application.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`⚠`}{` HINT: Zones are used to organize the Instana Agents (and sensors).  Many customers create zones for lines of business, data center locations, public cloud regions, etc`}</strong></p>\n    </blockquote>\n    <p>{`Next, click the “Download” button to download the yaml file.  The yaml file has been configured specifically to connect to your Instana backend environment and will contain the `}<strong parentName=\"p\">{`Cluster`}</strong>{` name and `}<strong parentName=\"p\">{`Zone`}</strong>{` name that you previously specified.`}</p>\n    <p>{`In the terminal session where you are authenticated to your OCP cluster you can now install the downloaded yaml file. This will install the Instana Agent as a daemonset within the OpenShift cluster.  The process is nearly identical for other versions of Kubernetes.`}</p>\n    <p>{`To install the Agent using the yaml file, type:  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`oc create -f configuration.yaml\n`}</code></pre>\n    <p>{`You will see output similar to what’s shown below\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/install.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{` Next, you need to setup the proper permissions for the service account.  This will allow the Agent to have access to monitor the entire cluster.`}</p>\n    <p>{` First, change to the instana-agent OpenShift project by typing:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`oc project instana-agent\n`}</code></pre>\n    <p>{` Type the following command to setup the proper permissions:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`oc adm policy add-scc-to-user privileged -z instana-agent\n`}</code></pre>\n    <p>{` You should see output similar to the screen capture below.\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/permissions.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Next, type:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`oc get pods -n instana-agent\n`}</code></pre>\n    <p>{`This will provide a list of the pods that are in this namespace (project). `}<strong parentName=\"p\">{`There should be one pod for each worker node in your target cluster`}</strong>{`. The Agent is deployed as a daemonset so that if a new Worker Node is added to the cluster, monitoring will automatically get added to the new Worker Node.  Check, if the instana-agent pods are running.\n`}<img parentName=\"p\" {...{\n        \"src\": \"images/getPods.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`If there are no pods running, wait a minute and issue the “oc get pods” command again. This completes the installation of Instana agent on OpenShift cluster.`}</p>\n    <hr></hr>\n    <h2>{`2-5:  Troubleshooting Instana Agent Installation on Kubernetes Cluster`}</h2>\n    <p>{`If you don’t see your cluster in Instana UI after a couple of minutes, you need to troubleshoot the Instana Agent.  From a terminal window with connection to your OCP cluster, issue the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`oc get pods -n instana-agent\n`}</code></pre>\n    <p>{`Check to make sure that all pods are running (since Instana agent runs as daemonset, number of pods should be equal to number of nodes in your cluster). If pods are running, you can examine the logs of one of the pods. Type:  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`oc logs POD_NAME -c instana-agent\n`}</code></pre>\n    <p>{`where `}<strong parentName=\"p\">{`POD_NAME`}</strong>{` is one of the pods listed in the previous command.`}</p>\n    <hr></hr>\n    <h2>{`2-6:  Configuring Proxy`}</h2>\n    <p>{`If there is no direct connectivity for the Instana agent you may need to setup a proxy. There are 2 connections with 2 different locations for configuration:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Connection to `}<strong parentName=\"li\">{`Instana Backend`}</strong>{` - defined in `}<em parentName=\"li\">{`INSTANA-AGENT-DIR`}</em>{`/etc/instana/com.instana.agent.main.sender.Backend.cfg`}</li>\n      <li parentName=\"ul\">{`Connection to `}<strong parentName=\"li\">{`Agent/Sensor Repository`}</strong>{` - defined in  `}<em parentName=\"li\">{`INSTANA-AGENT-DIR`}</em>{`/etc/mvn-settings.xml (This is used in case client wants to setup internal maven2 mirror repository)`}</li>\n    </ul>\n    <p>{`Proxy configuration goes into the respective files. You can also use `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/obi/current?topic=requirements-installing-host-agent-docker#agent-configuration\"\n      }}>{`environment variables`}</a></p>\n    <p>{`For backend connectivity you have to define `}<em parentName=\"p\">{`INSTANA`}<em parentName=\"em\">{`AGENT_PROXY`}</em></em>{` variables. For repository connectivity you have to define `}<em parentName=\"p\">{`INSTANA`}<em parentName=\"em\">{`REPOSITORY_PROXY`}</em></em>{` variables.`}</p>\n    <hr></hr>\n    <h2>{`2-7:  Configuring Instana Agent`}</h2>\n    <p>{`There are multiple ways to configure Instana agent. Settings related to agent functionality reside in `}<inlineCode parentName=\"p\">{`configuration.yaml`}</inlineCode>{` file located by default in `}<inlineCode parentName=\"p\">{`/opt/instana/agent/etc/instana`}</inlineCode>{` directory. However, other settings related to agent environment sits in other *.cfg files.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`⚠`}{` HINT: Agent will actually read and use ANY yaml file in that directory.`}</strong></p>\n    </blockquote>\n    <p>{`Some customers choose to have separate yaml files for each key technology.  For example, you could create a mq.yaml file and an ace.yaml file in the same directory and it would read both files. `}<inlineCode parentName=\"p\">{`configuration.yaml`}</inlineCode>{` will contain sample configuration entries and comments for ALL available sensors at the time of your install, `}<strong parentName=\"p\">{`BUT`}</strong>{` it will not automatically add new sensor config as new sensors become available.`}</p>\n    <p>{`For host based installation you can update `}<inlineCode parentName=\"p\">{`configuration.yaml`}</inlineCode>{` and agent should pick up changes automatically (no restart required). For Kubernetes based installations, there is `}<inlineCode parentName=\"p\">{`instana-agent`}</inlineCode>{` configmap where you can customize the same content that you see in the configuration.yaml file.  Using kubernetes/oc commands, you can edit the configmap.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`⚠`}{` HINT: Instana agent configuration file must be a proper YAML - if your changes are not applied, make sure that it’s not a formatting error`}</strong></p>\n    </blockquote>\n    <hr></hr>\n    <h2>{`2-8:  Agent Configuration Troubleshooting`}</h2>\n    <p>{`The first place to look when the agent does not start properly or does not work as expected is agent log file. By default it is located in `}<inlineCode parentName=\"p\">{`/opt/instana/agent/data/log/agent.log`}</inlineCode></p>\n    <p>{`In case of Kubernetes based deployment you have to look at logs of `}<inlineCode parentName=\"p\">{`instana-agent`}</inlineCode>{` pods running in `}<inlineCode parentName=\"p\">{`instana-agent`}</inlineCode>{` namespace.`}</p>\n    <hr></hr>\n    <h2>{`2-9:  Configuring GitOps for Agents`}</h2>\n    <p>{`If you don’t want to modify the Instana agent configuration files for each agent locally, you can setup a centralized git repositoy for configuration files and instruct Instana agent to use these files. To accomplish that, follow the steps from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/obi/current?topic=configuration-git-based-management#git-based-configuration-management\"\n      }}>{`documentation`}</a>{`.`}</p>\n    <p>{`The Instana agent fetches configuration updates from the remote repository:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Upon the startup or restart.`}</li>\n      <li parentName=\"ol\">{`Through a reboot initiated over the Agent Management Dashboard.`}</li>\n      <li parentName=\"ol\">{`Through a configuration change over the Agent Management Dashboard.`}</li>\n      <li parentName=\"ol\">{`Through the Web API as described in the Host Agent section and the integrations that rely on it like the GitHub Update Agent action.`}</li>\n    </ol>\n    <hr></hr>\n    <p>{`Proceed to section 3, where you will install and instrument the Bee-Travels application.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","makeShortcode","name","console","warn","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}